configureTable: .text "."
                .byte $89
                .byte $BC       ;
                .text "Baud"
                .byte $D0       ;
                .byte $D2       ;
                .text "Boot"
                .byte $C1       ;
                .byte $5C       ; \
                .text "Caps"
                .byte $D4       ;
                .byte $33       ; 3
                .text "Data"
                .byte $D0       ;
                .byte $DD       ;
                .text "Delay"
                .byte $F8       ;
                .byte $B8       ;
                .text "Dir"
                .byte $C0       ;
                .byte $36       ; 6
                .text "Fdrive"
                .byte $D0       ;
                .byte $B0       ;
                .text "File"
                .byte $D8       ;
                .byte $80       ;
                .text "Ignore"
                .byte $89       ;
                .byte $12
                .text "Lang"
                .byte $D8       ;
                .byte $84       ;
                .text "Loud"
                .byte $C1       ;
                .byte $59       ; Y
                .text "Mode"
                .byte $D8       ;
                .byte $A8       ;
                .text "NoBoot"
                .byte $C0       ;
                .byte $5C       ; \
                .text "NoCaps"
                .byte $D2       ;
                .byte $33       ; 3
                .text "NoDir"
                .byte $C1       ;
                .byte $36       ; 6
                .text "NoScroll"
                .byte $C1       ;
                .byte $5B       ; [
                .text "Print"
                .byte $D0       ;
                .byte $D5       ;
                .text "Quiet"
                .byte $C0       ;
                .byte $59       ; Y
                .text "Repeat"
                .byte $F8       ;
                .byte $C0       ;
                .text "Scroll"
                .byte $C0       ;
                .byte $5B       ; [
                .text "ShCaps"
                .byte $D1       ;
                .byte $33       ; 3
                .text "Proportional"
                .byte $C0       ;
                .byte $6D       ; m
                .text "Switched"
                .byte $C1
                .byte $6D; m
                .text "Stick"
                .byte $D8
                .byte $E8
                .text "TV"
                .byte $89
                .byte $64; d
                .byte 0
                .byte 8
                .byte $51; Q
                .byte $18
                .byte $2C; ,
                .byte $65; e
                .byte $63; c
                .byte $74; t
                .byte $6F; o
                .byte $72; r
                .byte $79; y
                .byte $FF
                .byte $69; i
                .byte $66; f
                .byte $74; t
                .byte $FF
L8850:
                .byte $24; $
                .byte $63       ; c
                .byte $8F       ;
L8853:
                .byte $BE
                .byte $BE       ;
                .byte $C5       ;

;-------------------------------------------------------------------------

starCONFIGUREOrStarSTATUS:
                asl a
                adc #$80
                php
                lda #<configureTable
                sta $B0
                lda #>configureTable
                sta $B1
                ldx #$FF
                jsr mos.skipSpacesAndCheckForCRInStringInput
                bne L886C
                jsr fetchCommandTableByte

L886C:
                bit mos.valueFF     ; V=1 to indicate 2-byte metadata
                jsr utils_8A8F
                bcs L887B    ; taken if something valid found
                plp
                jsr unknownCONFIGOrStatus
                bne L88EB
                rts

;-------------------------------------------------------------------------

L887B:
                jsr mos.skipSpacesAndCheckForCRInStringInput
                plp
                bvc L8884
                jsr L895D

;-------------------------------------------------------------------------

L8884:       

                lda configureTable,x; "."
                bit #$40
                bne L8895
                pha
                lda configureTable+1,x
                pha
                lda (stringInputBufferAddress),y
                eor #$D
                rts

;-------------------------------------------------------------------------

L8895:
                and #7
                inc configureTable+1,x
                bvs L88D9
                bcs L88CE
                bmi L88A5
                jsr L895D
                bra L88CB

;-------------------------------------------------------------------------

L88A5:
                phx
                jsr L89B5
                plx
                cpx #7
                bne L88B4
                tay
                bne L88B3
                lda #7

L88B3:
                dec a

L88B4:
                cpx #$4D
                bne L88C1
                bit #$78
                bne L88EB
                tay
                bpl L88C1
                eor #$88

L88C1:
                jsr L8B8D
                cmp word_8B99,y
                beq L88CB
                bcs L88EB
                

L88CB:
                jmp L88EE

;-------------------------------------------------------------------------

L88CE:
                bpl locret_88D8
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "<D>"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

locret_88D8:
                rts

;-------------------------------------------------------------------------

L88D9:
                bmi L88E2
                lda configureTable+1,x
                clc
                jmp L8ADA

;-------------------------------------------------------------------------

L88E2:
                jsr L8A64

L88E5:
                jsr L8BAA
                jmp OSNEWL

;-------------------------------------------------------------------------

L88EB:
                jmp mos.badCommandError

;-------------------------------------------------------------------------

L88EE:
                sta $B0
                jsr L8B8D
                lda word_8B99,y
                jsr L8B84
                bra L88FE

;-------------------------------------------------------------------------

L88FB:
                asl a
                asl $B0

L88FE:
                dey
                bpl L88FB
                sta $B1
                jsr L8B78
                jsr readRTCByte
                ora $B1
                eor $B1
                ora $B0
                tay

L8910:
                jmp writeRTCByte

;-------------------------------------------------------------------------

                bvs L892D
                bcs L8948
                beq L8927
                jsr L89B5
                phx
                lda #0
                jsr L8929
                ply
                ldx #$E
                bra L8910

;-------------------------------------------------------------------------

L8927:
                lda #1

;-------------------------------------------------------------------------

L8929:

                ldx #$BA

L892B:
                bra L88CB

;-------------------------------------------------------------------------

L892D:
                jsr readUsePrinterIgnoreChar
                bcc L8941
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "No Ignore"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                rts

;-------------------------------------------------------------------------

L8941:
                ldx #$E
                jsr readRTCByte

L8946:
                bra L88E5

;-------------------------------------------------------------------------

L8948:
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "[<D>]"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                rts

;-------------------------------------------------------------------------

L8953:

                jsr parseNumberFromString

L8956:
                bcc L88EB
                txa
                cmp #$10

L895B:
                bcs L88EB

L895D:
                pha
                jsr mos.skipSpacesAndCheckForCRInStringInput

L8961:
                bne L88EB
                pla
                rts

;-------------------------------------------------------------------------

                bvs L8996
                bcs L89A4
                beq L8992
                jsr parseNumberFromString
                bcc L8956
                cpx #$FC
                bcs L8978
                cpx #4
                bcs L895B

L8978:
                txa
                asl a
                sta $B1
                ldx #0
                jsr mos.LF30A
                beq L898B
                jsr L89B5
                cmp #2
                bcs L895B
                tax

L898B:
                txa
                ora $B1

L898E:
                ldx #$BC
                bra L892B

;-------------------------------------------------------------------------

L8992:
                lda #0
                bra L898E

;-------------------------------------------------------------------------

L8996:
                jsr L8BD6
                jsr L8BA9
                lda #','
                jsr OSWRCH
                txa
                bra L8946

;-------------------------------------------------------------------------

L89A4:
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "[<D>[,<D>]]"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                rts

;-------------------------------------------------------------------------

L89B5:       
                jsr parseNumberFromString
                bcc L8956
                txa
                bra L895D
                

;-------------------------------------------------------------------------

                bne L8961
                php
                phy
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "Configuration "
                .byte 0

;-------------------------------------------------------------------------

                bvs L89E4
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "options:"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                bra L89F0

;-------------------------------------------------------------------------

L89E4:
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "status:"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

L89F0:
                sec
                jsr L8ADA
                ply
                plp
                php
                jsr unknownCONFIGOrStatus
                plp
                bvs locret_8A63
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "Where:"
                .byte $D
                .text "D is a decimal number, or"
                .byte $D
                .text "a hexadecimal number preceded by &"
                .byte $D
                .text "Items within [ ] are optional"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

locret_8A63:
                rts

;-------------------------------------------------------------------------

L8A64:       
                php
                phy
                phx
                jsr L8B78
                jsr readRTCByte
                plx
                jsr L8B84
                bra L8A74

;-------------------------------------------------------------------------

L8A73:
                lsr a

L8A74:
                dey
                bpl L8A73
                jsr L8B8D
                and word_8B99,y
                cpx #7
                bne L8A82
                inc a

L8A82:
                cpx #$4D
                bne L8A8C
                bit #8
                beq L8A8C
                eor #$88

L8A8C:
                ply
                plp
                rts
                

;-------------------------------------------------------------------------

utils_8A8F:     
                sty $E6
                bra L8A9D

;-------------------------------------------------------------------------

L8A93:
                eor ($B0)
                and #$DF
                bne L8AAE    ; taken if char didn't match
                jsr fetchCommandTableByte
                iny

L8A9D:
                lda (stringInputBufferAddress),y
                jsr mos.isLetter
                bcc L8A93    ; taken if letter
                lda ($B0)   ; next table byte
                bmi L8AC9
                lda (stringInputBufferAddress),y
                cmp #'.'
                beq L8AB2    ; taken if abbreviated

L8AAE:
                clc
                ldy $E6
                dey

L8AB2:
                iny             ; skip the '.'

L8AB3:
                jsr fetchCommandTableByte
                beq locret_8ACD
                bpl L8AB3    ; keep looping through chars if necessary
                bcs locret_8ACD
                jsr fetchCommandTableByte
                bvs L8A9D    ; if V=1, 2-byte metadata; if V=0, 4-byte metadata
                jsr fetchCommandTableByte
                jsr fetchCommandTableByte
                bra L8A9D

;-------------------------------------------------------------------------

L8AC9:
                jsr fetchCommandTableByte
                sec

locret_8ACD:
                rts
                

;-------------------------------------------------------------------------

fetchCommandTableByte:
                inx
                lda ($B0)
                pha
                inc $B0
                bne L8AD8
                inc $B1

L8AD8:
                pla
                rts
                

;-------------------------------------------------------------------------

L8ADA:       
                pha
                ldy #3
                ldx #2

L8ADF:
                inx
                lda configureTable,x; "."
                beq L8B3F
                bpl L8ADF
                bvc L8B08
                and #$40
                beq L8AFD
                lda configureTable+1,x
                bmi L8AFD
                jsr L8A64
                eor configureTable,x; "."
                and #7
                bne L8B39
                dec a

L8AFD:
                bcs L8B08
                bpl L8B39
                pla
                pha
                eor configureTable+1,x
                bne L8B39

L8B08:
                php
                phx
                bvc L8B15
                cpy #$35
                bne L8B15
                jsr readUsePrinterIgnoreChar
                bcs L8B30

L8B15:
                ldx #9
                jsr L8B6B
                and #$40
                beq L8B2D
                lda configureTable+1,y
                bmi L8B2D
                jsr OSNEWL
                bra L8B37

;-------------------------------------------------------------------------

L8B28:
                lda #' '
                jsr OSWRCH

L8B2D:
                dex
                bpl L8B28

L8B30:
                plx
                plp
                php
                phx
                jsr L8884

L8B37:
                plx
                plp

L8B39:
                inx
                txa
                tay
                iny
                bra L8ADF

;-------------------------------------------------------------------------

L8B3F:
                pla
                rts
                

;-------------------------------------------------------------------------

L8B41:
                jsr OSWRCH
                pha
                phy
                tya
                ldy #2

L8B49:
                cmp L8850,y
                bne L8B55
                lda L8853,y
                tay
                jsr L8B6B

L8B55:
                dey
                bpl L8B49
                ply
                pla
                iny
                dex
                eor #$20
                ora configureTable,y; "."
                and #$A0
                bne L8B6B
                lda #' '
                jsr OSWRCH
                dex

;-------------------------------------------------------------------------

L8B6B:       

                lda configureTable,y; "."
                bpl L8B41
                rts
                

;-------------------------------------------------------------------------

unknownCONFIGOrStatus:
                lda #$14
                rol a
                tax
                jmp mos.makeROMServiceCall
                

;-------------------------------------------------------------------------

L8B78:       
                lda configureTable+1,x
                and #$78
                lsr a
                lsr a
                lsr a
                adc #5
                tax
                rts
                

;-------------------------------------------------------------------------

L8B84:       
                pha
                lda configureTable+1,x
                and #7
                tay
                pla
                rts
                

;-------------------------------------------------------------------------

L8B8D:       
                pha
                lda configureTable,x; "."
                lsr a
                lsr a
                lsr a
                and #7
                tay
                pla
                rts
                

;-------------------------------------------------------------------------

word_8B99:      .word %1100000001
                .word %111100000111
                .word %11111100011111
                .word %1111111101111111

;-------------------------------------------------------------------------

readUsePrinterIgnoreChar:
                phy
                jsr readDefaults2
                lsr a
                lsr a
                ply
                rts
                

;-------------------------------------------------------------------------

L8BA9:       
                tya
                

;-------------------------------------------------------------------------

L8BAA:       
                sec
                ldy #$FF
                php

L8BAE:
                iny
                sbc #$64
                bcs L8BAE
                adc #$64
                plp
                jsr L8BCA
                ldy #$FF
                php
                sec

L8BBD:
                iny
                sbc #$A
                bcs L8BBD
                adc #$A
                plp
                jsr L8BCA
                clc
                tay
                

;-------------------------------------------------------------------------

L8BCA:       
                pha
                tya
                bne L8BD0
                bcs L8BD4

L8BD0:
                jsr printHexDigit
                clc

L8BD4:
                pla
                rts
                

;-------------------------------------------------------------------------

L8BD6:       
                ldx #$BC
                jsr L8A64
                lsr a
                bit #4
                beq L8BE2
                ora #$FC

L8BE2:
                tay
                lda #0
                rol a
                tax
                rts
                

;-------------------------------------------------------------------------

unk_8BE8:       .byte 1
                .byte 9
                .byte $A
                .byte $B
                .byte $C
                .byte 2
                .byte 3
                .byte 4
                .byte 5
                .byte 6

;-------------------------------------------------------------------------

L8BF2:
                ldy #9

L8BF4:
                lda ($F0),y
                ldx unk_8BE8,y
                sta osfileParameterBlock,x
                dey
                bpl L8BF4
                iny

L8C00:
                lda $B0,y
                pha
                iny
                cpy #4
                bcc L8C00
                jsr L8DB7
                ldy #3

L8C0E:
                pla
                sta $B0,y
                dey
                bpl L8C0E
                rts

;-------------------------------------------------------------------------

L8C16:
                bit osfileParameterBlock+1
                bvc L8C4B
                ldy #4
                lda osfileParameterBlock+5
                ldx osfileParameterBlock+6

L8C23:
                cpx #$3F
                bcc L8C3D
                bne L8C2D
                cmp #$F0
                bcc L8C3D

L8C2D:
                sbc #$F0
                pha
                txa
                sbc #$3F
                tax
                pla
                iny
                cpy #8
                bcc L8C23
                jmp L9527

;-------------------------------------------------------------------------

L8C3D:
                adc #$10
                sta osfileParameterBlock+5
                txa
                adc #$80
                sta osfileParameterBlock+6
                sty osfileParameterBlock+4

L8C4B:
                lda osfileParameterBlock+4
                cmp #$10
                bcc L8C5B
                cmp #$14
                bcs L8C74
                eor #$14
                sta osfileParameterBlock+4

L8C5B:
                tax
                jsr mos.LF89A
                bcs L8C68
                bit osfileParameterBlock+1
                bpl L8C74
                bvs L8C74

L8C68:
                jsr L8F84
                ldx osfileParameterBlock+4
                eor osfileParameterBlock+1
                and #$40
                rts

;-------------------------------------------------------------------------

L8C74:
                jsr doFollowingError

;-------------------------------------------------------------------------

                .byte $80
                .text "Bad id"
                .byte 0

;-------------------------------------------------------------------------

L8C7F:       
                jsr readHexDigit
                bit mos.valueFF
                bcs L8C94
                and #$DF
                cmp #$5B
                bcs L8CAA
                cmp #'W'
                bcc L8CAA
                sbc #'S'
                iny

L8C94:
                cmp #1
                bne L8CA1
                dey
                jsr parseNumberFromString
                txa
                cmp #$10
                bcs L8C74

L8CA1:
                sta osfileParameterBlock+4
                lda #$40
                trb osfileParameterBlock+1
                clv

L8CAA:
                jmp mos.skipSpacesAndCheckForCRInStringInput
                

;-------------------------------------------------------------------------

starSRDATAOrStarSRROM:
                pha
                jsr L8C7F
                bvs L8CD6
                bne L8CD6
                pla
                asl a
                sta osfileParameterBlock+1
                jsr L8C4B
                bcs L8C74
                bne L8CC7
                ora romInformationTable,x
                beq L8CD0
                rts

;-------------------------------------------------------------------------

L8CC7:
                lda hazel.dfde
                eor L8F4C,x
                sta hazel.dfde

L8CD0:
                jsr L8F4A
                jmp mos.LF87C

;-------------------------------------------------------------------------

L8CD6:
                jmp mos.badCommandError

;-------------------------------------------------------------------------

L8CD9:       
                jsr L8CEA
                bcs locret_8CE9
                jsr mos.LF846
                sty osfileParameterBlock+5
                lda 1,x
                sta osfileParameterBlock+6

locret_8CE9:
                rts
                

;-------------------------------------------------------------------------

L8CEA:       
                ldx #$B0
                bit osfileParameterBlock+1
                bpl L8CF3
                ldx #$B2

L8CF3:
                stz 0,x
                ldy osfileParameterBlock+5
                tya
                clc
                adc osfileParameterBlock+2
                sta osfileParameterBlock+2
                lda osfileParameterBlock+6
                sta 1,x
                adc osfileParameterBlock+3
                sta osfileParameterBlock+3
                sec
                jsr L8F62
                

;-------------------------------------------------------------------------

L8D0F:

                cpy osfileParameterBlock+2
                bne L8D1C
                lda 1,x
                cmp osfileParameterBlock+3
                bne L8D1C
                rts

;-------------------------------------------------------------------------

L8D1C:
                bit osfileParameterBlock+1
                bvc L8D53
                lda 1,x
                cmp #$C0
                bcc L8D53
                lda #$80
                sta 1,x
                inc osfileParameterBlock+4
                lda osfileParameterBlock+4
                cmp #8
                bcs L8D63
                phx
                jsr L8C4B
                bne L8D63
                plx
                ldy #$10
                lda osfileParameterBlock+2
                sec
                sbc #$F0
                sta osfileParameterBlock+2
                lda osfileParameterBlock+3
                sbc #$3F
                sta osfileParameterBlock+3
                clc
                jsr L8F62

L8D53:
                lda osfileParameterBlock+4
                clc

locret_8D57:
                rts

;-------------------------------------------------------------------------

L8D58:
                jsr parseHexAddressFromCommandLine

L8D5B:
                lda osfileParameterBlock+2,x
                ora osfileParameterBlock+3,x
                beq locret_8D57

L8D63:
                jmp L9527

;-------------------------------------------------------------------------

L8D66:
                jsr mos.skipSpacesAndCheckForCRInStringInput
                and #$DF
                cmp #'I'
                bne L8D7C
                iny
                lda osfileParameterBlock+1
                cmp #$80
                bne L8DB4
                ora #$20
                sta osfileParameterBlock+1

L8D7C:
                jmp mos.skipSpacesAndCheckForCRInStringInput

;-------------------------------------------------------------------------

starSRREADOrStarSRWRITE:
                asl a
                sta osfileParameterBlock+1
                ldx #9
                jsr parseHexAddressFromCommandLine
                jsr L8F54
                ldx #2
                jsr parseHexAddressFromCommandLine
                bvs L8DA2
                ldx #$FC

L8D94:
                lda osfileParameterBlock+2-$FC,x
                sbc osfileParameterBlock+9-$FC,x
                sta osfileParameterBlock+2-$FC,x
                inx
                bne L8D94
                bcc L8D63

L8DA2:
                ldx #2
                jsr L8D5B
                ldx #5
                jsr L8D58
                jsr L8C7F
                jsr L8D66
                beq L8DB7

L8DB4:
                jmp mos.badCommandError

;-------------------------------------------------------------------------

L8DB7:       

                php
                jsr L8C16
                beq L8DC0
                jsr L8C74

L8DC0:
                jsr L8F40
                jsr L8CD9
                plp
                jmp mos.LF8D1
                

;-------------------------------------------------------------------------

starSRLOADOrStarSRSAVE:
                asl a
                sta osfileParameterBlock+1
                lsr hazel.tempFSFlag
                stx stringInputBufferAddress
                sty stringInputBufferAddress+1
                stx osfileParameterBlock+2
                sty osfileParameterBlock+3
                ldy #0
                jsr mos.gsinitForFilenameParsing

L8DE0:
                jsr mos.gsreadEntryPoint
                bcc L8DE0
                ldx #5
                jsr L8D58
                bit osfileParameterBlock+1
                bmi L8E0D
                jsr L8F54
                ldx #7
                jsr L8D58
                bvs L8E0D
                sec
                ldx #$FE

L8DFC:
                lda osfileParameterBlock+7-$FE,x
                sbc osfileParameterBlock+5-$FE,x
                sta osfileParameterBlock+7-$FE,x
                inx
                bne L8DFC
                bcs L8E0D
                jmp L8D63

;-------------------------------------------------------------------------

L8E0D:
                jsr L8C7F
                stz osfileParameterBlock+$B
                ldx #0
                jsr L8D66
                and #$DF
                cmp #'Q'
                bne L8E20
                dex
                iny

L8E20:
                stx osfileParameterBlock+$C
                ldx ACCCON
                jsr L8D66
                beq L8E41
                jmp L8DB4

;-------------------------------------------------------------------------

L8E2E:
                ldx ACCCON
                jsr mos.selectHAZEL
                stz hazel.tempFSFlag
                ldy #$B

L8E39:
                lda ($F0),y
                sta osfileParameterBlock+1,y
                dey
                bpl L8E39

L8E41:
                php
                phx
                jsr L8C16
                beq L8E4B
                jmp L8C74

;-------------------------------------------------------------------------

L8E4B:
                lda osfileParameterBlock+$C
                bmi L8E5B
                ora osfileParameterBlock+$B
                bne L8E72
                lda #2
                ldy #$DD
                bra L8E66

;-------------------------------------------------------------------------

L8E5B:
                jsr mos.osbyte84
                tya
                sec
                sbc oshwm
                ldy oshwm

L8E66:
                stz osfileParameterBlock+9
                sty osfileParameterBlock+$A
                stz osfileParameterBlock+$B
                sta osfileParameterBlock+$C

L8E72:
                bit osfileParameterBlock+1
                bpl L8EAF
                lda #$40
                jsr L8F1B

L8E7C:
                sec
                jsr L8EED
                lda #4
                jsr L8F14_500
                php
                bcc L8E96
                ldx #$FE

L8E8A:
                lda osfileParameterBlock+2-$FE,x

L8E8D:
                sbc hazel.moveOSGBPB+OSGBPBParameterBlock.count+0-$fe,x
                sta osfileParameterBlock+2-$FE,x
                inx
                bne L8E8A

L8E96:
                jsr L8CD9
                plp
                bcc L8E7C

L8E9C:
                ldy hazel.moveSrcHandle
                stz hazel.moveSrcHandle
                lda #0
                jsr OSFIND
                pla
                sta ACCCON
                plp
                jmp mos.LF8D1

;-------------------------------------------------------------------------

L8EAF:
                lda #$80
                jsr L8F1B

L8EB4:
                sec
                ldx #$FE

L8EB7:
                lda osfileParameterBlock+7-$FE,x
                sta ($B0-$FE)&$ffff,x
                sbc osfileParameterBlock+$B-$FE,x
                sta osfileParameterBlock+7-$FE,x
                inx
                bne L8EB7
                ora osfileParameterBlock+7
                php
                jsr L8EED
                jsr L8CD9
                lda #2
                jsr L8F14_500
                plp
                bcc L8E9C
                beq L8E9C
                bra L8EB4

;-------------------------------------------------------------------------

L8EDC:
                lda #0
                ldx #7

L8EE0:
                pha
                jsr mos.LF89A
                pla
                rol a
                dex
                cpx #4
                bcs L8EE0
                tax
                rts

;-------------------------------------------------------------------------

L8EED:       
                lda hazel.moveSrcHandle
                sta hazel.moveOSGBPB+0
                ldx #1

L8EF5:
                lda osfileParameterBlock+9,x
                sta $DFC8,x
                lda osfileParameterBlock+$B,x
                bcs L8F02
                lda $B0,x

L8F02:
                sta $DFCC,x
                sta osfileParameterBlock+2,x
                lda #$FF
                sta $DFCA,x
                stz $DFCE,x
                dex
                bpl L8EF5
                rts
                

;-------------------------------------------------------------------------

L8F14_500:       
                ldx #<hazel.moveOSGBPB
                ldy #>hazel.moveOSGBPB
                jmp OSGBPB
                

;-------------------------------------------------------------------------

L8F1B:       
                asl hazel.tempFSFlag
                ldx osfileParameterBlock+2
                ldy osfileParameterBlock+3
                jsr OSFIND
                tax
                bne L8F3D
                jsr doFollowingError

;-------------------------------------------------------------------------

                .byte $D6
                .text "File not found"
                .byte 0

;-------------------------------------------------------------------------

L8F3D:
                sta hazel.moveSrcHandle
                

;-------------------------------------------------------------------------

L8F40:       
                ldx osfileParameterBlock+4
                bit osfileParameterBlock+1
                bpl locret_8F4F
                bvs locret_8F4F

L8F4A:
                lda #2

L8F4C:
                sta romInformationTable,x

locret_8F4F:
                rts
                

;-------------------------------------------------------------------------

unk_8F50:       .byte 1
                .byte 2
                .byte 4
                .byte 8

;-------------------------------------------------------------------------

L8F54:       
                clv
                lda (stringInputBufferAddress),y
                cmp #'+'
                bne locret_8F61
                bit mos.valueFF
                jsr mos.incAndSkipSpaces

locret_8F61:
                rts
                

;-------------------------------------------------------------------------

L8F62:       
                phx
                txa
                eor #2
                tax
                bcc L8F73
                lda osfileParameterBlock+9
                sta 0,x
                lda osfileParameterBlock+$A
                sta 1,x

L8F73:
                sty osfileParameterBlock
                lda 0,x
                sec
                sbc osfileParameterBlock
                sta 0,x
                bcs L8F82
                dec 1,x

L8F82:
                plx
                rts
                

;-------------------------------------------------------------------------

L8F84:       
                cpx #4
                bcc L8FA4
                cpx #8
                bcs L8FA4

L8F8C:
                ldy ACCCON
                jsr mos.selectHAZEL
                lda unk_8F50-4,x
                ldx hazel.dfde
                and hazel.dfde
                beq L8F9F
                lda #$40

L8F9F:
                sty ACCCON
                clc
                rts

;-------------------------------------------------------------------------

L8FA4:
                sec
                lda #0
                rts
                
