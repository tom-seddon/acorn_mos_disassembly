byte2: .macro value,value350
                .if version==350
                .byte \value350
                .else
                .byte \value
                .endif
                .endmacro

configureTable: .text "."
                .if olivetti
                .byte $8a,$0d
                .elsif version==350
                .byte $87,$89
                .else
                .byte $89
                .if version<510
                .byte $BC
                .else
                .byte $f9
                .endif
                .endif
                .text "Baud"
                .byte $D0
                .byte2 $d2,$d2|$20
                .text "Boot"
                .byte $C1
                .byte2 $5c,$5c|$20
                .text "Caps"
                .byte $D4
                .byte2 $33,$33^$60
                .if olivetti
                .text "Country"
                .byte $f8
                .byte $f0
                .endif
                .text "Data"
                .byte $D0
                .byte2 $dd,$dd|$20
                .text "Delay"
                .byte $F8
                .byte2 $b8,$b8^$60
                .text "Dir"
                .byte $C0
                .byte2 $36,$36^$60
                .if version==350
                .text "ExTube"
                .byte $c1
                .byte $7a
                .endif
                .text "Fdrive"
                .byte $D0
                .byte2 $b0,$b0^$60
                .text "File"
                .byte $D8
                .byte2 $80,$80|$20
                .if version==350
                .text "Floppy"
                .byte $c1
                .byte $57
                .endif
                .if version==350
                .text "Hard"
                .byte $c0
                .byte $57
                .endif
                .text "Ignore"
                .byte2 $89,$86
                .if version<510
                .byte2 $12,$df
                .else
                .if olivetti
                .byte $63
                .else
                .byte $4f
                .endif
                .endif
                .if version==350
                .text "InTube"
                .byte2 $b8,$c0
                .byte2 $a4,$7a
                .endif
                .text "Lang"
                .byte $D8
                .byte2 $84,$84|$20
                .text "Loud"
                .byte $C1
                .byte2 $59,$59|$20
                .text "Mode"
                .byte $D8
                .byte2 $A8,$a8^$60
                .text "NoBoot"
                .byte $C0
                .byte2 $5C,$5c|$20
                .text "NoCaps"
                .byte $D2
                .byte2 $33,$33^$60
                .text "NoDir"
                .byte $C1
                .byte2 $36,$36^$60
                .text "NoScroll"
                .byte $C1
                .byte2 $5B,$5b|$20
                .if version==350
                .text "NoTube"
                .byte $c0
                .byte $70
                .endif
                .text "Print"
                .byte $D0
                .byte2 $D5,$d5|$20
                .text "Quiet"
                .byte $C0
                .byte2 $59,$59|$79
                .text "Repeat"
                .byte $F8
                .byte2 $C0,$c0|$20
                .text "Scroll"
                .byte $C0
                .byte2 $5B,$5b|$20
                .text "ShCaps"
                .byte $D1
                .if version==350
                .byte $53
                .else
                .byte $33
                .endif
                .if version==350
                .text "Tube"
                .byte $c1
                .byte $70
                .endif
                .if version>=500
                .text "Proportional"
                .byte $C0
                .byte $6D
                .endif
                .if version>=500
                .text "Switched"
                .byte $C1
                .byte $6D; m
                .endif
                .if version>=500
                .text "Stick"
                .byte $D8
                .byte $E8
                .endif
                .text "TV"
                .if version==350
                .byte $87
                .byte $31
                .else
                .byte $89
                .if version<510
                .byte $64; d
                .else
                .if olivetti
                .byte $b5
                .else
                .byte $a1
                .endif
                .endif
                .endif
                .byte 0
                .if version==350
                .byte $00
                .byte $71
                .else
                .byte 8
                .byte $51; Q
                .endif
                .byte $18
                .if version==350
                .byte $4C
                .else
                .byte $2C; ,
                .endif
                .text "ectory",$ff
                .if version==350
                .text "ternal",255
                .endif
                .text "ift",$ff
L8850:
                .if version==350
                .text $24,$81,$28,$54,$b5
                .elsif olivetti
                .text $2d,$6c,$98
                .else
                .text $24,$63,$8f
                .endif
L8853:
                .if version==350
                .byte $cb,$cb,$d2,$d2,$d9
                .elsif olivetti
                .byte $c7,$c7,$ce
                .else
                .byte $be,$be,$c5
                .endif

;-------------------------------------------------------------------------

starCONFIGUREOrStarSTATUS:
                asl a
                adc #$80
                php
                lda #<configureTable
                sta $B0
                lda #>configureTable
                sta $B1
                ldx #$FF
                jsr mos.skipSpacesAndCheckForCRInStringInput
                bne L886C
                jsr fetchCommandTableByte

L886C:
                bit mos.valueFF     ; V=1 to indicate 2-byte metadata
                jsr utils_8A8F
                bcs L887B    ; taken if something valid found
                plp
                jsr unknownCONFIGOrStatus
                bne L88EB
                rts

;-------------------------------------------------------------------------

L887B:
                jsr mos.skipSpacesAndCheckForCRInStringInput
                plp
                bvc L8884
                jsr L895D

;-------------------------------------------------------------------------

L8884:

                lda configureTable,x; "."
                bit #$40
                bne L8895
                pha
                lda configureTable+1,x
                pha
                lda (stringInputBufferAddress),y
                eor #$D
                rts

;-------------------------------------------------------------------------

L8895:
                and #7
                .if version==350
                dec configureTable+1,x
                .else
                inc configureTable+1,x
                .endif
                bvs L88D9
                bcs L88CE
                bmi L88A5
                jsr L895D
                bra L88CB

;-------------------------------------------------------------------------

L88A5:
                phx
                jsr L89B5
                plx
                cpx #7
                bne L88B4
                tay
                bne L88B3
                lda #7

L88B3:
                dec a

L88B4:
                .if olivetti
                cpx #$56
                .elsif version==350
                cpx #$6b
                .else
                cpx #$4D
                .endif
                bne L88C1
                bit #$78
                bne L88EB
                tay
                bpl L88C1
                eor #$88

L88C1:
                jsr L8B8D
                cmp word_8B99,y
                beq L88CB
                bcs L88EB


L88CB:
                jmp L88EE

;-------------------------------------------------------------------------

L88CE:
                bpl L88D8
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "<D>"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

L88D8:
                rts

;-------------------------------------------------------------------------

L88D9:
                bmi L88E2
                lda configureTable+1,x
                clc
                jmp L8ADA

;-------------------------------------------------------------------------

L88E2:
                jsr L8A64

L88E5:
                jsr L8BAA
                jmp OSNEWL

;-------------------------------------------------------------------------

L88EB:
                jmp mos.badCommandError

;-------------------------------------------------------------------------

L88EE:
                sta $B0
                jsr L8B8D
                lda word_8B99,y
                jsr L8B84
                bra L88FE

;-------------------------------------------------------------------------

L88FB:
                asl a
                asl $B0

L88FE:
                dey
                bpl L88FB
                sta $B1
                jsr L8B78
                jsr readRTCByte
                ora $B1
                eor $B1
                ora $B0
                tay

L8910:
                jmp writeRTCByte

;-------------------------------------------------------------------------

                bvs L892D
                bcs L8948
                beq L8927
                jsr L89B5
                phx
                lda #0
                jsr L8929
                ply
                ldx #$E+cmosBytesOffset
                bra L8910

;-------------------------------------------------------------------------

L8927:
                lda #1

;-------------------------------------------------------------------------

L8929:

                .if version==350
                ldx #$c7
                .elsif olivetti
                ldx #$c3
                .else
                ldx #$BA
                .endif

L892B:
                bra L88CB

;-------------------------------------------------------------------------

L892D:
                jsr readUsePrinterIgnoreChar
                bcc L8941
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "No Ignore"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                rts

;-------------------------------------------------------------------------

L8941:
                ldx #$E+cmosBytesOffset
                jsr readRTCByte

L8946:
                bra L88E5

;-------------------------------------------------------------------------

L8948:
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "[<D>]"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                rts

;-------------------------------------------------------------------------

L8953:

                jsr parseNumberFromString

L8956:
                bcc L88EB
                txa
                cmp #$10

L895B:
                bcs L88EB

L895D:
                pha
                jsr mos.skipSpacesAndCheckForCRInStringInput

L8961:
                bne L88EB
                pla
                rts

;-------------------------------------------------------------------------

                bvs L8996
                bcs L89A4
                beq L8992
                jsr parseNumberFromString
                bcc L8956
                cpx #$FC
                bcs L8978
                cpx #4
                bcs L895B

L8978:
                txa
                asl a
                sta $B1
                ldx #0
                jsr mos.LF30A
                beq L898B
                jsr L89B5
                cmp #2
                bcs L895B
                tax

L898B:
                txa
                ora $B1

L898E:
                .if version==350
                ldx #$c9
                .elsif olivetti
                ldx #$c5
                .else
                ldx #$BC
                .endif
                bra L892B

;-------------------------------------------------------------------------

L8992:
                lda #0
                bra L898E

;-------------------------------------------------------------------------

L8996:
                jsr L8BD6
                jsr L8BA9
                lda #','
                jsr OSWRCH
                txa
                bra L8946

;-------------------------------------------------------------------------

L89A4:
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "[<D>[,<D>]]"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                rts

;-------------------------------------------------------------------------

L89B5:
                jsr parseNumberFromString
                bcc L8956
                txa
                bra L895D


;-------------------------------------------------------------------------

                bne L8961
                php
                phy
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "Configuration "
                .byte 0

;-------------------------------------------------------------------------

                bvs L89E4
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "options:"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

                bra L89F0

;-------------------------------------------------------------------------

L89E4:
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "status:"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

L89F0:
                sec
                jsr L8ADA
                ply
                plp
                php
                jsr unknownCONFIGOrStatus
                plp
                bvs L8A63
                jsr alwaysPrintFollowingMessage

;-------------------------------------------------------------------------

                .text "Where:"
                .byte $D
                .text "D is a decimal number, or"
                .byte $D
                .text "a hexadecimal number preceded by &"
                .byte $D
                .text "Items within [ ] are optional"
                .byte $D
                .byte 0

;-------------------------------------------------------------------------

L8A63:
                rts

;-------------------------------------------------------------------------

                .if version==350
L8831_350:
                jsr mos.callWithTST
                .endif

;-------------------------------------------------------------------------

L8A64:
                php
                phy
                phx
                jsr L8B78
                jsr readRTCByte
                plx
                jsr L8B84
                bra L8A74

;-------------------------------------------------------------------------

L8A73:
                lsr a

L8A74:
                dey
                bpl L8A73
                jsr L8B8D
                and word_8B99,y
                cpx #7
                bne L8A82
                inc a

L8A82:
                .if version==350
                cpx #$6b
                .elsif olivetti
                cpx #$56
                .else
                cpx #$4D
                .endif
                bne L8A8C
                bit #8
                beq L8A8C
                eor #$88

L8A8C:
                ply
                plp
                rts


;-------------------------------------------------------------------------

utils_8A8F:
                sty $E6
                bra L8A9D

;-------------------------------------------------------------------------

L8A93:
                eor ($B0)
                and #$DF
                bne L8AAE    ; taken if char didn't match
                jsr fetchCommandTableByte
                iny

L8A9D:
                lda (stringInputBufferAddress),y
                jsr mos.isLetter
                bcc L8A93    ; taken if letter
                lda ($B0)   ; next table byte
                bmi L8AC9
                lda (stringInputBufferAddress),y
                cmp #'.'
                beq L8AB2    ; taken if abbreviated

L8AAE:
                clc
                ldy $E6
                dey

L8AB2:
                iny             ; skip the '.'

L8AB3:
                jsr fetchCommandTableByte
                beq L8ACD
                bpl L8AB3    ; keep looping through chars if necessary
                bcs L8ACD
                jsr fetchCommandTableByte
                bvs L8A9D    ; if V=1, 2-byte metadata; if V=0, 4-byte metadata
                jsr fetchCommandTableByte
                jsr fetchCommandTableByte
                bra L8A9D

;-------------------------------------------------------------------------

L8AC9:
                jsr fetchCommandTableByte
                sec

L8ACD:
                rts


;-------------------------------------------------------------------------

fetchCommandTableByte:
                inx
                lda ($B0)
                pha
                inc $B0
                bne L8AD8
                inc $B1

L8AD8:
                pla
                rts


;-------------------------------------------------------------------------

L8ADA:
                pha
                ldy #3
                ldx #2

L8ADF:
                inx
                lda configureTable,x; "."
                beq L8B3F
                bpl L8ADF
                bvc L8B08
                and #$40
                beq L8AFD
                lda configureTable+1,x
                bmi L8AFD
                jsr L8A64
                eor configureTable,x; "."
                and #7
                bne L8B39
                dec a

L8AFD:
                bcs L8B08
                bpl L8B39
                pla
                pha
                eor configureTable+1,x
                bne L8B39

L8B08:
                php
                phx
                bvc L8B15
                .if version==350
                cpy #$4b
                .elsif olivetti
                cpy #$3e
                .else
                cpy #$35
                .endif
                bne L8B15
                jsr readUsePrinterIgnoreChar
                bcs L8B30

L8B15:
                ldx #9
                jsr L8B6B
                and #$40
                beq L8B2D
                lda configureTable+1,y
                bmi L8B2D
                jsr OSNEWL
                bra L8B37

;-------------------------------------------------------------------------

L8B28:
                lda #' '
                jsr OSWRCH

L8B2D:
                dex
                bpl L8B28

L8B30:
                plx
                plp
                php
                phx
                jsr L8884

L8B37:
                plx
                plp

L8B39:
                inx
                txa
                tay
                iny
                bra L8ADF

;-------------------------------------------------------------------------

L8B3F:
                pla
                rts


;-------------------------------------------------------------------------

L8B41:
                jsr OSWRCH
                pha
                phy
                tya
                .if version==350
                ldy #4
                .else
                ldy #2
                .endif

L8B49:
                cmp L8850,y
                bne L8B55
                lda L8853,y
                tay
                jsr L8B6B

L8B55:
                dey
                bpl L8B49
                ply
                pla
                iny
                dex
                eor #$20
                ora configureTable,y; "."
                and #$A0
                bne L8B6B
                lda #' '
                jsr OSWRCH
                dex

;-------------------------------------------------------------------------

L8B6B:

                lda configureTable,y; "."
                bpl L8B41
                rts


;-------------------------------------------------------------------------

unknownCONFIGOrStatus:
                lda #$14
                rol a
                tax
                jmp mos.makeROMServiceCall


;-------------------------------------------------------------------------

L8B78:
                lda configureTable+1,x
                and #$78
                lsr a
                lsr a
                lsr a
                .if version==350
                adc #$f
                .else
                adc #5
                .endif
                tax
                rts


;-------------------------------------------------------------------------

L8B84:
                pha
                lda configureTable+1,x
                and #7
                tay
                pla
                rts


;-------------------------------------------------------------------------

L8B8D:
                pha
                lda configureTable,x; "."
                lsr a
                lsr a
                lsr a
                and #7
                tay
                pla
                rts


;-------------------------------------------------------------------------

word_8B99:      .word %1100000001
                .word %111100000111
                .word %11111100011111
                .word %1111111101111111

;-------------------------------------------------------------------------

;-------------------------------------------------------------------------

                .if version==350
setTSTAndReadUsePrinterIgnoreChar:
                jsr mos.callWithTST
                .endif
readUsePrinterIgnoreChar:
                phy
                jsr readDefaults2
                lsr a
                lsr a
                ply
                rts


;-------------------------------------------------------------------------

L8BA9:
                tya


;-------------------------------------------------------------------------

L8BAA:
                sec
                ldy #$FF
                php

L8BAE:
                iny
                sbc #$64
                bcs L8BAE
                adc #$64
                plp
                jsr L8BCA
                ldy #$FF
                php
                sec

L8BBD:
                iny
                sbc #$A
                bcs L8BBD
                adc #$A
                plp
                jsr L8BCA
                clc
                tay


;-------------------------------------------------------------------------

L8BCA:
                pha
                tya
                bne L8BD0
                bcs L8BD4

L8BD0:
                jsr printHexDigit
                clc

L8BD4:
                pla
                rts


;-------------------------------------------------------------------------

                .if version==350
setTSTAndL8BD6:
                jsr mos.callWithTST
                .endif
L8BD6:
                .if version==350
                ldx #$c9
                .elsif olivetti
                ldx #$c5
                .else
                ldx #$BC
                .endif
                jsr L8A64
                lsr a
                bit #4
                beq L8BE2
                ora #$FC

L8BE2:
                tay
                lda #0
                rol a
                tax
                rts


;-------------------------------------------------------------------------
