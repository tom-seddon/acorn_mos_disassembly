; -*- comment-column:45; -*-

                .section mos
mos: .block

; VDU driver entry block
; ======================
LC000:                                       ; Read from VDU memory
                lda (ZMEMG),y
                rts
LC003:                                       ; Write to VDU memory
                sta (ZMEMG),y
                rts

; MasRef E.4-6
;
; JSR PLBYTE plots the mask held in ZMASK into the byte pointed to by
; (ZMEMG),y, using ZGORA and ZGEOR as colour masks. See GADDR below
; for an example of its use.
;
; PLBYTE uses ZTEMP as workspace and preserves X, Y, V and C.
PLBYTE: 
                jmp LDB51

; MasRef E.4-6
;
; JSR HPLOT plots a fast horizontal line in the current graphics
; colour or ECF and the current graphics mode (all as set by VDU 18)
; between two specified points. It is the low level primitive used by
; all the MOS area fill commands.
;
; On entry, two 4 byte areas at &300+X and &300+Y contain the
; coordinates of the two endpoints, in the standard
; lowX,highX,lowY,highY order. Should the Y coordinates differ, the Y
; coordinate of the line plotted is taken from the leftmost of the two
; points specified.
;
; Only portions of the line inside the graphics window are plotted.
; Subject to this, both endpoints of the line are plotted.
;
; HPLOT uses ZGORA, ZGEOR, ZMASK, ZMEMG, ZTEMP (but not ZTEMP+1),
; ZTEMPB, ZTEMPB+1, ZTEMPC and ZTEMPC+1 as workspace. No registers or
; flags are preserved.
HPLOT:                          
                jmp LDAE8

; MasRef E.4-6
;
; JSR EIGABS converts the 4 byte pair of external coordinates at
; &300+X (in standard lowX,highX,lowY,highY order) into the
; corresponding pair of pixel coordinates by offsetting by the
; graphics origin, then dividing by an appropriate power of 2.
;
; EIGABS uses ZTEMP as workspace, and corrupts all registers and
; flags.
EIGABS:
                jmp LD1DE

; MasRef E.4-7
;
; JSR WIND windows the 4 byte pair of pixel coordinates (in standard
; lowX,highX,lowY,highY order) at &300+X, and returns a result in A
; according to its position with respect to the window:

; 9 | 8 | 10
; --+---+---
; 1 | 0 | 2
; --+---+---
; 5 | 4 | 6

; WIND uses ZTEMP as workspace, preserves X and sets N and Z according
; to A.
WIND:
                jmp LD1A8

; MasRef E.4-7
;
; JSR GADDR addresses the pixel whose 4 byte pair of pixel coordinates
; (in standard lowX,highX,lowY,highY order) is at &300+X. GADDR should
; not be called without first ensuring (typically by means of WIND)
; that the point concerned does lie within the screen.
;
; GADDR initialises the following variables:
;
; . ZMEMG to the start of the page of memory containing the pixel.
;
; . Y and VDU variable &1A (i.e. location &31A) to contain the offset
; of the byte containing the pixel within this page – i.e. (ZMEMG),y
; points to the byte containing the pixel.
;
; . ZMASK to a mask indicating which bits of this byte constitute the
; pixel.
;
; . ZGORA and ZGEOR to the correct colour masks for the current
; graphics plot mode (found in VDU variable &5A) and colour/ECF
;
; . X to Y MOD 7, i.e. the scan line within a character row of the
; pixel.
;
; Additionally, GADDR uses ZTEMP as workspace and returns A=0, Z=1.
;
; An example of the use of PLBYTE, WIND and GADDR is the following
; code, which effectively re-implements the VDU 25 64–71 (plot a
; point) calls. It assumes that the routine addresses have been
; previously defined and that the graphics plot mode, etc. were set up
; by the VDU 25 code before the unknown PLOT codes vector was entered:

; .POINT
;  LDX #&20   ;Addresses new point within VDU queue, as
;             ;left on entry to the unknown PLOT codes
;             ;vector.
;  JSR WIND   ;Is the point inside the window?
;  BNE END    ;Return if not.
;  JSR GADDR  ;Address the point now we know it's on
;             ;screen.
;  JSR PLBYTE ;And plot the point.
; .END
;  RTS
GADDR:
                jmp LDEC8

; MasRef E.4-8
;
; JSR IEG takes the internal pixel coordinates of the graphics cursor
; (in VDU variables &24–&27), converts it back to external coordinates
; and stores the result in VDU variables &10–&13.
;
; It should be called whenever the graphics code generates a new
; graphics cursor position (e.g. in the VDU drivers, it is called
; after a character is printed in VDU 5 mode). Its purpose is to make
; the two versions of the graphics cursor agree again, and thus
; prevent errors occurring with relative plots.
;
; IEG uses no page zero locations and corrupts all registers and
; flags.
IEG:
                jmp LC4DF
LC018:                                       ; Fetch byte from ROM Y
                ldx $F4                      ; Get current ROM
                sty $F4                      ; Select ROM in Y
                sty ROMSEL
                lda ($F6)                    ; Get byte with ROM Y paged in
                jmp selectROMX                    ; Page in ROM X and return

LC024:
                jmp ($035D)                  ; C024= 6C 5D 03    l].

;-------------------------------------------------------------------------
;
; VDU driver entry point
;
; Output to VDU.
; 
outputToVDU:
                ldx $026A                    ;get VDU queue length
                beq LC059                    ;taken if empty
                sta vduv.queueEnd-1-255,x     ;add to queue
                inc $026A                     ;one more in the queue...
                beq LC036                    ;taken if queue now filled
clcThenRTS:
                clc

;-------------------------------------------------------------------------
;
; VDU 0 (&00) Null [MasRef E.3-1]
; VDU 6 (&06) Enable VDU driver [MasRef E.3-3]
; VDU 27 (&1B) Null [MasRef E.3-34]
;
vdu0EntryPoint:
vdu6EntryPoint:
vdu27EntryPoint:
rtsC035:
                rts                          ; C035= 60          `

;-------------------------------------------------------------------------

LC036:
                bit STATE
                bpl LC053              ;branch taken if not VDU21 mode
                ldy vduv.jumpVector+1
                cpy #>vdu1EntryPoint
                bne clcThenRTS
                ldy vduv.jumpVector+0
                cpy #<vdu1EntryPoint
                bne clcThenRTS
LC048:
                tax
                lda STATE
                lsr a                       ;C set if isPrinterEnabled
                bcc rtsC035              ;taken if printer not enabled
                txa                          ; C04E= 8A          .
LC04F:
                clc                          ; C04F= 18          .
                jmp LE8B9                    ; C050= 4C B9 E8    L9h

LC053:
                jsr LC0FA                    ; C053= 20 FA C0     z@
                clc                          ; C056= 18          .
                bra LC0C0                    ; C057= 80 67       .g

LC059:
                jsr LC0FA                    ; C059= 20 FA C0     z@
                bvc LC06D                    ; C05C= 50 0F       P.
                bmi LC06D                    ; C05E= 30 0D       0.
                cmp #$0D                     ; C060= C9 0D       I.
                bne LC06D                    ; C062= D0 09       P.
                pha                          ; C064= 48          H
                lda #$42                     ; C065= A9 42       )B
                trb STATE                      ; C067= 14 D0       .P
                jsr showCursor                 ; C069= 20 50 CF     PO
                pla                          ; C06C= 68          h
LC06D:
                cmp #$20                     ; C06D= C9 20       I
                bcc LC077                    ; C06F= 90 06       ..
                cmp #$7F                     ; C071= C9 7F       I.
                bne LC096                    ; C073= D0 21       P!
                lda #$20                     ; C075= A9 20       )
LC077:
                tay                          ; C077= A8
                lda LE027,y                  ; Get routine LSB
                sta $035D                    ; Store jump address LSB (see MasRef E.4-3)
                lda LE048,y                  ; Get routine MSB
                bmi LC0B3                    ; Branch taken if bit 7 set
                tax                          ; Save original MSB value
                ora #$F0                     ; 
                sta $026A                    ; 
                txa                          ; Restore original MSB value
                lsr a                        ; 
                lsr a                        ; 
                lsr a                        ; 
                lsr a                        ; Extract value in top 4 bits
                clc                          ; 
                adc #$C0                     ; Add $C0 to value from top 4 bits
                sta $035E                    ; Store jump address MSB
                bra LC0CA                    ; Continue

LC096:
                bit STATE                      ; C096= 24 D0       $P
                bmi LC0C7                    ; C098= 30 2D       0-
                jsr LCE0C                    ; C09A= 20 0C CE     .N
                lda #$20                     ; C09D= A9 20       )
                bit $0366                    ; C09F= 2C 66 03    ,f.
                bne LC0C7                    ; C0A2= D0 23       P#
                jsr LC276                    ; C0A4= 20 76 C2     vB
                bra LC0C7                    ; C0A7= 80 1E       ..

LC0A9:
                eor #$06                     ; C0A9= 49 06       I.
                bne LC0C5                    ; C0AB= D0 18       P.
                lda #$80                     ; C0AD= A9 80       ).
                trb STATE                      ; C0AF= 14 D0       .P
                bra LC0CA                    ; C0B1= 80 17       ..

LC0B3:
                sta $035E                    ; Store jump address MSB
                tya                          ; C0B6= 98          .
                eor #$F7                     ; C0B7= 49 F7       Iw
                cmp #$FA                     ; C0B9= C9 FA       Iz
                tya                          ; C0BB= 98          .
                bit STATE                      ; C0BC= 24 D0       $P
                bmi LC0A9                    ; C0BE= 30 E9       0i
LC0C0:
                php                          ; C0C0= 08          .
                jsr LC024                    ; C0C1= 20 24 C0     $@
                plp                          ; C0C4= 28          (
LC0C5:
                bcc LC0CA                    ; C0C5= 90 03       ..
LC0C7:
                lda STATE                      ; C0C7= A5 D0       %P
                lsr a                        ; C0C9= 4A          J
LC0CA:
                bit STATE                      ; C0CA= 24 D0       $P
                bvc LC0E1                    ; C0CC= 50 13       P.
                jsr LC105                    ; C0CE= 20 05 C1     .A
LC0D1:
                php                          ; C0D1= 08          .
                pha                          ; C0D2= 48          H
                lda STATE                      ; C0D3= A5 D0       %P
                eor #STATE.isScrollingDisabled
                sta STATE                      ; C0D7= 85 D0       .P
                jsr LE2AE                    ; C0D9= 20 AE E2     .b
                jsr LC6D8                    ; C0DC= 20 D8 C6     XF
                pla                          ; C0DF= 68          h
LC0E0:
                plp                          ; C0E0= 28          (
LC0E1:
                rts                          ; C0E1= 60          `

;-------------------------------------------------------------------------
;
; VDU 1 (&01) Send next character to printer only [MasRef E.3-2]
; 
vdu1EntryPoint:
                jsr LC0CA                    ; C0E2= 20 CA C0     J@
                jsr LC048                    ; C0E5= 20 48 C0     H@
                bra LC0FA                    ; C0E8= 80 10       ..

;-------------------------------------------------------------------------
;
; VDU 2 (&02) Enable printer [MasRef E.3-2]
; VDU 3 (&03) Disable printer [MasRef E.3-3]
; 
vdu2EntryPoint:
vdu3EntryPoint:
                pha                          ; C0EA= 48          H
                jsr LC0CA                    ; C0EB= 20 CA C0     J@
                jsr LE93A                    ; C0EE= 20 3A E9     :i
                lda #$01                     ; C0F1= A9 01       ).
                tsb STATE                      ; C0F3= 04 D0       .P
                pla                          ; C0F5= 68          h
                and #$01                     ; C0F6= 29 01       ).
                trb STATE                      ; C0F8= 14 D0       .P
LC0FA:
                bit STATE
                bvc LC0E1                    ;taken if not cursor editing
                jsr LC0D1                    ; C0FE= 20 D1 C0     Q@
                php                          ; C101= 08          .
                sec                          ; C102= 38          8
                bra LC107                    ; C103= 80 02       ..

LC105:
                php                          ; C105= 08          .
                clc                          ; C106= 18          .
LC107:
                pha                          ; C107= 48          H
                lda ZMEMT+0                      ; C108= A5 D8       %X
                sta $E0                      ; C10A= 85 E0       .`
                lda ZMEMT+1                      ; C10C= A5 D9       %Y
                sta $E1                      ; C10E= 85 E1       .a
                ldy $034F                    ; C110= AC 4F 03    ,O.
                dey                          ; C113= 88          .
                bne LC124                    ; C114= D0 0E       P.
                lda $0338                    ; C116= AD 38 03    -8.
                bcs LC132                    ; C119= B0 17       0.
                lda (ZMEMT)                    ; C11B= B2 D8       2X
                sta $0338                    ; C11D= 8D 38 03    .8.
                lda #$7F                     ; C120= A9 7F       ).
                bra LC132                    ; C122= 80 0E       ..

LC124:
                lda #$FF                     ; C124= A9 FF       ).
                cpy #$1F                     ; C126= C0 1F       @.
                bne LC12C                    ; C128= D0 02       P.
                lda #$3F                     ; C12A= A9 3F       )?
LC12C:
                sta $DA                      ; C12C= 85 DA       .Z
LC12E:
                lda ($E0)                    ; C12E= B2 E0       2`
                eor $DA                      ; C130= 45 DA       EZ
LC132:
                sta ($E0)                    ; C132= 92 E0       .`
                inc $E0                      ; C134= E6 E0       f`
                bne LC141                    ; C136= D0 09       P.
                inc $E1                      ; C138= E6 E1       fa
                bpl LC141                    ; C13A= 10 05       ..
LC13C:
                lda $034E                    ; C13C= AD 4E 03    -N.
                sta $E1                      ; C13F= 85 E1       .a
LC141:
                dey                          ; C141= 88          .
                bpl LC12E                    ; C142= 10 EA       .j
                pla                          ; C144= 68          h
                plp                          ; C145= 28          (
                rts                          ; C146= 60          `

LC147:
                .word LC1BE                  ; C147= BE C1       ..
                .word LC1B1                  ; C149= B1 C1       ..
                .word LC1BE                  ; C14B= BE C1       ..
                .word LC1B1                  ; C14D= B1 C1       ..
                .word LC195                  ; C14F= 95 C1       ..
                .word LC195                  ; C151= 95 C1       ..
                .word LC1A2                  ; C153= A2 C1       ..
                .word LC1A2                  ; C155= A2 C1       ..
LC157:
                .word LC201                  ; C157= 01 C2       ..
                .word LC1EE                  ; C159= EE C1       ..
                .word LC201                  ; C15B= 01 C2       ..
                .word LC1EE                  ; C15D= EE C1       ..
                .word LC221                  ; C15F= 21 C2       !.
                .word LC221                  ; C161= 21 C2       !.
                .word LC210                  ; C163= 10 C2       ..
                .word LC210                  ; C165= 10 C2       ..
LC167:
                .word LC2D3                  ; C167= D3 C2       ..
                .word LC2CB                  ; C169= CB C2       ..
                .word LC2D3                  ; C16B= D3 C2       ..
                .word LC2CB                  ; C16D= CB C2       ..
                .word LC2E2                  ; C16F= E2 C2       ..
                .word LC2E2                  ; C171= E2 C2       ..
                .word LC2DA                  ; C173= DA C2       ..
                .word LC2DA                  ; C175= DA C2       ..
LC177:
                .word LC310                  ; C177= 10 C3       ..
                .word LC2F2                  ; C179= F2 C2       ..
                .word LC310                  ; C17B= 10 C3       ..
                .word LC2F2                  ; C17D= F2 C2       ..
                .word LC35A                  ; C17F= 5A C3       Z.
                .word LC35A                  ; C181= 5A C3       Z.
                .word LC338                  ; C183= 38 C3       8.
                .word LC338                  ; C185= 38 C3       8.
LC187:
                eor $0366                    ; C187= 4D 66 03    Mf.
                and #$0E                     ; C18A= 29 0E       ).
                pha                          ; C18C= 48          H
                jsr LD1A6                    ; C18D= 20 A6 D1     &Q
                plx                          ; C190= FA          z
                sec                          ; C191= 38          8
                jmp (LC147,x)                ; C192= 7C 47 C1    |GA

LC195:
                lda $0326                    ; C195= AD 26 03    -&.
                sbc #$08                     ; C198= E9 08       i.
                sta $0326                    ; C19A= 8D 26 03    .&.
                dec $0327                    ; C19D= CE 27 03    N'.
                bra LC1AA                    ; C1A0= 80 08       ..

LC1A2:
                lda $0326                    ; C1A2= AD 26 03    -&.
                adc #$07                     ; C1A5= 69 07       i.
                sta $0326                    ; C1A7= 8D 26 03    .&.
LC1AA:
                bcc LC1CB                    ; C1AA= 90 1F       ..
                inc $0327                    ; C1AC= EE 27 03    n'.
                bra LC1CB                    ; C1AF= 80 1A       ..

LC1B1:
                lda $0324                    ; C1B1= AD 24 03    -$.
                sbc #$08                     ; C1B4= E9 08       i.
                sta $0324                    ; C1B6= 8D 24 03    .$.
                dec $0325                    ; C1B9= CE 25 03    N%.
                bra LC1C6                    ; C1BC= 80 08       ..

LC1BE:
                lda $0324                    ; C1BE= AD 24 03    -$.
                adc #$07                     ; C1C1= 69 07       i.
                sta $0324                    ; C1C3= 8D 24 03    .$.
LC1C6:
                bcc LC1CB                    ; C1C6= 90 03       ..
                inc $0325                    ; C1C8= EE 25 03    n%.
LC1CB:
                lda $DA                      ; C1CB= A5 DA       %Z
                bne LC1DB                    ; C1CD= D0 0C       P.
                bit $0366                    ; C1CF= 2C 66 03    ,f.
                bvs LC1DB                    ; C1D2= 70 07       p.
                phx                          ; C1D4= DA          Z
                jsr LD1A6                    ; C1D5= 20 A6 D1     &Q
                plx                          ; C1D8= FA          z
                tay                          ; C1D9= A8          (
                rts                          ; C1DA= 60          `

LC1DB:
                lda #$00                     ; C1DB= A9 00       ).
                rts                          ; C1DD= 60          `

LC1DE:
                lda #$00                     ; C1DE= A9 00       ).
LC1E0:
                stz $DA                      ; C1E0= 64 DA       dZ
                asl a                        ; C1E2= 0A          .
                rol $DA                      ; C1E3= 26 DA       &Z
                asl a                        ; C1E5= 0A          .
                rol $DA                      ; C1E6= 26 DA       &Z
                asl a                        ; C1E8= 0A          .
                rol $DA                      ; C1E9= 26 DA       &Z
                jmp (LC157,x)                ; C1EB= 7C 57 C1    |WA

LC1EE:
                eor #$F9                     ; C1EE= 49 F9       Iy
                adc $0304                    ; C1F0= 6D 04 03    m..
                sta $0324                    ; C1F3= 8D 24 03    .$.
                lda $DA                      ; C1F6= A5 DA       %Z
                eor #$FF                     ; C1F8= 49 FF       I.
                adc $0305                    ; C1FA= 6D 05 03    m..
                sta $0325                    ; C1FD= 8D 25 03    .%.
                rts                          ; C200= 60          `

LC201:
                adc $0300                    ; C201= 6D 00 03    m..
                sta $0324                    ; C204= 8D 24 03    .$.
                lda $DA                      ; C207= A5 DA       %Z
                adc $0301                    ; C209= 6D 01 03    m..
                sta $0325                    ; C20C= 8D 25 03    .%.
                rts                          ; C20F= 60          `

LC210:
                eor #$07                     ; C210= 49 07       I.
                adc $0302                    ; C212= 6D 02 03    m..
                sta $0326                    ; C215= 8D 26 03    .&.
                lda $DA                      ; C218= A5 DA       %Z
                adc $0303                    ; C21A= 6D 03 03    m..
                sta $0327                    ; C21D= 8D 27 03    .'.
                rts                          ; C220= 60          `

LC221:
                sec                          ; C221= 38          8
                eor #$FF                     ; C222= 49 FF       I.
                adc $0306                    ; C224= 6D 06 03    m..
                sta $0326                    ; C227= 8D 26 03    .&.
                lda $DA                      ; C22A= A5 DA       %Z
                eor #$FF                     ; C22C= 49 FF       I.
                adc $0307                    ; C22E= 6D 07 03    m..
                sta $0327                    ; C231= 8D 27 03    .'.
                rts                          ; C234= 60          `

LC235:
                lda #$00                     ; C235= A9 00       ).
                jsr LC187                    ; C237= 20 87 C1     .A
                beq LC249                    ; C23A= F0 0D       p.
                jsr LC1DE                    ; C23C= 20 DE C1     ^A
LC23F:
                lda #$08                     ; C23F= A9 08       ).
LC241:
                jsr LC187                    ; C241= 20 87 C1     .A
                beq LC249                    ; C244= F0 03       p.
                jsr LC1DE                    ; C246= 20 DE C1     ^A
LC249:
                jmp LC4DF                    ; C249= 4C DF C4    L_D

vdu9EntryPoint:
                jsr LD12D                    ; C24C= 20 2D D1     -Q
                bcs LC235                    ; C24F= B0 E4       0d
                lda #$00                     ; C251= A9 00       ).
                jsr LC2E9                    ; C253= 20 E9 C2     iB
                bcc LC273                    ; C256= 90 1B       ..
LC258:
                jsr LC38F                    ; C258= 20 8F C3     .C
vdu10EntryPoint:
                jsr testVDU5State                    ; C25B= 20 D2 E2     Rb
                bne LC23F                    ; C25E= D0 DF       P_
                clc                          ; C260= 18          .
                jsr LC88E                    ; C261= 20 8E C8     .H
                lda #$08                     ; C264= A9 08       ).
                jsr LC2E9                    ; C266= 20 E9 C2     iB
LC269:
                bcc LC273                    ; C269= 90 08       ..
                jsr LC37B                    ; C26B= 20 7B C3     {C
                bcc LC273                    ; C26E= 90 03       ..
                jmp LD051                    ; C270= 4C 51 D0    LQP

LC273:
                jmp setCRTCCursorAddress

LC276:
                jsr testVDU5State                    ; C276= 20 D2 E2     Rb
                bne LC235                    ; C279= D0 BA       P:
                jsr LC2E9                    ; C27B= 20 E9 C2     iB
                bcc LC273                    ; C27E= 90 F3       .s
                lda #$01                     ; C280= A9 01       ).
                bit $0366                    ; C282= 2C 66 03    ,f.
                beq LC258                    ; C285= F0 D1       pQ
                sec                          ; C287= 38          8
                ror $036C                    ; C288= 6E 6C 03    nl.
LC28B:
                rts                          ; C28B= 60          `

LC28C:
                lda #$06                     ; C28C= A9 06       ).
                jsr LC187                    ; C28E= 20 87 C1     .A
                beq LC249                    ; C291= F0 B6       p6
                jsr LC1DE                    ; C293= 20 DE C1     ^A
LC296:
                lda #$0E                     ; C296= A9 0E       ).
                bra LC241                    ; C298= 80 A7       .'

vdu8EntryPoint:
                jsr testVDU5State                    ; C29A= 20 D2 E2     Rb
                bne LC28C                    ; C29D= D0 ED       Pm
                lsr $036C                    ; C29F= 4E 6C 03    Nl.
                bit $036C                    ; C2A2= 2C 6C 03    ,l.
                bvs LC28B                    ; C2A5= 70 E4       pd
                lda #$06                     ; C2A7= A9 06       ).
                jsr LC2E9                    ; C2A9= 20 E9 C2     iB
                bcc LC273                    ; C2AC= 90 C5       .E
                jsr LC38F                    ; C2AE= 20 8F C3     .C
vdu11EntryPoint:
                jsr testVDU5State                    ; C2B1= 20 D2 E2     Rb
                bne LC296                    ; C2B4= D0 E0       P`
                dec $0269                    ; C2B6= CE 69 02    Ni.
                bpl LC2BE                    ; C2B9= 10 03       ..
                inc $0269                    ; C2BB= EE 69 02    ni.
LC2BE:
                lda #$0E                     ; C2BE= A9 0E       ).
                jsr LC2E9                    ; C2C0= 20 E9 C2     iB
                bra LC269                    ; C2C3= 80 A4       .$

LC2C5:
                lda #$00                     ; C2C5= A9 00       ).
LC2C7:
                clc                          ; C2C7= 18          .
                jmp (LC167,x)                ; C2C8= 7C 67 C1    |gA

LC2CB:
                sec                          ; C2CB= 38          8
                eor #$FF                     ; C2CC= 49 FF       I.
                adc $030A                    ; C2CE= 6D 0A 03    m..
                bra LC2D6                    ; C2D1= 80 03       ..

LC2D3:
                adc $0308                    ; C2D3= 6D 08 03    m..
LC2D6:
                sta $0318                    ; C2D6= 8D 18 03    ...
                rts                          ; C2D9= 60          `

LC2DA:
                sec                          ; C2DA= 38          8
                eor #$FF                     ; C2DB= 49 FF       I.
                adc $0309                    ; C2DD= 6D 09 03    m..
                bra LC2E5                    ; C2E0= 80 03       ..

LC2E2:
                adc $030B                    ; C2E2= 6D 0B 03    m..
LC2E5:
                sta $0319                    ; C2E5= 8D 19 03    ...
                rts                          ; C2E8= 60          `

LC2E9:
                eor $0366                    ; C2E9= 4D 66 03    Mf.
                and #$0E                     ; C2EC= 29 0E       ).
                tax                          ; C2EE= AA          *
LC2EF:
                jmp (LC177,x)                ; C2EF= 7C 77 C1    |wA

LC2F2:
                lda $0308                    ; C2F2= AD 08 03    -..
                cmp $0318                    ; C2F5= CD 18 03    M..
                bcs LC337                    ; C2F8= B0 3D       0=
                dec $0318                    ; C2FA= CE 18 03    N..
                sec                          ; C2FD= 38          8
                lda $034A                    ; C2FE= AD 4A 03    -J.
                sbc $034F                    ; C301= ED 4F 03    mO.
                sta $034A                    ; C304= 8D 4A 03    .J.
                sta ZMEMT+0                      ; C307= 85 D8       .X
                bcs LC336                    ; C309= B0 2B       0+
                dec $034B                    ; C30B= CE 4B 03    NK.
                bra LC32B                    ; C30E= 80 1B       ..

LC310:
                lda $0318                    ; C310= AD 18 03    -..
                cmp $030A                    ; C313= CD 0A 03    M..
                bcs LC337                    ; C316= B0 1F       0.
                inc $0318                    ; C318= EE 18 03    n..
                lda $034A                    ; C31B= AD 4A 03    -J.
                adc $034F                    ; C31E= 6D 4F 03    mO.
                sta $034A                    ; C321= 8D 4A 03    .J.
                sta ZMEMT+0                      ; C324= 85 D8       .X
                bcc LC337                    ; C326= 90 0F       ..
                inc $034B                    ; C328= EE 4B 03    nK.
LC32B:
                lda $034B                    ; C32B= AD 4B 03    -K.
LC32E:
                bpl LC334                    ; C32E= 10 04       ..
                sec                          ; C330= 38          8
                sbc $0354                    ; C331= ED 54 03    mT.
LC334:
                sta ZMEMT+1                      ; C334= 85 D9       .Y
LC336:
                clc                          ; C336= 18          .
LC337:
                rts                          ; C337= 60          `

LC338:
                lda $030B                    ; C338= AD 0B 03    -..
                cmp $0319                    ; C33B= CD 19 03    M..
                bcs LC337                    ; C33E= B0 F7       0w
                dec $0319                    ; C340= CE 19 03    N..
                sec                          ; C343= 38          8
                lda $034A                    ; C344= AD 4A 03    -J.
                sbc $0352                    ; C347= ED 52 03    mR.
                sta $034A                    ; C34A= 8D 4A 03    .J.
                sta ZMEMT+0                      ; C34D= 85 D8       .X
                lda $034B                    ; C34F= AD 4B 03    -K.
                sbc $0353                    ; C352= ED 53 03    mS.
                sta $034B                    ; C355= 8D 4B 03    .K.
                bra LC32E                    ; C358= 80 D4       .T

LC35A:
                lda $0319                    ; C35A= AD 19 03    -..
                cmp $0309                    ; C35D= CD 09 03    M..
                bcs LC337                    ; C360= B0 D5       0U
                inc $0319                    ; C362= EE 19 03    n..
                lda $034A                    ; C365= AD 4A 03    -J.
                adc $0352                    ; C368= 6D 52 03    mR.
                sta $034A                    ; C36B= 8D 4A 03    .J.
                sta ZMEMT+0                      ; C36E= 85 D8       .X
                lda $034B                    ; C370= AD 4B 03    -K.
                adc $0353                    ; C373= 6D 53 03    mS.
                sta $034B                    ; C376= 8D 4B 03    .K.
                bra LC32E                    ; C379= 80 B3       .3

LC37B:
                lda #$10                     ; C37B= A9 10       ).
                bit $0366                    ; C37D= 2C 66 03    ,f.
                bne LC38F                    ; C380= D0 0D       P.
                txa                          ; C382= 8A          .
                eor #$06                     ; C383= 49 06       I.
                pha                          ; C385= 48          H
                lda #$42                     ; C386= A9 42       )B
                bit STATE                      ; C388= 24 D0       $P
                beq LC3A2                    ; C38A= F0 16       p.
                bvs LC397                    ; C38C= 70 09       p.
                pla                          ; C38E= 68          h
LC38F:
                jsr LC2C5                    ; C38F= 20 C5 C2     EB
                jsr getAddressForTextCursorPosition                    ; C392= 20 FA CC     zL
                clc                          ; C395= 18          .
                rts                          ; C396= 60          `

LC397:
                jsr LE2AE                    ; C397= 20 AE E2     .b
                plx                          ; C39A= FA          z
                phx                          ; C39B= DA          Z
                jsr LC2EF                    ; C39C= 20 EF C2     oB
                jsr LE2AE                    ; C39F= 20 AE E2     .b
LC3A2:
                plx                          ; C3A2= FA          z
                sec                          ; C3A3= 38          8
LC3A4:
                rts                          ; C3A4= 60          `

vdu28EntryPoint:
                ldx $0355                    ; C3A5= AE 55 03    .U.
                lda $0321                    ; C3A8= AD 21 03    -!.
                cmp $0323                    ; C3AB= CD 23 03    M#.
                bcc LC3A4                    ; C3AE= 90 F4       .t
                cmp modeMaxRow,x                  ; C3B0= DD 01 E1    ].a
                beq LC3B7                    ; C3B3= F0 02       p.
                bcs LC3A4                    ; C3B5= B0 ED       0m
LC3B7:
                lda $0322                    ; C3B7= AD 22 03    -".
                cmp modeMaxColumn,x                  ; C3BA= DD 09 E1    ].a
                beq LC3C2                    ; C3BD= F0 03       p.
                bcs LC3A4                    ; C3BF= B0 E3       0c
                sec                          ; C3C1= 38          8
LC3C2:
                sbc $0320                    ; C3C2= ED 20 03    m .
                bcc LC3A4                    ; C3C5= 90 DD       .]
                jsr setTextWindowWidthInBytes                    ; C3C7= 20 80 C7     .G
                lda #$08                     ; C3CA= A9 08       ).
                tsb STATE                      ; C3CC= 04 D0       .P
                ldx #VDUVariables.queueEnd-4
                ldy #VDUVariables.textWindowLeft
                jsr copyFourBytesWithinVDUVariables
                jsr LE2AE                    ; C3D5= 20 AE E2     .b
                jsr LCCDA                    ; C3D8= 20 DA CC     ZL
                bcc LC3E0                    ; C3DB= 90 03       ..
                jsr LC3E8                    ; C3DD= 20 E8 C3     hC
LC3E0:
                jsr LE2AE                    ; C3E0= 20 AE E2     .b
                jsr LCCDA                    ; C3E3= 20 DA CC     ZL
                bcc LC407                    ; C3E6= 90 1F       ..
LC3E8:
                lda STATE                      ; C3E8= A5 D0       %P
                pha                          ; C3EA= 48          H
                and #$DF                     ; C3EB= 29 DF       )_
                sta STATE                      ; C3ED= 85 D0       .P
                jsr vdu30EntryPoint            ; C3EF= 20 7C C4     |D
                pla                          ; C3F2= 68          h
                sta STATE                      ; C3F3= 85 D0       .P
                rts                          ; C3F5= 60          `

vdu13EntryPoint:
                lda $0366                    ; C3F6= AD 66 03    -f.
                and #$0E                     ; C3F9= 29 0E       ).
                tax                          ; C3FB= AA          *
                jsr testVDU5State                    ; C3FC= 20 D2 E2     Rb
                bne LC40A                    ; C3FF= D0 09       P.
                lsr $036C                    ; C401= 4E 6C 03    Nl.
                jsr LC38F                    ; C404= 20 8F C3     .C
LC407:
                jmp setCRTCCursorAddress

LC40A:
                jsr LC1DE                    ; C40A= 20 DE C1     ^A
                jmp LC4DF                    ; C40D= 4C DF C4    L_D

LC410:
                jsr vdu30EntryPoint          ; C410= 20 7C C4     |D
vdu16EntryPoint:
                lda $0361                    ; C413= AD 61 03    -a.
                beq LC3A4                    ; C416= F0 8C       p.
                ldx #$00                     ; C418= A2 00       ".
                jsr LC902                    ; C41A= 20 02 C9     .I
                jsr LC951                    ; C41D= 20 51 C9     QI
LC420:
                ldx #$2A                     ; C420= A2 2A       "*
                ldy #$2E                     ; C422= A0 2E        .
                jsr exchangeTwoVDUBytes
LC427:
                ldx #$28                     ; C427= A2 28       "(
                ldy #$2C                     ; C429= A0 2C        ,
                jsr LDAE8                    ; C42B= 20 E8 DA     hZ
                lda $032A                    ; C42E= AD 2A 03    -*.
                bne LC436                    ; C431= D0 03       P.
                dec $032B                    ; C433= CE 2B 03    N+.
LC436:
                dec $032A                    ; C436= CE 2A 03    N*.
                lda $032A                    ; C439= AD 2A 03    -*.
                cmp $032E                    ; C43C= CD 2E 03    M..
                lda $032B                    ; C43F= AD 2B 03    -+.
                sbc $032F                    ; C442= ED 2F 03    m/.
                bpl LC427                    ; C445= 10 E0       .`
                rts                          ; C447= 60          `

LC448:
                ldx #$20                     ; C448= A2 20       "
                jsr LC8E6                    ; C44A= 20 E6 C8     fH
                bra LC420                    ; C44D= 80 D1       .Q

                ; VDU 12 - CLS
                ; ============
vdu12EntryPoint:
                lda #$20
                bit STATE
                bne LC410                    ; VDU 5 mode
                lda #$08
                bit STATE
                bne LC45E                    ; Software CLS (window defined)
                jmp LC866                    ; Do a hardware CLS

                ; Clear screen within text window
                ; -------------------------------
LC45E:
                jsr copyTextWindowWidthInBytesToWorkspace28                    ; C45E= 20 08 C9     .I
                ldx $0308                    ; C461= AE 08 03    ...
                stx $0318                    ; C464= 8E 18 03    ...
                ldx $030B                    ; C467= AE 0B 03    ...
LC46A:
                stx $0319                    ; C46A= 8E 19 03    ...
                jsr getAddressForTextCursorPosition                    ; C46D= 20 FA CC     zL
                jsr LCAE8                    ; C470= 20 E8 CA     hJ
                ldx $0319                    ; C473= AE 19 03    ...
                cpx $0309                    ; C476= EC 09 03    l..
                inx                          ; C479= E8          h
                bcc LC46A                    ; C47A= 90 EE       .n
vdu30EntryPoint:
                stz $0323                    ; C47C= 9C 23 03    .#.
                stz $0322                    ; C47F= 9C 22 03    .".
vdu31EntryPoint:
                lda $0366                    ; C482= AD 66 03    -f.
                and #$0E                     ; C485= 29 0E       ).
                tax                          ; C487= AA          *
LC488:
                jsr testVDU5State                    ; C488= 20 D2 E2     Rb
                bne LC4CF                    ; C48B= D0 42       PB
                lda $0318                    ; C48D= AD 18 03    -..
                pha                          ; C490= 48          H
                lda $0319                    ; C491= AD 19 03    -..
                pha                          ; C494= 48          H
                lda $0322                    ; C495= AD 22 03    -".
                jsr LC2C7                    ; C498= 20 C7 C2     GB
                phx                          ; C49B= DA          Z
                txa                          ; C49C= 8A          .
                eor #$08                     ; C49D= 49 08       I.
                tax                          ; C49F= AA          *
                lda $0323                    ; C4A0= AD 23 03    -#.
                jsr LCCD7                    ; C4A3= 20 D7 CC     WL
                plx                          ; C4A6= FA          z
                bcc LC4BA                    ; C4A7= 90 11       ..
                lda #$01                     ; C4A9= A9 01       ).
                bit $0366                    ; C4AB= 2C 66 03    ,f.
                beq LC4C1                    ; C4AE= F0 11       p.
                lda $0322                    ; C4B0= AD 22 03    -".
                dec a                        ; C4B3= 3A          :
                jsr LCCD7                    ; C4B4= 20 D7 CC     WL
                bcs LC4C1                    ; C4B7= B0 08       0.
                sec                          ; C4B9= 38          8
LC4BA:
                ror $036C                    ; C4BA= 6E 6C 03    nl.
                pla                          ; C4BD= 68          h
                pla                          ; C4BE= 68          h
                bra LC4CC                    ; C4BF= 80 0B       ..

LC4C1:
                pla                          ; C4C1= 68          h
                sta $0319                    ; C4C2= 8D 19 03    ...
                pla                          ; C4C5= 68          h
                sta $0318                    ; C4C6= 8D 18 03    ...
                jsr getAddressForTextCursorPosition                    ; C4C9= 20 FA CC     zL
LC4CC:
                jmp setCRTCCursorAddress

LC4CF:
                lda $0322                    ; C4CF= AD 22 03    -".
                jsr LC1E0                    ; C4D2= 20 E0 C1     `A
                txa                          ; C4D5= 8A          .
                eor #$08                     ; C4D6= 49 08       I.
                tax                          ; C4D8= AA          *
                lda $0323                    ; C4D9= AD 23 03    -#.
                jsr LC1E0                    ; C4DC= 20 E0 C1     `A
LC4DF:
                ldy #$10                     ; C4DF= A0 10        .
                jsr copyGraphicsCursorPixels                    ; C4E1= 20 1C C9     .I
                ldx #$02                     ; C4E4= A2 02       ".
                ldy #$02                     ; C4E6= A0 02        .
                jsr LC4FC                    ; C4E8= 20 FC C4     |D
                ldx #$00                     ; C4EB= A2 00       ".
                ldy #$04                     ; C4ED= A0 04        .
                lda $0361                    ; C4EF= AD 61 03    -a.
LC4F2:
                dey                          ; C4F2= 88          .
                lsr a                        ; C4F3= 4A          J
                bne LC4F2                    ; C4F4= D0 FC       P|
                lda $0356                    ; C4F6= AD 56 03    -V.
                beq LC4FC                    ; C4F9= F0 01       p.
                iny                          ; C4FB= C8          H
LC4FC:
                asl $0310,x                  ; C4FC= 1E 10 03    ...
                rol $0311,x                  ; C4FF= 3E 11 03    >..
                dey                          ; C502= 88          .
                bne LC4FC                    ; C503= D0 F7       Pw
                sec                          ; C505= 38          8
                jsr LC50A                    ; C506= 20 0A C5     .E
                inx                          ; C509= E8          h
LC50A:
                lda $0310,x                  ; C50A= BD 10 03    =..
                sbc $030C,x                  ; C50D= FD 0C 03    }..
                sta $0310,x                  ; C510= 9D 10 03    ...
                rts                          ; C513= 60          `
                
vdu14EntryPoint:
                stz $0269                    ; C514= 9C 69 02    .i.
                lda #$91                     ; C517= A9 91       ).
vdu21EntryPoint:
                eor #$95                     ; C519= 49 95       I.
LC51B:
                tsb STATE                      ; C51B= 04 D0       .P
                rts                          ; C51D= 60          `

;-------------------------------------------------------------------------
;
; VDU 4 (&04) Print at text cursor [MasRef E.3-2]
; 
vdu4EntryPoint:
                lda $0361                    ; C51E= AD 61 03    -a.
                beq LC52C                    ; C521= F0 09       p.
                jsr showCursor               ; C523= 20 50 CF     PO
                lda #$2B                     ; C526= A9 2B       )+

                ; fall through to vdu15EntryPoint

;-------------------------------------------------------------------------
;
; VDU 15 (&0F) Page mode off [MasRef E.3-6]
; 
vdu15EntryPoint:
                eor #$0B                     ; C528= 49 0B       I.
                trb STATE                      ; C52A= 14 D0       .P
LC52C:
                rts                          ; C52C= 60          `

;-------------------------------------------------------------------------
;
; VDU 5 (&05) Print text at graphics cursor [MasRef E.3-3]
;
vdu5EntryPoint:
                lda $0361                    ; C52D= AD 61 03    -a.
                beq LC52C                    ; C530= F0 FA       pz
                lda #$20                     ; C532= A9 20       )
                jsr hideCursor               ; C534= 20 53 CF     SO
                bra LC51B                    ; C537= 80 E2       .b

;-------------------------------------------------------------------------
;
; VDU 17 (&11) Define text colour [MasRef E.3-7]
; 
vdu17EntryPoint:
                ldy #$00                     ; C539= A0 00        .
                lda $0323                    ; C53B= AD 23 03    -#.
                bpl LC541                    ; C53E= 10 01       ..
                iny                          ; C540= C8          H
LC541:
                and $0360                    ; C541= 2D 60 03    -`.
                sta $DA                      ; C544= 85 DA       .Z
                lda $0360                    ; C546= AD 60 03    -`.
                beq LC563                    ; C549= F0 18       p.
                and #$07                     ; C54B= 29 07       ).
                clc                          ; C54D= 18          .
                adc $DA                      ; C54E= 65 DA       eZ
                tax                          ; C550= AA          *
                lda LE14B,x                  ; C551= BD 4B E1    =Ka
                sta $0357,y                  ; C554= 99 57 03    .W.
                lda $0357                    ; C557= AD 57 03    -W.
                eor #$FF                     ; C55A= 49 FF       I.
                sta ZEOR                      ; C55C= 85 D3       .S
                eor $0358                    ; C55E= 4D 58 03    MX.
                sta ZORA                      ; C561= 85 D2       .R
LC563:
                rts                          ; C563= 60          `

;-------------------------------------------------------------------------
;
; VDU 18 (&12) Define graphics colour [MasRef E.3-7]
; 
vdu18EntryPoint:
                ldy #$00                     ; C564= A0 00        .
                lda $0323                    ; C566= AD 23 03    -#.
                bpl LC56C                    ; C569= 10 01       ..
LC56B:
                iny                          ; C56B= C8          H
LC56C:
                and $0360                    ; C56C= 2D 60 03    -`.
                sta $036D,y                  ; C56F= 99 6D 03    .m.
                lda $0322                    ; C572= AD 22 03    -".
                sta $035B,y                  ; C575= 99 5B 03    .[.
                and #$F0                     ; C578= 29 F0       )p
                sta $036A,y                  ; C57A= 99 6A 03    .j.
LC57D:
                lda $035B                    ; C57D= AD 5B 03    -[.
                ldx $036D                    ; C580= AE 6D 03    .m.
                ldy #$00                     ; C583= A0 00        .
                jsr LC590                    ; C585= 20 90 C5     .E
                lda $035C                    ; C588= AD 5C 03    -\.
                ldx $036E                    ; C58B= AE 6E 03    .n.
                ldy #$08                     ; C58E= A0 08        .
LC590:
                and #$F0                     ; C590= 29 F0       )p
                bne LC5AC                    ; C592= D0 18       P.
                stx $DA                      ; C594= 86 DA       .Z
                lda $0360                    ; C596= AD 60 03    -`.
                and #$07                     ; C599= 29 07       ).
                clc                          ; C59B= 18          .
                adc $DA                      ; C59C= 65 DA       eZ
                tax                          ; C59E= AA          *
                lda LE14B,x                  ; C59F= BD 4B E1    =Ka
                ldx #$07                     ; C5A2= A2 07       ".
LC5A4:
                sta L8820,y                  ; C5A4= 99 20 88    . .
                iny                          ; C5A7= C8          H
                dex                          ; C5A8= CA          J
                bpl LC5A4                    ; C5A9= 10 F9       .y
                rts                          ; C5AB= 60          `

LC5AC:
                lsr a                        ; C5AC= 4A          J
                tax                          ; C5AD= AA          *
                lda #$07                     ; C5AE= A9 07       ).
                sta $DA                      ; C5B0= 85 DA       .Z
LC5B2:
                lda L87F8,x                  ; C5B2= BD F8 87    =x.
                sta L8820,y                  ; C5B5= 99 20 88    . .
                inx                          ; C5B8= E8          h
                iny                          ; C5B9= C8          H
                dec $DA                      ; C5BA= C6 DA       FZ
                bpl LC5B2                    ; C5BC= 10 F4       .t
                rts                          ; C5BE= 60          `

LC5BF:
                lda #$20                     ; C5BF= A9 20       )
                sta $0358                    ; C5C1= 8D 58 03    .X.
                rts                          ; C5C4= 60          `

;-------------------------------------------------------------------------
;
; VDU 20 (&14) Restore default logical colours [MasRef E.3-10]
; 
vdu20EntryPoint:
                ldx #$05                     ; C5C5= A2 05       ".
LC5C7:
                stz $0357,x                  ; C5C7= 9E 57 03    .W.
                dex                          ; C5CA= CA          J
                bpl LC5C7                    ; C5CB= 10 FA       .z
                stz $036E                    ; C5CD= 9C 6E 03    .n.
                stz $036B                    ; C5D0= 9C 6B 03    .k.
                lda #$FF                     ; C5D3= A9 FF       ).
                ldx $0360                    ; C5D5= AE 60 03    .`.
                beq LC5BF                    ; C5D8= F0 E5       pe
                cpx #$0F                     ; C5DA= E0 0F       `.
                bne LC5E0                    ; C5DC= D0 02       P.
                lda #$3F                     ; C5DE= A9 3F       )?
LC5E0:
                sta $0357                    ; C5E0= 8D 57 03    .W.
                eor #$FF                     ; C5E3= 49 FF       I.
                sta ZORA                      ; C5E5= 85 D2       .R
                sta ZEOR                      ; C5E7= 85 D3       .S
                txa                          ; C5E9= 8A          .
                and #$07                     ; C5EA= 29 07       ).
                sta $036D                    ; C5EC= 8D 6D 03    .m.
                stz $036A                    ; C5EF= 9C 6A 03    .j.
                phx                          ; C5F2= DA          Z
                jsr LC57D                    ; C5F3= 20 7D C5     }E
                plx                          ; C5F6= FA          z
                stx $031F                    ; C5F7= 8E 1F 03    ...
                cpx #$03                     ; C5FA= E0 03       `.
                beq LC60F                    ; C5FC= F0 11       p.
                bcc LC620                    ; C5FE= 90 20       .
                stx $0320                    ; C600= 8E 20 03    . .
LC603:
                jsr vdu19EntryPoint          ; C603= 20 2D C6     -F
                dec $0320                    ; C606= CE 20 03    N .
                dec $031F                    ; C609= CE 1F 03    N..
                bpl LC603                    ; C60C= 10 F5       .u
                rts                          ; C60E= 60          `

LC60F:
                ldx #$07                     ; C60F= A2 07       ".
                stx $0320                    ; C611= 8E 20 03    . .
LC614:
                jsr vdu19EntryPoint          ; C614= 20 2D C6     -F
                lsr $0320                    ; C617= 4E 20 03    N .
                dec $031F                    ; C61A= CE 1F 03    N..
                bpl LC614                    ; C61D= 10 F5       .u
                rts                          ; C61F= 60          `

LC620:
                ldx #$07                     ; C620= A2 07       ".
                jsr LC62A                    ; C622= 20 2A C6     *F
                ldx #$00                     ; C625= A2 00       ".
                stz $031F                    ; C627= 9C 1F 03    ...
LC62A:
                stx $0320                    ; C62A= 8E 20 03    . .

                ; fall through to VDU19

;-------------------------------------------------------------------------
;
; VDU 19 (&13) Define logical colour [MasRef E.3-9]
; 
vdu19EntryPoint:
                php                          ; C62D= 08          .
                sei                          ; C62E= 78          x
                lda $031F                    ; C62F= AD 1F 03    -..
                and $0360                    ; C632= 2D 60 03    -`.
                tax                          ; C635= AA          *
                lda $0320                    ; C636= AD 20 03    - .
LC639:
                and #$0F                     ; C639= 29 0F       ).
                sta $036F,x                  ; C63B= 9D 6F 03    .o.
                tay                          ; C63E= A8          (
                lda $0360                    ; C63F= AD 60 03    -`.
                sta $FA                      ; C642= 85 FA       .z
                cmp #$03                     ; C644= C9 03       I.
                php                          ; C646= 08          .
                txa                          ; C647= 8A          .
LC648:
                lsr a                        ; C648= 4A          J
                ror $FA                      ; C649= 66 FA       fz
                bcs LC648                    ; C64B= B0 FB       0{
                asl $FA                      ; C64D= 06 FA       .z
                tya                          ; C64F= 98          .
                ora $FA                      ; C650= 05 FA       .z
                tax                          ; C652= AA          *
                ldy #$F0                     ; C653= A0 F0        p
LC655:
                plp                          ; C655= 28          (
                php                          ; C656= 08          .
                bne LC65C                    ; C657= D0 03       P.
                jsr LC66F                    ; C659= 20 6F C6     oF
LC65C:
                jsr LF261                    ; C65C= 20 61 F2     ar
                clc                          ; C65F= 18          .
                tya                          ; C660= 98          .
                adc $0360                    ; C661= 6D 60 03    m`.
                tay                          ; C664= A8          (
                txa                          ; C665= 8A          .
                adc #$10                     ; C666= 69 10       i.
                tax                          ; C668= AA          *
                iny                          ; C669= C8          H
                bne LC655                    ; C66A= D0 E9       Pi
                plp                          ; C66C= 28          (
                plp                          ; C66D= 28          (
                rts                          ; C66E= 60          `

LC66F:
                rol a                        ; C66F= 2A          *
                sta $DA                      ; C670= 85 DA       .Z
                rol a                        ; C672= 2A          *
                rol a                        ; C673= 2A          *
                php                          ; C674= 08          .
                rol $DA                      ; C675= 26 DA       &Z
                ror a                        ; C677= 6A          j
                plp                          ; C678= 28          (
                ror a                        ; C679= 6A          j
                ror a                        ; C67A= 6A          j
                rts                          ; C67B= 60          `

;-------------------------------------------------------------------------
;
; VDU 23 (&17) Various functions [MasRef E.3-12]
; 
vdu23EntryPoint:
                lda vduv.queueEnd-9           ;get VDU 23 code
                cmp #$20                     
                bcc LC691         ;branch taken if <32 - i.e., special
                
                ; copy the 8 bytes of character definition to the
                ; appropriate place.
                jsr getSoftCharacterDefinitionAddress
                ldy #$07                     ; C686= A0 07        .
LC688:
                lda vduv.queueEnd-8,y         ; C688= B9 1C 03    9..
                sta ($DE),y                  ; C68B= 91 DE       .^
                dey                          ; C68D= 88          .
                bpl LC688                    ; C68E= 10 F8       .x
                rts                          ; C690= 60          `

LC691:
                asl a
                tax
                lsr a
                cmp #$11
                bcs LC6A7                    ;taken if invalid code
                jmp (vdu23EntryPointTable,x) ; C698= 7C 69 E0    |i`

;-------------------------------------------------------------------------
;
; VDU 25 (&19) PLOT commands [MasRef E.3-21]
; 
vdu25EntryPoint:
                ldx $0361                    ; C69B= AE 61 03    .a.
                beq LC6A3                    ; C69E= F0 03       p.
                jmp LD146                    ; C6A0= 4C 46 D1    LFQ

LC6A3:
                lda $031F                    ; C6A3= AD 1F 03    -..
                clc                          ; C6A6= 18          .
LC6A7:
                jmp (VDUV)                  ; C6A7= 6C 26 02    l&.

;-------------------------------------------------------------------------
;
; VDU 26 (&1A) Restore default windows [MasRef E.3-34]
; 
vdu26EntryPoint:
                ldx #VDUVariables.workspace2C
-
                stz vduv,x                    ;reset workspace
                dex
                bpl -
                
                jsr getDefaultBoundsForCurrentScreenMODE
                stx vduv.textWindowRight
                sty vduv.textWindowBottom
                
                txa
                jsr setTextWindowWidthInBytes

                ; Set up the VDU queue as if VDU 24,0;0;1279;1023;,
                ; then call the VDU 24 entry point.
                
                ; 1c - ll - $00
                ; 1d - lh - $00
                ; 1e - tl - $00
                ; 1f - th - $00
                ; 20 - rl - $ff
                ; 21 - rh - $04
                ; 22 - tl - $ff
                ; 23 - th - $03
                
                ldy #$03                     
                sty $0323                    
                iny                          
                sty $0321                    
                dec $0322                    
                dec $0320                    
                jsr vdu24EntryPoint

                lda #STATE.isTextWindow
                trb STATE                    ;reset isTextWindow
                
                jmp vdu30EntryPoint          ;reset text cursor

;-------------------------------------------------------------------------
;
; 
LC6D8:
                jsr getAddressForTextCursorPosition
                bra setCRTCCursorAddress

;-------------------------------------------------------------------------

LC6DD:
                stx $034A                    ; C6DD= 8E 4A 03    .J.
                sta $034B                    ; C6E0= 8D 4B 03    .K.
                bpl LC6E9                    ; C6E3= 10 04       ..
                sec                          ; C6E5= 38          8
                sbc $0354                    ; C6E6= ED 54 03    mT.
LC6E9:
                stx ZMEMT+0                      ; C6E9= 86 D8       .X
                sta ZMEMT+1                      ; C6EB= 85 D9       .Y

;-------------------------------------------------------------------------
;
; 
setCRTCCursorAddress:
                ldx vduv.textCursorCRTCAddress+0
                lda vduv.textCursorCRTCAddress+1
                ldy #$0E

;-------------------------------------------------------------------------
;
; Set CRTC address - cursor, or screen start.
;
; entry:
;
; A (msb), X (msb) = 6502 address to set
;
; Y = first CRTC register to set
; 
setCRTCAddress:
                pha                          ;save screen address MSB
                lda vduv.currentScreenMODE
                cmp #$07                     ; C6F9= C9 07       I.
                pla                        ;restore screen address MSB
                bcs adjustAddressForMODE7
                stx $DA
                lsr a
                ror $DA                      ;/2
                lsr a                        
                ror $DA                      ;/4
                lsr a                        
                ror $DA                      ;/8
                ldx $DA
                bra setCRTCAddressRegisters

adjustAddressForMODE7:
                ; C=1
                sbc #$74                 ;adjust for Mode 7 addressing
                eor #$20                 ;adjust for Mode 7 addressing
setCRTCAddressRegisters:
                sty CRTC+0
                sta CRTC+1
                iny
                sty CRTC+0
                stx CRTC+1
                rts

;-------------------------------------------------------------------------
;
; VDU 24 (&18) Define graphics window [MasRef E.3-21]
; 
vdu24EntryPoint:
                jsr LC779                    ; C71F= 20 79 C7     yG
                ldx #$02                     ; C722= A2 02       ".
LC724:
                sec                          ; C724= 38          8
                lda $0320,x                  ; C725= BD 20 03    = .
                sbc $031C,x                  ; C728= FD 1C 03    }..
                sta $032C,x                  ; C72B= 9D 2C 03    .,.
                lda $0321,x                  ; C72E= BD 21 03    =!.
                sbc $031D,x                  ; C731= FD 1D 03    }..
                sta $032D,x                  ; C734= 9D 2D 03    .-.
                dex                          ; C737= CA          J
                dex                          ; C738= CA          J
                bpl LC724                    ; C739= 10 E9       .i
                ora $032F                    ; C73B= 0D 2F 03    ./.
                bmi LC779                    ; C73E= 30 39       09
                ldx #$20                     ; C740= A2 20       "
                jsr LD1DE                    ; C742= 20 DE D1     ^Q
                ldx #$1C                     ; C745= A2 1C       ".
                jsr LD1DE                    ; C747= 20 DE D1     ^Q
                lda $031F                    ; C74A= AD 1F 03    -..
                ora $031D                    ; C74D= 0D 1D 03    ...
                bmi LC779                    ; C750= 30 27       0'
                lda $0323                    ; C752= AD 23 03    -#.
                bne LC779                    ; C755= D0 22       P"
                ldx $0355                    ; C757= AE 55 03    .U.
                lda $0321                    ; C75A= AD 21 03    -!.
                sta $DA                      ; C75D= 85 DA       .Z
                lda $0320                    ; C75F= AD 20 03    - .
                lsr $DA                      ; C762= 46 DA       FZ
                ror a                        ; C764= 6A          j
                lsr $DA                      ; C765= 46 DA       FZ
                bne LC779                    ; C767= D0 10       P.
                ror a                        ; C769= 6A          j
                lsr a                        ; C76A= 4A          J
                cmp modeMaxColumn,x                  ; C76B= DD 09 E1    ].a
                beq LC772                    ; C76E= F0 02       p.
                bpl LC779                    ; C770= 10 07       ..
LC772:
                ldy #VDUVariables.graphicsWindowPixelsLeft
                ldx #VDUVariables.queueEnd-8
                jsr copyEightBytesWithinVDUVariables
LC779:
                ldx #VDUVariables.graphicsCursorPositionX
                ldy #VDUVariables.workspace28
                jmp exchangeFourVDUBytes                    ; C77D= 4C BA E2    L:b

;-------------------------------------------------------------------------
;
; Call getBytesPerInclusiveTextRow, and store the result in the
; textWindowWidthInBytes VDU variable.
; 
setTextWindowWidthInBytes:
                jsr getBytesPerInclusiveTextRow                    ; C780= 20 3B C9     ;I
                sta vduv.textWindowWidthInBytes+0
                stx vduv.textWindowWidthInBytes+1
                rts                          ; C789= 60          `

;-------------------------------------------------------------------------
;
; VDU 29 (&1D) Define graphics origin [MasRef E.3-35]
; 
vdu29EntryPoint:
                ldx #VDUVariables.queueEnd-4
                ldy #VDUVariables.graphicsWindowOriginX
                jsr copyFourBytesWithinVDUVariables
                jmp LC4DF                    ; C791= 4C DF C4    L_D

;-------------------------------------------------------------------------
;
; VDU 22 (&16) Select screen mode [MasRef E.3-11]
; 
vdu22EntryPoint:
                lda $0323                    ; C794= AD 23 03    -#.
                bra LC7BC                    ; C797= 80 23       .#

LC799:
                sta $DA                      ; C799= 85 DA       .Z
                lda $F4                      ; C79B= A5 F4       %t
                pha                          ; C79D= 48          H
                ora #$80                     ; C79E= 09 80       ..
                jsr selectROMA                    ; C7A0= 20 92 E5     .e
                jsr LC7AA                    ; C7A3= 20 AA C7     *G
                pla                          ; C7A6= 68          h
                jmp selectROMA                    ; C7A7= 4C 92 E5    L.e

LC7AA:
                ldx #$7F                     ; C7AA= A2 7F       ".
                stz STATE                      ; C7AC= 64 D0       dP
                lda $0366                    ; C7AE= AD 66 03    -f.
LC7B1:
                stz $02FF,x                  ; C7B1= 9E FF 02    ...
                dex                          ; C7B4= CA          J
                bne LC7B1                    ; C7B5= D0 FA       Pz
                sta $0366                    ; C7B7= 8D 66 03    .f.
                lda $DA                      ; C7BA= A5 DA       %Z

                ; VDU 22 - MODE
                ; -------------
LC7BC:
                stz $028A                    ; C7BC= 9C 8A 02    ...
                stz $028B                    ; C7BF= 9C 8B 02    ...
                tay                          ; C7C2= A8          (
                bmi LC7D5                    ; C7C3= 30 10       0.
                ldx $027F                    ; C7C5= AE 7F 02    ...
                beq LC7D5                    ; C7C8= F0 0B       p.
                lda #$10                     ; C7CA= A9 10       ).
                trb STATE                      ; C7CC= 14 D0       .P
                lda #$03                     ; C7CE= A9 03       ).
                trb ACCCON                    ; C7D0= 1C 34 FE    .4~
                bra LC7DE                    ; C7D3= 80 09       ..

LC7D5:
                lda #$10                     ; C7D5= A9 10       ).
                tsb STATE                      ; C7D7= 04 D0       .P
                lda #$03                     ; C7D9= A9 03       ).
                tsb ACCCON                    ; C7DB= 0C 34 FE    .4~
LC7DE:
                tya                          ; C7DE= 98          .
                and #$07                     ; C7DF= 29 07       ).
                tax                          ; C7E1= AA          *
                stx $0355                    ; C7E2= 8E 55 03    .U.
                lda LE13C,x                  ; C7E5= BD 3C E1    =<a
                sta $0360                    ; C7E8= 8D 60 03    .`.
                lda LE119,x                  ; C7EB= BD 19 E1    =.a
                sta $034F                    ; C7EE= 8D 4F 03    .O.
                lda LE162,x                  ; C7F1= BD 62 E1    =ba
                sta $0361                    ; C7F4= 8D 61 03    .a.
                bne LC7FB                    ; C7F7= D0 02       P.
                lda #$07                     ; C7F9= A9 07       ).
LC7FB:
                asl a                        ; C7FB= 0A          .
                tay                          ; C7FC= A8          (
                lda LE12E,y                  ; C7FD= B9 2E E1    9.a
                sta $0363                    ; C800= 8D 63 03    .c.
LC803:
                asl a                        ; C803= 0A          .
                bpl LC803                    ; C804= 10 FD       .}
                sta $0362                    ; C806= 8D 62 03    .b.
                ldy LE168,x                  ; C809= BC 68 E1    <ha
                sty $0356                    ; C80C= 8C 56 03    .V.
                lda LE174,y                  ; C80F= B9 74 E1    9ta
                php                          ; C812= 08          .
                sei                          ; C813= 78          x
                sta systemVIA.orb            ; C814= 8D 40 FE    .@~
                lda LE170,y                  ; C817= B9 70 E1    9pa
                sta systemVIA.orb            ; C81A= 8D 40 FE    .@~
                plp                          ; C81D= 28          (
                lda LE179,y                  ; C81E= B9 79 E1    9ya
                sta $0354                    ; C821= 8D 54 03    .T.
                lda LE17E,y                  ; C824= B9 7E E1    9~a
                sta $034E                    ; C827= 8D 4E 03    .N.
                lda #$EE                     ; C82A= A9 EE       )n
                trb STATE                      ; C82C= 14 D0       .P
                ldx $0355                    ; C82E= AE 55 03    .U.
                lda LE111,x                  ; C831= BD 11 E1    =.a
                jsr LF250                    ; C834= 20 50 F2     Pr
                php                          ; C837= 08          .
                sei                          ; C838= 78          x
                ldx LE183,y                  ; C839= BE 83 E1    >.a
                ldy #$0B                     ; C83C= A0 0B        .
LC83E:
                lda LE188,x                  ; C83E= BD 88 E1    =.a
                jsr setCRTCRegister          ; C841= 20 01 CF     .O
                dex                          ; C844= CA          J
                dey                          ; C845= 88          .
                bpl LC83E                    ; C846= 10 F6       .v
                plp                          ; C848= 28          (
                jsr vdu20EntryPoint          ; C849= 20 C5 C5     EE
                jsr LCF6D                    ; C84C= 20 6D CF     mO
                lda #$AA                     ; C84F= A9 AA       )*
                sta $0367                    ; C851= 8D 67 03    .g.
                sta $0368                    ; C854= 8D 68 03    .h.
                jsr vdu26EntryPoint          ; C857= 20 AA C6     *F
                lda $034C                    ; C85A= AD 4C 03    -L.
                ldx $034D                    ; C85D= AE 4D 03    .M.
                sta $0352                    ; C860= 8D 52 03    .R.
                stx $0353                    ; C863= 8E 53 03    .S.

                ; Do a fast hardware CLS of the whole screen
                ; ------------------------------------------
LC866:
                ldx #$00                     ; C866= A2 00       ".
                lda $034E                    ; C868= AD 4E 03    -N.
                stz $0350                    ; C86B= 9C 50 03    .P.
                sta $0351                    ; C86E= 8D 51 03    .Q.
                jsr LC6DD                    ; C871= 20 DD C6     ]F
                ldy #$0C                     ; C874= A0 0C        .
                jsr setCRTCAddressRegisters
                stz $0269                    ; C879= 9C 69 02    .i.
                sec                          ; C87C= 38          8
                lda #$80                     ; C87D= A9 80       ).
                sbc $034E                    ; C87F= ED 4E 03    mN.
                tax                          ; C882= AA          *
                ldy #$00                     ; C883= A0 00        .
                jsr LCB84                    ; C885= 20 84 CB     .K
                jmp vdu30EntryPoint          ; C888= 4C 7C C4    L|D

LC88B:
                jsr LC8CF                    ; Clear paged mode counter
LC88E:
                jsr osbyte76    ; Call KEYV to test Shift & Ctrl keys
                bcc LC895                    ; Ctrl not pressed, exit loop
                bmi LC88B                    ; Shift pressed, loop back
LC895:
                lda STATE                      ; C895= A5 D0       %P
                eor #$04                     ; C897= 49 04       I.
                and #$46                     ; C899= 29 46       )F
                bne LC8D6                    ; C89B= D0 39       P9
                jsr LC8D7                    ; C89D= 20 D7 C8     WH
                lda $0318,y                  ; C8A0= B9 18 03    9..
                cmp $0308,x                  ; C8A3= DD 08 03    ]..
                bne LC8D3                    ; C8A6= D0 2B       P+
                sec                          ; C8A8= 38          8
                iny                          ; C8A9= C8          H
                dey                          ; C8AA= 88          .
                bne LC8B5                    ; C8AB= D0 08       P.
                lda $030A                    ; C8AD= AD 0A 03    -..
                sbc $0308                    ; C8B0= ED 08 03    m..
                bra LC8BB                    ; C8B3= 80 06       ..

LC8B5:
                lda $0309                    ; C8B5= AD 09 03    -..
                sbc $030B                    ; C8B8= ED 0B 03    m..
LC8BB:
                pha                          ; C8BB= 48          H
                lsr a                        ; C8BC= 4A          J
                lsr a                        ; C8BD= 4A          J
                sta $DA                      ; C8BE= 85 DA       .Z
                sec                          ; C8C0= 38          8
                pla                          ; C8C1= 68          h
                sbc $DA                      ; C8C2= E5 DA       eZ
                cmp $0269                    ; C8C4= CD 69 02    Mi.
                bcs LC8D3                    ; C8C7= B0 0A       0.
LC8C9:
                jsr osbyte76                    ; C8C9= 20 30 F2     0r
                sec                          ; C8CC= 38          8
                bpl LC8C9                    ; C8CD= 10 FA       .z

LC8CF:
                stz $0269                    ; Clear paged mode counter
                nop                          ; C8D2= EA          j
LC8D3:
                inc $0269                    ; C8D3= EE 69 02    ni.
LC8D6:
                rts                          ; C8D6= 60          `

LC8D7:
                lda $0366                    ; C8D7= AD 66 03    -f.
                and #$0E                     ; C8DA= 29 0E       ).
                lsr a                        ; C8DC= 4A          J
                tax                          ; C8DD= AA          *
                lda LE204,x                  ; C8DE= BD 04 E2    =.b
                tax                          ; C8E1= AA          *
                and #$01                     ; C8E2= 29 01       ).
                tay                          ; C8E4= A8          (
                rts                          ; C8E5= 60          `

LC8E6:
                ldy #$24                     ; C8E6= A0 24        $
                jsr LD5B7                    ; C8E8= 20 B7 D5     7U
                phy                          ; C8EB= 5A          Z
                phx                          ; C8EC= DA          Z
                jsr LD5CC                    ; C8ED= 20 CC D5     LU
                pla                          ; C8F0= 68          h
                phy                          ; C8F1= 5A          Z
                ldy #$28                     ; C8F2= A0 28        (
                jsr LC8F9                    ; C8F4= 20 F9 C8     yH
                plx                          ; C8F7= FA          z
                pla                          ; C8F8= 68          h
LC8F9:
                pha                          ; C8F9= 48          H
                jsr copyTwoBytesWithinVDUVariables                    ; C8FA= 20 0C C9     .I
                plx                          ; C8FD= FA          z
                inx                          ; C8FE= E8          h
                inx                          ; C8FF= E8          h
                bra copyTwoBytesWithinVDUVariables                    ; C900= 80 0A       ..

LC902:
                ldy #$28                     ; C902= A0 28        (
                
;-------------------------------------------------------------------------
;
; Copy 8 bytes in the VDU variables.
;
; entry:
;
; X = source offset
;
; Y = dest offset
; 
copyEightBytesWithinVDUVariables:
                lda #$08                     ; C904= A9 08       ).
                bra copyABytesWithinVDUVariables

;-------------------------------------------------------------------------
;
; copyTextWindowWidthInBytesToWorkspace28
copyTextWindowWidthInBytesToWorkspace28:
                ldx #VDUVariables.textWindowWidthInBytes
                ldy #VDUVariables.workspace28

;-------------------------------------------------------------------------
;
; 
copyTwoBytesWithinVDUVariables:
                lda #$02                     ; C90C= A9 02       ).
                bra copyABytesWithinVDUVariables

;-------------------------------------------------------------------------
;
; Copy text window info to workspace2C.
; 
copyTextWindowToWorkspace2C:
                ldx #VDUVariables.textWindowLeft
                ldy #VDUVariables.workspace2C
                bra copyFourBytesWithinVDUVariables

;-------------------------------------------------------------------------
;
; Copy last 4 bytes of VDU queue somewhere.
;
copyLastFourVDUQueueBytes:
                ldx #VDUVariables.queueEnd-4
                bra copyFourBytesWithinVDUVariables

;-------------------------------------------------------------------------
;
; Copy old graphics cursor position to current graphics cursor position.
; 
copyGraphicsCursorPixelsToOldGraphicsCursorPixels:
                ldy #VDUVariables.oldGraphicsCursorPixelsX

;-------------------------------------------------------------------------
;
; Copy the graphics cursor position somewhere.
; 
copyGraphicsCursorPixels:
                ldx #VDUVariables.graphicsCursorPixelsX

;-------------------------------------------------------------------------
;
; Copy 4 bytes in the VDU variables.
;
; entry:
;
; X = source offset
;
; Y = dest offset
; 
copyFourBytesWithinVDUVariables:
                lda #$04

                ; fall through to copyABytesWithinVDUVariables

;-------------------------------------------------------------------------
;
; Copy some bytes in the VDU variables.
;
; entry:
;
; A = number of bytes
;
; X = source offset
;
; Y = dest offset
; 
copyABytesWithinVDUVariables:
                pha                          ; C920= 48          H
                lda vduv,x
                sta vduv,y
                inx                          ; C927= E8          h
                iny                          ; C928= C8          H
                pla                          ; C929= 68          h
                dec a                        ; C92A= 3A          :
                bne copyABytesWithinVDUVariables
                rts                          ; C92D= 60          `

;-------------------------------------------------------------------------

LC92E:
                pha                          ; C92E= 48          H
                tya                          ; C92F= 98          .
                eor #$FF                     ; C930= 49 FF       I.
                tay                          ; C932= A8          (
                pla                          ; C933= 68          h
                eor #$FF                     ; C934= 49 FF       I.
                iny                          ; C936= C8          H
                bne LC93A                    ; C937= D0 01       P.
                inc a                        ; C939= 1A          .
LC93A:
                rts                          ; C93A= 60          `

;-------------------------------------------------------------------------
;
; Multiply a text window width by the number of bytes per char. There
; are inclusive and exclusive versions, depending on how the width was
; calculated.
;
; entry:
;
; A = value-1 to multiply (inclusive), value to multiply (exclusive)
;
; exit:
;
; A (lsb), X (msb) = value*vduv.bytesPerCharacter
; 
getBytesPerInclusiveTextRow:
                inc a                        ; C93B= 1A          .
getBytesPerExclusiveTextRow:
                sta $DA                      ; C93C= 85 DA       .Z
                stz $DB                      ; C93E= 64 DB       d[
                lda vduv.bytesPerCharacter    ;A=1/8/16/32
-
                lsr a
                bcs +                     ;taken when multiply is done
                asl $DA              ;shift size LSB
                rol $DB              ;carry into size MSB
                bra -

+
                lda $DA                      ; C94C= A5 DA       %Z
                ldx $DB                      ; C94E= A6 DB       &[
                rts                          ; C950= 60          `

;-------------------------------------------------------------------------

LC951:
                ldx #$08                     ; C951= A2 08       ".
                stx $0359                    ; C953= 8E 59 03    .Y.
                lda $035C                    ; C956= AD 5C 03    -\.
                and #$0F                     ; C959= 29 0F       ).
                sta $035A                    ; C95B= 8D 5A 03    .Z.
                rts                          ; C95E= 60          `

LC95F:
                lda #$00                     ; C95F= A9 00       ).
                pha                          ; C961= 48          H
                pha                          ; C962= 48          H
                ldx $032A                    ; C963= AE 2A 03    .*.
                jsr LCC7D                    ; C966= 20 7D CC     }L
                bra LC97F                    ; C969= 80 14       ..

LC96B:
                sec                          ; C96B= 38          8
                lda $034F                    ; C96C= AD 4F 03    -O.
                sbc $032A                    ; C96F= ED 2A 03    m*.
                pha                          ; C972= 48          H
                jsr getDefaultBoundsForCurrentScreenMODE                    ; C973= 20 A2 E2     "b
                phx                          ; C976= DA          Z
                lda #$00                     ; C977= A9 00       ).
                ldx $032A                    ; C979= AE 2A 03    .*.
                jsr LCC5D                    ; C97C= 20 5D CC     ]L
LC97F:
                ; scroll left/right
                stx vduv.screenTopLeftAddress+0
                sta vduv.screenTopLeftAddress+1
                plx                          ; C985= FA          z
                ldy #$00                     ; C986= A0 00        .
                jsr getAddressForTextPosition
                plx                          ; C98B= FA          z
                lda #$00                     ; C98C= A9 00       ).
                jsr LCC5D                    ; C98E= 20 5D CC     ]L
                stx ZMEMT+0                      ; C991= 86 D8       .X
                sta ZMEMT+1                      ; C993= 85 D9       .Y
                jsr getDefaultBoundsForCurrentScreenMODE                    ; C995= 20 A2 E2     "b
                jsr LCAAE                    ; C998= 20 AE CA     .J
                bra LC9B8                    ; C99B= 80 1B       ..

LC99D:
                ldy #$00                     ; C99D= A0 00        .
                jsr LCC77                    ; C99F= 20 77 CC     wL
                bra LC9AA                    ; C9A2= 80 06       ..

LC9A4:
                jsr getDefaultBoundsForCurrentScreenMODE                    ; C9A4= 20 A2 E2     "b
                jsr LCC57                    ; C9A7= 20 57 CC     WL
LC9AA:
                stx vduv.screenTopLeftAddress+0
                sta vduv.screenTopLeftAddress+1
                ldx #$00                     ; C9B0= A2 00       ".
                jsr getAddressForTextPosition                    ; C9B2= 20 B0 CC     0L
                jsr LCAE8                    ; C9B5= 20 E8 CA     hJ
LC9B8:
                ldy #$0C
                lda vduv.screenTopLeftAddress+1
                ldx vduv.screenTopLeftAddress+0
                jmp setCRTCAddress

LC9C3:
                jsr LCCA0                    ; C9C3= 20 A0 CC      L
LC9C6:
                sta $DD                      ; C9C6= 85 DD       .]
                stx $DC                      ; C9C8= 86 DC       .\
                jsr LCC2C                    ; C9CA= 20 2C CC     ,L
                lda $0329                    ; C9CD= AD 29 03    -).
                ldx $0328                    ; C9D0= AE 28 03    .(.
                jsr LCC5D                    ; C9D3= 20 5D CC     ]L
                jsr LCC88                    ; C9D6= 20 88 CC     .L
                stx ZMEMT+0                      ; C9D9= 86 D8       .X
                sta ZMEMT+1                      ; C9DB= 85 D9       .Y
                lda #$00                     ; C9DD= A9 00       ).
                ldx $032A                    ; C9DF= AE 2A 03    .*.
                jsr LCC7D                    ; C9E2= 20 7D CC     }L
                jsr LCC88                    ; C9E5= 20 88 CC     .L
                stx $DA                      ; C9E8= 86 DA       .Z
                sta $DB                      ; C9EA= 85 DB       .[
                ldy $0328                    ; C9EC= AC 28 03    ,(.
                ldx $0329                    ; C9EF= AE 29 03    .).
                bvc LCA17                    ; C9F2= 50 23       P#
                ldy $E0                      ; C9F4= A4 E0       $`
                ldx $E1                      ; C9F6= A6 E1       &a
                jsr LCBE7                    ; C9F8= 20 E7 CB     gK
                ldy $E0                      ; C9FB= A4 E0       $`
                bcc LCA08                    ; C9FD= 90 09       ..
                ldx #$80                     ; C9FF= A2 80       ".
                stx $DB                      ; CA01= 86 DB       .[
                stz $DA                      ; CA03= 64 DA       dZ
                ldy $032A                    ; CA05= AC 2A 03    ,*.
LCA08:
                ldx #$00                     ; CA08= A2 00       ".
                jsr LCBF3                    ; CA0A= 20 F3 CB     sK
                ldx #$80                     ; CA0D= A2 80       ".
                stx ZMEMT+1                      ; CA0F= 86 D9       .Y
                stz ZMEMT+0                      ; CA11= 64 D8       dX
                ldy $DE                      ; CA13= A4 DE       $^
                ldx $DF                      ; CA15= A6 DF       &_
LCA17:
                jsr LCBE7                    ; CA17= 20 E7 CB     gK
                jsr LCC97                    ; CA1A= 20 97 CC     .L
                jsr LCC94                    ; CA1D= 20 94 CC     .L
                jsr LCC57                    ; CA20= 20 57 CC     WL
                stx ZMEMT+0                      ; CA23= 86 D8       .X
                sta ZMEMT+1                      ; CA25= 85 D9       .Y
                dec $032B                    ; CA27= CE 2B 03    N+.
                bpl LC9C6                    ; CA2A= 10 9A       ..
                rts                          ; CA2C= 60          `

LCA2D:
                jsr LCCA0                    ; CA2D= 20 A0 CC      L
LCA30:
                jsr LCC2C                    ; CA30= 20 2C CC     ,L
                lda #$00                     ; CA33= A9 00       ).
                ldx $032A                    ; CA35= AE 2A 03    .*.
                jsr LCC5D                    ; CA38= 20 5D CC     ]L
                stx $DA                      ; CA3B= 86 DA       .Z
                sta $DB                      ; CA3D= 85 DB       .[
                jsr LCC57                    ; CA3F= 20 57 CC     WL
                stx $DC                      ; CA42= 86 DC       .\
                sta $DD                      ; CA44= 85 DD       .]
                ldy $0328                    ; CA46= AC 28 03    ,(.
                ldx $0329                    ; CA49= AE 29 03    .).
                bvc LCA73                    ; CA4C= 50 25       P%
                ldy $DE                      ; CA4E= A4 DE       $^
                ldx $DF                      ; CA50= A6 DF       &_
                jsr LCBA8                    ; CA52= 20 A8 CB     (K
                ldy $DE                      ; CA55= A4 DE       $^
                bcc LCA63                    ; CA57= 90 0A       ..
                ldx $034E                    ; CA59= AE 4E 03    .N.
                stx $DB                      ; CA5C= 86 DB       .[
                stz $DA                      ; CA5E= 64 DA       dZ
                ldy $032A                    ; CA60= AC 2A 03    ,*.
LCA63:
                ldx #$00                     ; CA63= A2 00       ".
                jsr LCBB4                    ; CA65= 20 B4 CB     4K
                ldx $034E                    ; CA68= AE 4E 03    .N.
                stx ZMEMT+1                      ; CA6B= 86 D9       .Y
                stz ZMEMT+0                      ; CA6D= 64 D8       dX
                ldy $E0                      ; CA6F= A4 E0       $`
                ldx $E1                      ; CA71= A6 E1       &a
LCA73:
                jsr LCBA8                    ; CA73= 20 A8 CB     (K
                jsr LCC94                    ; CA76= 20 94 CC     .L
                dec $032B                    ; CA79= CE 2B 03    N+.
                bpl LCA30                    ; CA7C= 10 B2       .2
LCA7E:
                rts                          ; CA7E= 60          `

LCA7F:
                stx $DC                      ; CA7F= 86 DC       .\
                tax                          ; CA81= AA          *
                sec                          ; CA82= 38          8
                sbc $DC                      ; CA83= E5 DC       e\
                beq LCA7E                    ; CA85= F0 F7       pw
                sta $DD                      ; CA87= 85 DD       .]
                phx                          ; CA89= DA          Z
                jsr getBytesPerExclusiveTextRow                    ; CA8A= 20 3C C9     <I
                plx                          ; CA8D= FA          z
                lda $0366                    ; CA8E= AD 66 03    -f.
                bit #$08                     ; CA91= 89 08       ..
                bne LCAA0                    ; CA93= D0 0B       P.
                bit #$02                     ; CA95= 89 02       ..
                jsr LCCCA                    ; CA97= 20 CA CC     JL
                ldy $DA                      ; CA9A= A4 DA       $Z
                ldx $DB                      ; CA9C= A6 DB       &[
                bra LCACE                    ; CA9E= 80 2E       ..

LCAA0:
                bit #$04                     ; CAA0= 89 04       ..
                jsr LCCCA                    ; CAA2= 20 CA CC     JL
                lda $034F                    ; CAA5= AD 4F 03    -O.
                sta $032A                    ; CAA8= 8D 2A 03    .*.
                ldy $DD                      ; CAAB= A4 DD       $]
                dey                          ; CAAD= 88          .
LCAAE:
                tya                          ; CAAE= 98          .
                beq LCAC9                    ; CAAF= F0 18       p.
                sty $DC                      ; CAB1= 84 DC       .\
LCAB3:
                jsr LCC57                    ; CAB3= 20 57 CC     WL
                stx $DA                      ; CAB6= 86 DA       .Z
                sta $DB                      ; CAB8= 85 DB       .[
                jsr LCAC9                    ; CABA= 20 C9 CA     IJ
                ldx $DA                      ; CABD= A6 DA       &Z
                stx ZMEMT+0                      ; CABF= 86 D8       .X
                lda $DB                      ; CAC1= A5 DB       %[
                sta ZMEMT+1                      ; CAC3= 85 D9       .Y
                dec $DC                      ; CAC5= C6 DC       F\
                bne LCAB3                    ; CAC7= D0 EA       Pj
LCAC9:
                ldx #$00                     ; CAC9= A2 00       ".
                ldy $032A                    ; CACB= AC 2A 03    ,*.
LCACE:
                lda $0328                    ; CACE= AD 28 03    -(.
                pha                          ; CAD1= 48          H
                lda $0329                    ; CAD2= AD 29 03    -).
                pha                          ; CAD5= 48          H
                sty $0328                    ; CAD6= 8C 28 03    .(.
                stx $0329                    ; CAD9= 8E 29 03    .).
                jsr LCAE8                    ; CADC= 20 E8 CA     hJ
                pla                          ; CADF= 68          h
                sta $0329                    ; CAE0= 8D 29 03    .).
                pla                          ; CAE3= 68          h
                sta $0328                    ; CAE4= 8D 28 03    .(.
                rts                          ; CAE7= 60          `

LCAE8:
                ldx ZMEMT+0                      ; CAE8= A6 D8       &X
                lda ZMEMT+1                      ; CAEA= A5 D9       %Y
                jsr LCC2C                    ; CAEC= 20 2C CC     ,L
                bra LCB6A                    ; CAEF= 80 79       .y

LCAF1:
                ldx #$77                     ; CAF1= A2 77       "w
                lda #$CC                     ; CAF3= A9 CC       )L
                ldy $032D                    ; CAF5= AC 2D 03    ,-.
                bra LCB01                    ; CAF8= 80 07       ..

LCAFA:
                ldx #$57                     ; CAFA= A2 57       "W
                lda #$CC                     ; CAFC= A9 CC       )L
                ldy $032F                    ; CAFE= AC 2F 03    ,/.
LCB01:
                stx $035D                    ; CB01= 8E 5D 03    .].
                sta $035E                    ; CB04= 8D 5E 03    .^.
                sec                          ; CB07= 38          8
                lda $032D                    ; CB08= AD 2D 03    --.
                sbc $032F                    ; CB0B= ED 2F 03    m/.
                sta $032B                    ; CB0E= 8D 2B 03    .+.
                ldx $032C                    ; CB11= AE 2C 03    .,.
                jsr getAddressForTextPosition                    ; CB14= 20 B0 CC     0L
                sta $DD                      ; CB17= 85 DD       .]
                stx $DC                      ; CB19= 86 DC       .\
                jsr LCC2C                    ; CB1B= 20 2C CC     ,L
                lda $032B                    ; CB1E= AD 2B 03    -+.
                beq LCB6A                    ; CB21= F0 47       pG
LCB23:
                php                          ; CB23= 08          .
                jsr LC024                    ; CB24= 20 24 C0     $@
                stx $DA                      ; CB27= 86 DA       .Z
                sta $DB                      ; CB29= 85 DB       .[
                stx $DC                      ; CB2B= 86 DC       .\
                sta $DD                      ; CB2D= 85 DD       .]
                plp                          ; CB2F= 28          (
                bvc LCB4F                    ; CB30= 50 1D       P.
                clv                          ; CB32= B8          8
LCB33:
                ldx $DF                      ; CB33= A6 DF       &_
                ldy $DE                      ; CB35= A4 DE       $^
                jsr LCBB4                    ; CB37= 20 B4 CB     4K
                lda $034E                    ; CB3A= AD 4E 03    -N.
                bvs LCB45                    ; CB3D= 70 06       p.
                sta ZMEMT+1                      ; CB3F= 85 D9       .Y
                stz ZMEMT+0                      ; CB41= 64 D8       dX
                bra LCB49                    ; CB43= 80 04       ..

LCB45:
                sta $DB                      ; CB45= 85 DB       .[
                stz $DA                      ; CB47= 64 DA       dZ
LCB49:
                ldx $E1                      ; CB49= A6 E1       &a
                ldy $E0                      ; CB4B= A4 E0       $`
                bra LCB5A                    ; CB4D= 80 0B       ..

LCB4F:
                jsr LCC2C                    ; CB4F= 20 2C CC     ,L
                bvs LCB33                    ; CB52= 70 DF       p_
                ldx $0329                    ; CB54= AE 29 03    .).
                ldy $0328                    ; CB57= AC 28 03    ,(.
LCB5A:
                jsr LCBB4                    ; CB5A= 20 B4 CB     4K
                ldx $DC                      ; CB5D= A6 DC       &\
                stx ZMEMT+0                      ; CB5F= 86 D8       .X
                lda $DD                      ; CB61= A5 DD       %]
                sta ZMEMT+1                      ; CB63= 85 D9       .Y
                dec $032B                    ; CB65= CE 2B 03    N+.
                bne LCB23                    ; CB68= D0 B9       P9
LCB6A:
                ldx $0329                    ; CB6A= AE 29 03    .).
                ldy $0328                    ; CB6D= AC 28 03    ,(.
                bvc LCB84                    ; CB70= 50 12       P.
                ldx $DF                      ; CB72= A6 DF       &_
                ldy $DE                      ; CB74= A4 DE       $^
                jsr LCB84                    ; CB76= 20 84 CB     .K
                lda $034E                    ; CB79= AD 4E 03    -N.
                sta ZMEMT+1                      ; CB7C= 85 D9       .Y
                stz ZMEMT+0                      ; CB7E= 64 D8       dX
                ldx $E1                      ; CB80= A6 E1       &a
                ldy $E0                      ; CB82= A4 E0       $`
LCB84:
                tya                          ; CB84= 98          .
                clc                          ; CB85= 18          .
                adc ZMEMT+0                      ; CB86= 65 D8       eX
                sta ZMEMT+0                      ; CB88= 85 D8       .X
                bcs LCB8E                    ; CB8A= B0 02       0.
                dec ZMEMT+1                      ; CB8C= C6 D9       FY
LCB8E:
                tya                          ; CB8E= 98          .
                eor #$FF                     ; CB8F= 49 FF       I.
                tay                          ; CB91= A8          (
                lsr a                        ; CB92= 4A          J
                lda $0358                    ; CB93= AD 58 03    -X.
                bcs LCB9F                    ; CB96= B0 07       0.
                bra LCB9C                    ; CB98= 80 02       ..

LCB9A:
                sta (ZMEMT),y                  ; CB9A= 91 D8       .X
LCB9C:
                iny                          ; CB9C= C8          H
                sta (ZMEMT),y                  ; CB9D= 91 D8       .X
LCB9F:
                iny                          ; CB9F= C8          H
                bne LCB9A                    ; CBA0= D0 F8       Px
                inc ZMEMT+1                      ; CBA2= E6 D9       fY
                dex                          ; CBA4= CA          J
                bpl LCB9A                    ; CBA5= 10 F3       .s
                rts                          ; CBA7= 60          `

LCBA8:
                sec                          ; CBA8= 38          8
                tya                          ; CBA9= 98          .
                sbc $032A                    ; CBAA= ED 2A 03    m*.
                tay                          ; CBAD= A8          (
                bcs LCBB4                    ; CBAE= B0 04       0.
                dex                          ; CBB0= CA          J
                bmi LCBE6                    ; CBB1= 30 33       03
                sec                          ; CBB3= 38          8
LCBB4:
                php                          ; CBB4= 08          .
                tya                          ; CBB5= 98          .
                clc                          ; CBB6= 18          .
                adc $DA                      ; CBB7= 65 DA       eZ
                sta $DA                      ; CBB9= 85 DA       .Z
                bcs LCBBF                    ; CBBB= B0 02       0.
                dec $DB                      ; CBBD= C6 DB       F[
LCBBF:
                tya                          ; CBBF= 98          .
                clc                          ; CBC0= 18          .
                adc ZMEMT+0                      ; CBC1= 65 D8       eX
                sta ZMEMT+0                      ; CBC3= 85 D8       .X
                bcs LCBC9                    ; CBC5= B0 02       0.
                dec ZMEMT+1                      ; CBC7= C6 D9       FY
LCBC9:
                tya                          ; CBC9= 98          .
                eor #$FF                     ; CBCA= 49 FF       I.
                tay                          ; CBCC= A8          (
                lsr a                        ; CBCD= 4A          J
                bcs LCBDB                    ; CBCE= B0 0B       0.
                bra LCBD6                    ; CBD0= 80 04       ..

LCBD2:
                lda ($DA),y                  ; CBD2= B1 DA       1Z
                sta (ZMEMT),y                  ; CBD4= 91 D8       .X
LCBD6:
                iny                          ; CBD6= C8          H
                lda ($DA),y                  ; CBD7= B1 DA       1Z
                sta (ZMEMT),y                  ; CBD9= 91 D8       .X
LCBDB:
                iny                          ; CBDB= C8          H
                bne LCBD2                    ; CBDC= D0 F4       Pt
                inc $DB                      ; CBDE= E6 DB       f[
                inc ZMEMT+1                      ; CBE0= E6 D9       fY
                dex                          ; CBE2= CA          J
                bpl LCBD2                    ; CBE3= 10 ED       .m
LCBE5:
                plp                          ; CBE5= 28          (
LCBE6:
                rts                          ; CBE6= 60          `

LCBE7:
                sec                          ; CBE7= 38          8
                tya                          ; CBE8= 98          .
                sbc $032A                    ; CBE9= ED 2A 03    m*.
                tay                          ; CBEC= A8          (
                bcs LCBF3                    ; CBED= B0 04       0.
                dex                          ; CBEF= CA          J
                bmi LCBE6                    ; CBF0= 30 F4       0t
                sec                          ; CBF2= 38          8
LCBF3:
                php                          ; CBF3= 08          .
                tya                          ; CBF4= 98          .
                eor #$FF                     ; CBF5= 49 FF       I.
                pha                          ; CBF7= 48          H
                sec                          ; CBF8= 38          8
                adc $DA                      ; CBF9= 65 DA       eZ
                sta $DA                      ; CBFB= 85 DA       .Z
                bcs LCC01                    ; CBFD= B0 02       0.
                dec $DB                      ; CBFF= C6 DB       F[
LCC01:
                pla                          ; CC01= 68          h
                sec                          ; CC02= 38          8
                adc ZMEMT+0                      ; CC03= 65 D8       eX
                sta ZMEMT+0                      ; CC05= 85 D8       .X
                bcs LCC0B                    ; CC07= B0 02       0.
                dec ZMEMT+1                      ; CC09= C6 D9       FY
LCC0B:
                tya                          ; CC0B= 98          .
                lsr a                        ; CC0C= 4A          J
                bcs LCC23                    ; CC0D= B0 14       0.
                bne LCC1E                    ; CC0F= D0 0D       P.
LCC11:
                dex                          ; CC11= CA          J
                bmi LCBE5                    ; CC12= 30 D1       0Q
                dec $DB                      ; CC14= C6 DB       F[
                dec ZMEMT+1                      ; CC16= C6 D9       FY
                bra LCC1E                    ; CC18= 80 04       ..

LCC1A:
                lda ($DA),y                  ; CC1A= B1 DA       1Z
                sta (ZMEMT),y                  ; CC1C= 91 D8       .X
LCC1E:
                dey                          ; CC1E= 88          .
                lda ($DA),y                  ; CC1F= B1 DA       1Z
                sta (ZMEMT),y                  ; CC21= 91 D8       .X
LCC23:
                dey                          ; CC23= 88          .
                bne LCC1A                    ; CC24= D0 F4       Pt
                lda ($DA)                    ; CC26= B2 DA       2Z
                sta (ZMEMT)                    ; CC28= 92 D8       .X
                bra LCC11                    ; CC2A= 80 E5       .e

LCC2C:
                pha                          ; CC2C= 48          H
                txa                          ; CC2D= 8A          .
                clc                          ; CC2E= 18          .
                adc $0328                    ; CC2F= 6D 28 03    m(.
                tax                          ; CC32= AA          *
                pla                          ; CC33= 68          h
                adc $0329                    ; CC34= 6D 29 03    m).
                bvc LCC56                    ; CC37= 50 1D       P.
                stx $E0                      ; CC39= 86 E0       .`
                and #$7F                     ; CC3B= 29 7F       ).
                sta $E1                      ; CC3D= 85 E1       .a
                ora $E0                      ; CC3F= 05 E0       .`
                beq LCC55                    ; CC41= F0 12       p.
                php                          ; CC43= 08          .
                sec                          ; CC44= 38          8
                lda $0328                    ; CC45= AD 28 03    -(.
                sbc $E0                      ; CC48= E5 E0       e`
                sta $DE                      ; CC4A= 85 DE       .^
                lda $0329                    ; CC4C= AD 29 03    -).
                sbc $E1                      ; CC4F= E5 E1       ea
                sta $DF                      ; CC51= 85 DF       ._
                plp                          ; CC53= 28          (
                rts                          ; CC54= 60          `

LCC55:
                clv                          ; CC55= B8          8
LCC56:
                rts                          ; CC56= 60          `

LCC57:
                lda vduv.bytesPerCharacterRow+1
                ldx vduv.bytesPerCharacterRow+0
LCC5D:
                clc                          ; CC5D= 18          .
LCC5E:
                php                          ; CC5E= 08          .
                pha                          ; CC5F= 48          H
                txa                          ; CC60= 8A          .
                adc ZMEMT+0                      ; CC61= 65 D8       eX
                tax                          ; CC63= AA          *
                pla                          ; CC64= 68          h
                adc ZMEMT+1                      ; CC65= 65 D9       eY
                bpl +
                sec
                sbc vduv.screenSizeHighByte ;handle wraparound at end
+
                cmp vduv.startScreenAddressHighByte
                bcs +
                adc vduv.screenSizeHighByte ;handle wraparound at start
+
                plp                          ; CC75= 28          (
                rts                          ; CC76= 60          `

LCC77:
                lda $0353                    ; CC77= AD 53 03    -S.
                ldx $0352                    ; CC7A= AE 52 03    .R.
LCC7D:
                pha                          ; CC7D= 48          H
                txa                          ; CC7E= 8A          .
                eor #$FF                     ; CC7F= 49 FF       I.
                tax                          ; CC81= AA          *
                pla                          ; CC82= 68          h
                eor #$FF                     ; CC83= 49 FF       I.
                sec                          ; CC85= 38          8
                bra LCC5E                    ; CC86= 80 D6       .V

LCC88:
                cmp $034E                    ; CC88= CD 4E 03    MN.
                bne LCC93                    ; CC8B= D0 06       P.
                cpx #$00                     ; CC8D= E0 00       `.
                bne LCC93                    ; CC8F= D0 02       P.
                lda #$80                     ; CC91= A9 80       ).
LCC93:
                rts                          ; CC93= 60          `

LCC94:
                jsr LCAC9                    ; CC94= 20 C9 CA     IJ
LCC97:
                ldx $DC                      ; CC97= A6 DC       &\
                stx ZMEMT+0                      ; CC99= 86 D8       .X
                lda $DD                      ; CC9B= A5 DD       %]
                sta ZMEMT+1                      ; CC9D= 85 D9       .Y
                rts                          ; CC9F= 60          `

LCCA0:
                sec                          ; CCA0= 38          8
                lda $032D                    ; CCA1= AD 2D 03    --.
                sbc $032F                    ; CCA4= ED 2F 03    m/.
                sta $032B                    ; CCA7= 8D 2B 03    .+.
                ldx $032C                    ; CCAA= AE 2C 03    .,.
                ldy $032F                    ; CCAD= AC 2F 03    ,/.

;-------------------------------------------------------------------------
;
; Get display address for a text position.
; 
getAddressForTextPosition:
                lda vduv.textCursorXPosition
                pha                          ; CCB3= 48          H
                lda vduv.textCursorYPosition
                pha                          ; CCB7= 48          H
                stx vduv.textCursorXPosition
                sty vduv.textCursorYPosition
                jsr getAddressForTextCursorPosition                    ; CCBE= 20 FA CC     zL
                ply                          ; CCC1= 7A          z
                sty vduv.textCursorYPosition
                ply                          ; CCC5= 7A          z
                sty vduv.textCursorXPosition
                rts                          ; CCC9= 60          `

;-------------------------------------------------------------------------

LCCCA:
                beq LCCCF                    ; CCCA= F0 03       p.
                dex                          ; CCCC= CA          J
                stx $DC                      ; CCCD= 86 DC       .\
LCCCF:
                lda $0366                    ; CCCF= AD 66 03    -f.
                and #$0E                     ; CCD2= 29 0E       ).
                tax                          ; CCD4= AA          *
                lda $DC                      ; CCD5= A5 DC       %\
LCCD7:
                jsr LC2C7                    ; CCD7= 20 C7 C2     GB
LCCDA:
                ldx $0318                    ; CCDA= AE 18 03    ...
                cpx $0308                    ; CCDD= EC 08 03    l..
                bmi LCCF8                    ; CCE0= 30 16       0.
                cpx $030A                    ; CCE2= EC 0A 03    l..
                beq LCCE9                    ; CCE5= F0 02       p.
                bpl LCCF8                    ; CCE7= 10 0F       ..
LCCE9:
                ldx $0319                    ; CCE9= AE 19 03    ...
                cpx $030B                    ; CCEC= EC 0B 03    l..
                bmi LCCF8                    ; CCEF= 30 07       0.
                cpx $0309                    ; CCF1= EC 09 03    l..
                bmi getAddressForTextCursorPosition                    ; CCF4= 30 04       0.
                beq getAddressForTextCursorPosition                    ; CCF6= F0 02       p.
LCCF8:
                sec                          ; CCF8= 38          8
                rts                          ; CCF9= 60          `

;-------------------------------------------------------------------------
;
; Get display address for current text cursor position.
; 
; Set up display address without using BBC lookup table at &E0/1
; 
getAddressForTextCursorPosition:
                lda vduv.currentScreenMODEGroup
                and #$fe                     ; Reduce to 0,0,2,2,4
                tax                          ; Index into jump table
                ldy vduv.textCursorYPosition  ; Get current line
                jmp (multiplyRoutinesTable,x) ; Jump to calculation setup
                
multiplyRoutinesTable:
                .word multiplyBy640     ; Memory map 0,1  MODE 0,1,2,3
                .word multiplyBy320       ; Memory map 2,3  MODE 4,5,6
                .word multiplyBy40        ; Memory map 4    MODE 7

multiplyBy40:
                ldx multiplyBy40TableHigh,y ; Get offset high byte for start of this line
                lda multiplyBy40TableLow,y ; Get offset low byte for start of this line
                clc
                bra LCD29                    ; CD13= 80 14       ..

multiplyBy320:
                lda multiplyBy640TableHigh,y 
                lsr a                        
                tax                          
                tya                          
                and #$03                     
                lsr a                        
                ror a                        
                bra LCD28                    

multiplyBy640:
                ldx multiplyBy640TableHigh,y
                tya
                and #$01
                lsr a
LCD28:
                ror a                        ; A=A/2 +(128*carry)

LCD29:
                adc vduv.screenTopLeftAddress+0
                sta ZMEMT+0                      ; store it
                txa
                adc vduv.screenTopLeftAddress+1 ; window start address hi
                tay
                lda vduv.textCursorXPosition  ; text column
                ldx vduv.bytesPerCharacter    ; bytes per character
                dex
                beq LCD4E                    ; 1 colour, MODE 7
                cpx #$0F
                beq LCD43                    ; 4 colours, MODE 1 or MODE 5
                bcc LCD44                    ; 2 colours, MODE 0,3,4,6
                asl a                        ; 16 colours, MODE 2
LCD43:
                asl a                        ; CD43= 0A          .
LCD44:
                asl a                        ; CD44= 0A          .
                asl a                        ; CD45= 0A          .
                bcc LCD4A                    ; CD46= 90 02       ..
                iny                          ; CD48= C8          H
                iny                          ; CD49= C8          H
LCD4A:
                asl a                        ; CD4A= 0A          .
                bcc LCD4F                    ; CD4B= 90 02       ..
                iny                          ; CD4D= C8          H
LCD4E:
                clc                          ; CD4E= 18          .
LCD4F:
                adc ZMEMT+0                      ; CD4F= 65 D8       eX
                sta ZMEMT+0                      ; CD51= 85 D8       .X
                sta vduv.textCursorCRTCAddress+0
                tax                          ; CD56= AA          *
                tya                          ; CD57= 98          .
                adc #$00                     ; CD58= 69 00       i.
                sta vduv.textCursorCRTCAddress+1
                bpl LCD63                    ; CD5D= 10 04       ..
                sec                          ; CD5F= 38          8
                sbc vduv.screenSizeHighByte
LCD63:
                sta ZMEMT+1                      ; CD63= 85 D9       .Y
                clc                          ; CD65= 18          .
                rts                          ; CD66= 60          `

;-------------------------------------------------------------------------

LCD67:
                inc $0324                    ; CD67= EE 24 03    n$.
                bne LCD6F                    ; CD6A= D0 03       P.
                inc $0325                    ; CD6C= EE 25 03    n%.
LCD6F:
                asl a                        ; CD6F= 0A          .
LCD70:
                bpl LCD67                    ; CD70= 10 F5       .u
                phy                          ; CD72= 5A          Z
                sta $DD                      ; CD73= 85 DD       .]
                ldx #$24                     ; CD75= A2 24       "$
                jsr LDEC8                    ; CD77= 20 C8 DE     H^
                bra LCD7E                    ; CD7A= 80 02       ..

LCD7C:
                bpl LCD81                    ; CD7C= 10 03       ..
LCD7E:
                jsr LDB51                    ; CD7E= 20 51 DB     Q[
LCD81:
                lsr ZMASK                      ; CD81= 46 D1       FQ
                bcc LCD88                    ; CD83= 90 03       ..
                jsr LDA67                    ; CD85= 20 67 DA     gZ
LCD88:
                asl $DD                      ; CD88= 06 DD       .]
                bne LCD7C                    ; CD8A= D0 F0       Pp
                ldx #VDUVariables.workspace28
                ldy #VDUVariables.graphicsCursorPixelsX
                jsr copyTwoBytesWithinVDUVariables                    ; CD90= 20 0C C9     .I
                ply                          ; CD93= 7A          z
                bra LCDE6                    ; CD94= 80 50       .P

LCD96:
                jsr getSoftCharacterDefinitionAddress
                stz vduv.graphicsPlotState
                lda vduv.foregroundGCOLMode
                and #$0F                     ; CD9F= 29 0F       ).
LCDA1:
                sta $035A                    ; CDA1= 8D 5A 03    .Z.
                ldy #VDUVariables.workspace28
                jsr copyGraphicsCursorPixels
                ldy #$24                     ; CDA9= A0 24        $
                ldx #$00                     ; CDAB= A2 00       ".
                jsr LCEB4                    ; CDAD= 20 B4 CE     4N
                sta $DC                      ; CDB0= 85 DC       .\
                ldx #$04                     ; CDB2= A2 04       ".
                jsr LCEB4                    ; CDB4= 20 B4 CE     4N
                ror a                        ; CDB7= 6A          j
                trb $DC                      ; CDB8= 14 DC       .\
                ldx #$26                     ; CDBA= A2 26       "&
                ldy #$06                     ; CDBC= A0 06        .
                jsr LCEB4                    ; CDBE= 20 B4 CE     4N
                sta $DD                      ; CDC1= 85 DD       .]
                ldx #$26                     ; CDC3= A2 26       "&
                ldy #$02                     ; CDC5= A0 02        .
                jsr LCEB4                    ; CDC7= 20 B4 CE     4N
                ror a                        ; CDCA= 6A          j
                trb $DD                      ; CDCB= 14 DD       .]
                ldy #$07                     ; CDCD= A0 07        .
LCDCF:
                lda ($DE),y                  ; CDCF= B1 DE       1^
                and $DC                      ; CDD1= 25 DC       %\
                lsr $DD                      ; CDD3= 46 DD       F]
                bcs LCDD9                    ; CDD5= B0 02       0.
                lda #$00                     ; CDD7= A9 00       ).
LCDD9:
                sta $032C,y                  ; CDD9= 99 2C 03    .,.
                dey                          ; CDDC= 88          .
                bpl LCDCF                    ; CDDD= 10 F0       .p
                ldy #$F8                     ; CDDF= A0 F8        x
LCDE1:
                lda $0234,y                  ; CDE1= B9 34 02    94.
                bne LCD70                    ; CDE4= D0 8A       P.
LCDE6:
                ldx $0326                    ; CDE6= AE 26 03    .&.
                bne LCDEE                    ; CDE9= D0 03       P.
                dec $0327                    ; CDEB= CE 27 03    N'.
LCDEE:
                dec $0326                    ; CDEE= CE 26 03    N&.
                iny                          ; CDF1= C8          H
                bne LCDE1                    ; CDF2= D0 ED       Pm
                ldx #VDUVariables.workspace2A
                ldy #VDUVariables.graphicsCursorPixelsY
                jmp copyTwoBytesWithinVDUVariables                    ; CDF8= 4C 0C C9    L.I

LCDFB:
                lda #$F8                     ; CDFB= A9 F8       )x
                sta $DE                      ; CDFD= 85 DE       .^
                lda #$BB                     ; CDFF= A9 BB       );
                sta $DF                      ; CE01= 85 DF       ._
                ldx #$08                     ; CE03= A2 08       ".
                stx $0359                    ; CE05= 8E 59 03    .Y.
                lda #$00                     ; CE08= A9 00       ).
                bra LCDA1                    ; CE0A= 80 95       ..

LCE0C:
                jsr LD12D                    ; CE0C= 20 2D D1     -Q
                bcs LCD96                    ; CE0F= B0 85       0.
                ldx $0360                    ; CE11= AE 60 03    .`.
                beq LCE4D                    ; CE14= F0 37       p7
                jsr getSoftCharacterDefinitionAddress                    ; CE16= 20 2C E2     ,b
LCE19:
                ldy #$07                     ; CE19= A0 07        .
                cpx #$03                     ; CE1B= E0 03       `.
                beq LCE53                    ; CE1D= F0 34       p4
                bcs LCE7C                    ; CE1F= B0 5B       0[
LCE21:
                lda ($DE),y                  ; CE21= B1 DE       1^
                ora ZORA                      ; CE23= 05 D2       .R
                eor ZEOR                      ; CE25= 45 D3       ES
                sta (ZMEMT),y                  ; CE27= 91 D8       .X
                dey                          ; CE29= 88          .
                bpl LCE21                    ; CE2A= 10 F5       .u
                rts                          ; CE2C= 60          `

LCE2D:
                lda #$20                     ; CE2D= A9 20       )
                bit $0366                    ; CE2F= 2C 66 03    ,f.
                bne LCE37                    ; CE32= D0 03       P.
                jsr vdu8EntryPoint           ; CE34= 20 9A C2     .B
LCE37:
                jsr testVDU5State                    ; CE37= 20 D2 E2     Rb
                bne LCDFB                    ; CE3A= D0 BF       P?
                ldx $0360                    ; CE3C= AE 60 03    .`.
                beq LCE4B                    ; CE3F= F0 0A       p.
                lda #$00                     ; CE41= A9 00       ).
                sta $DE                      ; CE43= 85 DE       .^
                lda #$B9                     ; CE45= A9 B9       )9
                sta $DF                      ; CE47= 85 DF       ._
                bra LCE19                    ; CE49= 80 CE       .N

LCE4B:
                lda #$20                     ; CE4B= A9 20       )
LCE4D:
                jsr LDDE5                    ; CE4D= 20 E5 DD     e]
                sta (ZMEMT)                    ; CE50= 92 D8       .X
                rts                          ; CE52= 60          `

LCE53:
                lda ZMEMT+1                      ; CE53= A5 D9       %Y
                ldx ZMEMT+0                      ; CE55= A6 D8       &X
                jsr LCEE7                    ; CE57= 20 E7 CE     gN
LCE5A:
                lda ($DE),y                  ; CE5A= B1 DE       1^
                and #$0F                     ; CE5C= 29 0F       ).
                tax                          ; CE5E= AA          *
                lda LE013,x                  ; CE5F= BD 13 E0    =.`
                ora ZORA                      ; CE62= 05 D2       .R
                eor ZEOR                      ; CE64= 45 D3       ES
                sta ($E0),y                  ; CE66= 91 E0       .`
                lda ($DE),y                  ; CE68= B1 DE       1^
                lsr a                        ; CE6A= 4A          J
                lsr a                        ; CE6B= 4A          J
                lsr a                        ; CE6C= 4A          J
                lsr a                        ; CE6D= 4A          J
                tax                          ; CE6E= AA          *
                lda LE013,x                  ; CE6F= BD 13 E0    =.`
                ora ZORA                      ; CE72= 05 D2       .R
                eor ZEOR                      ; CE74= 45 D3       ES
                sta (ZMEMT),y                  ; CE76= 91 D8       .X
                dey                          ; CE78= 88          .
                bpl LCE5A                    ; CE79= 10 DF       ._
                rts                          ; CE7B= 60          `

LCE7C:
                lda ZMEMT+1                      ; CE7C= A5 D9       %Y
                ldx ZMEMT+0                      ; CE7E= A6 D8       &X
                jsr LCED9                    ; CE80= 20 D9 CE     YN
LCE83:
                lda ($DE),y                  ; CE83= B1 DE       1^
                jsr LCEA9                    ; CE85= 20 A9 CE     )N
                sta ($E0),y                  ; CE88= 91 E0       .`
                lda ($DE),y                  ; CE8A= B1 DE       1^
                lsr a                        ; CE8C= 4A          J
                lsr a                        ; CE8D= 4A          J
                pha                          ; CE8E= 48          H
                jsr LCEA9                    ; CE8F= 20 A9 CE     )N
                sta ($DC),y                  ; CE92= 91 DC       .\
                pla                          ; CE94= 68          h
                lsr a                        ; CE95= 4A          J
                lsr a                        ; CE96= 4A          J
                pha                          ; CE97= 48          H
                jsr LCEA9                    ; CE98= 20 A9 CE     )N
                sta ($DA),y                  ; CE9B= 91 DA       .Z
                pla                          ; CE9D= 68          h
                lsr a                        ; CE9E= 4A          J
                lsr a                        ; CE9F= 4A          J
                jsr LCEA9                    ; CEA0= 20 A9 CE     )N
                sta (ZMEMT),y                  ; CEA3= 91 D8       .X
                dey                          ; CEA5= 88          .
                bpl LCE83                    ; CEA6= 10 DB       .[
                rts                          ; CEA8= 60          `

LCEA9:
                and #$03                     ; CEA9= 29 03       ).
                tax                          ; CEAB= AA          *
                lda LE023,x                  ; CEAC= BD 23 E0    =#`
                ora ZORA                      ; CEAF= 05 D2       .R
                eor ZEOR                      ; CEB1= 45 D3       ES
                rts                          ; CEB3= 60          `

LCEB4:
                sec                          ; CEB4= 38          8
                lda $0300,x                  ; CEB5= BD 00 03    =..
                sbc $0300,y                  ; CEB8= F9 00 03    y..
                sta $DA                      ; CEBB= 85 DA       .Z
                lda $0301,x                  ; CEBD= BD 01 03    =..
                sbc $0301,y                  ; CEC0= F9 01 03    y..
                bmi LCED1                    ; CEC3= 30 0C       0.
                bne LCED5                    ; CEC5= D0 0E       P.
                ldx $DA                      ; CEC7= A6 DA       &Z
                cpx #$08                     ; CEC9= E0 08       `.
                bcs LCED5                    ; CECB= B0 08       0.
                lda LE127,x                  ; CECD= BD 27 E1    ='a
                rts                          ; CED0= 60          `

LCED1:
                lda #$FF                     ; CED1= A9 FF       ).
                sec                          ; CED3= 38          8
                rts                          ; CED4= 60          `

LCED5:
                lda #$00                     ; CED5= A9 00       ).
                clc                          ; CED7= 18          .
                rts                          ; CED8= 60          `

LCED9:
                jsr LCEE7                    ; CED9= 20 E7 CE     gN
                stx $DA                      ; CEDC= 86 DA       .Z
                sta $DB                      ; CEDE= 85 DB       .[
                jsr LCEE7                    ; CEE0= 20 E7 CE     gN
                stx $DC                      ; CEE3= 86 DC       .\
                sta $DD                      ; CEE5= 85 DD       .]
LCEE7:
                pha                          ; CEE7= 48          H
                txa                          ; CEE8= 8A          .
                clc                          ; CEE9= 18          .
                adc #$08                     ; CEEA= 69 08       i.
                tax                          ; CEEC= AA          *
                pla                          ; CEED= 68          h
                bcc LCEF6                    ; CEEE= 90 06       ..
                inc a                        ; CEF0= 1A          .
                bpl LCEF6                    ; CEF1= 10 03       ..
                lda $034E                    ; CEF3= AD 4E 03    -N.
LCEF6:
                stx $E0                      ; CEF6= 86 E0       .`
                sta $E1                      ; CEF8= 85 E1       .a
                rts                          ; CEFA= 60          `

;-------------------------------------------------------------------------
;
; VDU 23 0 Control 6845 CRTC directly [MasRef E.3-12]
; 
vdu23_0_EntryPoint:
                lda vduv.queueEnd-7           ;get value
                ldy vduv.queueEnd-8           ;get register

                ; fall through to setCRTCRegister

;-------------------------------------------------------------------------
;
; Set a CRTC register, adjusting and/or noting values if appropriate.
;
; entry:
;
; Y = register to set
;
; A = value

setCRTCRegister:
                cpy #$07
                bcc setCRTCRegisterRaw
                bne +        ;taken if not setting R7

                ; Setting R7 (vsync position), so apply the *TV offset.
                adc $0290
+
                cpy #$08
                bne +                    ;taken if not setting R8

                ; Setting R8 (interlace/delay register), so apply the
                ; *TV interlace setting.
                ora #$00
                bmi +       ;branch taken if bit 7 set - this is taken
                            ;to imply the mode being set is Mode 7
                eor $0291 ;apply *TV interlace setting
+
                cpy #$0A                     ; CF15= C0 0A       @.
                bne setCRTCRegisterRaw

                ; Setting R10 (cursor start register). Note the new
                ; setting in the VDU variable. If in VDU5 mode, reuse
                ; the result of testVDU5State - i.e., 32 - as the
                ; setting, hiding the cursor.
                sta vduv.lastCursorStartRegisterValue
                jsr testVDU5State
                bne rtsCF2A
                lda vduv.lastCursorStartRegisterValue

                ; fall through to setCRTCRegisterRaw

;-------------------------------------------------------------------------
;
; Set a CRTC register.
; 
setCRTCRegisterRaw:
                sty CRTC+0                   ; CF24= 8C 00 FE    ..~
                sta CRTC+1                   ; CF27= 8D 01 FE    ..~
rtsCF2A:
                rts                          ; CF2A= 60          `

;-------------------------------------------------------------------------
;
; VDU 23 1 Turn cursor on/off [MasRef E.3-12]
; 
vdu23_1_EntryPoint:
                jsr testVDU5State
                bne rtsCF2A                  ;taken if VDU5
                lda vduv.queueEnd-8           ;get new cursor state
                and #$03                     ;mask off bits of interest
                asl a
                tax
                lda #$20 ;R10 value for hiding the cursor - save a few
                         ;bytes by loading this here
                jmp (LCF3C,x)

LCF3C:
                .word hideCursor            ; 23,1,0... - hide
                .word showCursor            ; 23,1,1... - show
                .word steadyCursor          ; 23,1,2... - steady
                .word slowFlashCursor       ; 23,1,3... - flash slowly

steadyCursor:
                lda #%01100000
                trb vduv.lastCursorStartRegisterValue ;steady cursor
                bra showCursor

slowFlashCursor:
                lda #%01100000
                tsb vduv.lastCursorStartRegisterValue ;slow blink cursor
showCursor:
                lda vduv.lastCursorStartRegisterValue
hideCursor:
                ldy #$0A
                bra setCRTCRegisterRaw

;-------------------------------------------------------------------------
;
; VDU 23 2–5 Set ECF patterns [MasRef E.3-13]
; 
vdu23_2_EntryPoint:
vdu23_3_EntryPoint:
vdu23_4_EntryPoint:
vdu23_5_EntryPoint:
                sbc #$01  ;subtract 2 (C=0 on entry...) to get pattern
                          ;index
                asl a                 
                asl a                 
                asl a                        ;index*8
                adc #$07                     ;index*8+7
                tay
                ldx #$07
-
                lda vduv.queueEnd-8,x
                sta andy.ecfPatterns,y
                dey
                dex
                bpl -
                bra LCF93                    ; CF6B= 80 26       .&

;-------------------------------------------------------------------------

LCF6D:
                lda vduv.currentScreenMODE
                bne +
                dec a                        ;treat MODE 0 as MODE 255??
+
                and #$03 ;0=mode 4, 1=mode 1/5, 2=mode 2/6, 3=mode 0/3/7
                inc a  ;1=mode 4, 2=mode 1/5, 3=mode 2/6, 4=mode 0/3/7
                asl a
                asl a
                asl a
                asl a
                tax                          ; CF7A= AA          *
                ldy #28                     ; CF7B= A0 1C        .
LCF7D:
                lda LE1C3,x                  ; CF7D= BD C3 E1    =Ca
                sta andy.ecfPatterns-1,y
                sta andy.ecfPatterns+4-1,y
                dex                          ; CF86= CA          J
                dey                          ; CF87= 88          .
                tya                          ; CF88= 98          .
                bit #$07                     ; CF89= 89 07       ..
                bne LCF7D                    ; CF8B= D0 F0       Pp
                dey                          ; CF8D= 88          .
                dey                          ; CF8E= 88          .
                dey                          ; CF8F= 88          .
                dey                          ; CF90= 88          .
                bpl LCF7D                    ; CF91= 10 EA       .j
LCF93:
                jmp LC57D                    ; CF93= 4C 7D C5    L}E

LCF96:
                sbc #$0B                     ; CF96= E9 0B       i.
                asl a                        ; CF98= 0A          .
                asl a                        ; CF99= 0A          .
                asl a                        ; CF9A= 0A          .
                adc #$03                     ; CF9B= 69 03       i.
                pha                          ; CF9D= 48          H
                ldx #$07                     ; CF9E= A2 07       ".
LCFA0:
                lda $031C,x                  ; CFA0= BD 1C 03    =..
                and $0360                    ; CFA3= 2D 60 03    -`.
                sta $DA                      ; CFA6= 85 DA       .Z
                lda $0360                    ; CFA8= AD 60 03    -`.
                and #$07                     ; CFAB= 29 07       ).
                adc $DA                      ; CFAD= 65 DA       eZ
                tay                          ; CFAF= A8          (
                lda LE14B,y                  ; CFB0= B9 4B E1    9Ka
                sta $031C,x                  ; CFB3= 9D 1C 03    ...
                dex                          ; CFB6= CA          J
                bpl LCFA0                    ; CFB7= 10 E7       .g
                lda #$55                     ; CFB9= A9 55       )U
                ldx $0355                    ; CFBB= AE 55 03    .U.
                bne LCFC2                    ; CFBE= D0 02       P.
                lda #$33                     ; CFC0= A9 33       )3
LCFC2:
                sta $DA                      ; CFC2= 85 DA       .Z
                ply                          ; CFC4= 7A          z
                ldx #$07                     ; CFC5= A2 07       ".
LCFC7:
                lda $031C,x                  ; CFC7= BD 1C 03    =..
                dex                          ; CFCA= CA          J
                eor $031C,x                  ; CFCB= 5D 1C 03    ]..
                and $DA                      ; CFCE= 25 DA       %Z
                eor $031C,x                  ; CFD0= 5D 1C 03    ]..
                sta L8800,y                  ; CFD3= 99 00 88    ...
                sta L8804,y                  ; CFD6= 99 04 88    ...
                dey                          ; CFD9= 88          .
                dex                          ; CFDA= CA          J
                bpl LCFC7                    ; CFDB= 10 EA       .j
                bra LCF93                    ; CFDD= 80 B4       .4

;-------------------------------------------------------------------------
;
; VDU 23 6 Set dotted lines pattern [MasRef E.3-13]
; 
vdu23_6_EntryPoint:
                lda vduv.queueEnd-8
                sta vduv.dotPattern
                rts

;-------------------------------------------------------------------------
;
; VDU 23 7 Scroll window directly [MasRef E.3-14]
; 
vdu23_7_EntryPoint:
                lda vduv.queueEnd-8           ;get <m>
                bne scrollEntireScreen
                jsr copyTextWindowToWorkspace2C
                lda STATE
                and #STATE.isTextWindow
                asl a ;A=$10 (text window active) or $00 (no text window)
                bra +

scrollEntireScreen:
                lda #$00
                sta vduv.workspace2C          ;left
                sta vduv.workspace2F          ;top
                jsr getDefaultBoundsForCurrentScreenMODE
                stx vduv.workspace2E          ;right
                sty vduv.workspace2D          ;bottom
+
                sta $DC
                sec
                lda vduv.workspace2E          ;right
                sbc vduv.workspace2C          ;right-left
                jsr getBytesPerInclusiveTextRow
                sta vduv.workspace28+0        ;bytes per row LSB
                stx vduv.workspace28+1        ;bytes per row MSB
                ldx vduv.bytesPerCharacter
                cpx #$01
                beq +  ;when 1 byte/char, no cell/byte distinction
                lda vduv.queueEnd-6       ;get <z>
                beq +                ;taken if scrolling by 1 cell
                ldx #$08                 ;scroll by 1 horizontal byte
+
                stx vduv.workspace2A

; <d> is a bitmask - %00000AVN.
;
; A is set if scrolling by axis (controlled by the VDU cursor flags)
; rather than by direction.
;
; V is set to scroll vertically/in Y rather than horizontally/in X.
;
; N is set to scroll in the negative direction.
                
                lda vduv.queueEnd-7           ;00000avn C=?
                lsr a                        ;000000av C=n
                php
                rol a                        ;00000avn C=0
                plp                          ;00000avn C=n
                rol a                        ;0000avnn C=0
                asl a                        ;000avnn0 C=0
                cmp #$10                     ;$10 = 000a0000
                bcc LD039                 ;taken if scrolling by direction
                eor vduv.cursorFlags       ;adjust axes
LD039:
                and #vduv.cursorFlags.swapAxes|vduv.cursorFlags.invertVertical|vduv.cursorFlags.invertHorizontal
                ora $DC                      ; D03B= 05 DC       .\
LD03D:
                tax
                lda vduv.screenTopLeftAddress+0
                sta ZMEMT+0
                lda vduv.screenTopLeftAddress+1
                sta ZMEMT+1
                jsr callScrollRoutine
                jmp LC6D8                    ; D04B= 4C D8 C6    LXF

callScrollRoutine:
                jmp (scrollRoutinesTable,x)

LD051:
                phx                          ; D051= DA          Z
                jsr copyTextWindowToWorkspace2C
                jsr copyTextWindowWidthInBytesToWorkspace28                    ; D055= 20 08 C9     .I
                ldx $034F                    ; D058= AE 4F 03    .O.
                stx $032A                    ; D05B= 8E 2A 03    .*.
                pla                          ; D05E= 68          h
                lsr a                        ; D05F= 4A          J
                eor STATE                      ; D060= 45 D0       EP
                and #(~STATE.isTextWindow)&$ff
                eor STATE                      ; D064= 45 D0       EP
                asl a                        ; D066= 0A          .
                bra LD03D                    ; D067= 80 D4       .T

LD069:
                stz $0334                    ; D069= 9C 34 03    .4.
                stz $0335                    ; D06C= 9C 35 03    .5.
                jsr LE252                    ; D06F= 20 52 E2     Rb
                stx $0336                    ; D072= 8E 36 03    .6.
                sty $0337                    ; D075= 8C 37 03    .7.
                jsr LE25C                    ; D078= 20 5C E2     \b
                inx                          ; D07B= E8          h
                stx $0338                    ; D07C= 8E 38 03    .8.
                sty $0339                    ; D07F= 8C 39 03    .9.
                ldy #$00                     ; D082= A0 00        .
                lda $031C                    ; D084= AD 1C 03    -..
                jsr LD0E5                    ; D087= 20 E5 D0     eP
                lda $031D                    ; D08A= AD 1D 03    -..
                jsr LD0E5                    ; D08D= 20 E5 D0     eP
                lda $0333                    ; D090= AD 33 03    -3.
                cmp $0331                    ; D093= CD 31 03    M1.
                bcc LD10E                    ; D096= 90 76       .v
                bne LD0A2                    ; D098= D0 08       P.
                lda $0330                    ; D09A= AD 30 03    -0.
                cmp $0332                    ; D09D= CD 32 03    M2.
                bcs LD10E                    ; D0A0= B0 6C       0l
LD0A2:
                lda $0318                    ; D0A2= AD 18 03    -..
                pha                          ; D0A5= 48          H
                lda $0319                    ; D0A6= AD 19 03    -..
                pha                          ; D0A9= 48          H
                ldy $0331                    ; D0AA= AC 31 03    ,1.
LD0AD:
                phy                          ; D0AD= 5A          Z
                lda $0366                    ; D0AE= AD 66 03    -f.
                eor #$08                     ; D0B1= 49 08       I.
                and #$0E                     ; D0B3= 29 0E       ).
                tax                          ; D0B5= AA          *
                tya                          ; D0B6= 98          .
                jsr LC2C7                    ; D0B7= 20 C7 C2     GB
                ldx #$00                     ; D0BA= A2 00       ".
                lda $0338                    ; D0BC= AD 38 03    -8.
                cpy $0331                    ; D0BF= CC 31 03    L1.
                bne LD0C7                    ; D0C2= D0 03       P.
                ldx $0330                    ; D0C4= AE 30 03    .0.
LD0C7:
                cpy $0333                    ; D0C7= CC 33 03    L3.
                beq LD0D3                    ; D0CA= F0 07       p.
                jsr LCA7F                    ; D0CC= 20 7F CA     .J
                ply                          ; D0CF= 7A          z
                iny                          ; D0D0= C8          H
                bra LD0AD                    ; D0D1= 80 DA       .Z

LD0D3:
                lda $0332                    ; D0D3= AD 32 03    -2.
                jsr LCA7F                    ; D0D6= 20 7F CA     .J
                ply                          ; D0D9= 7A          z
                pla                          ; D0DA= 68          h
                sta $0319                    ; D0DB= 8D 19 03    ...
                pla                          ; D0DE= 68          h
                sta $0318                    ; D0DF= 8D 18 03    ...
                jmp getAddressForTextCursorPosition                    ; D0E2= 4C FA CC    LzL

LD0E5:
                pha                          ; D0E5= 48          H
                and #$03                     ; D0E6= 29 03       ).
                asl a                        ; D0E8= 0A          .
                jsr LD0F0                    ; D0E9= 20 F0 D0     pP
                pla                          ; D0EC= 68          h
                lsr a                        ; D0ED= 4A          J
                ora #$01                     ; D0EE= 09 01       ..
LD0F0:
                tax                          ; D0F0= AA          *
                and #$01                     ; D0F1= 29 01       ).
                pha                          ; D0F3= 48          H
                lda $0334,x                  ; D0F4= BD 34 03    =4.
                plx                          ; D0F7= FA          z
                clc                          ; D0F8= 18          .
                iny                          ; D0F9= C8          H
                adc $031D,y                  ; D0FA= 79 1D 03    y..
                bmi LD109                    ; D0FD= 30 0A       0.
                cmp $0338,x                  ; D0FF= DD 38 03    ]8.
                bcc LD10B                    ; D102= 90 07       ..
                lda $0338,x                  ; D104= BD 38 03    =8.
                bra LD10B                    ; D107= 80 02       ..

LD109:
                lda #$00                     ; D109= A9 00       ).
LD10B:
                sta $032F,y                  ; D10B= 99 2F 03    ./.
LD10E:
                rts                          ; D10E= 60          `

LD10F:
                sec                          ; D10F= 38          8
LD110:
                ldx $031C                    ; D110= AE 1C 03    ...
                ldy #$00                     ; D113= A0 00        .
                bcc LD11A                    ; D115= 90 03       ..
                jmp osbyte09                    ; D117= 4C 92 EC    L.l

LD11A:
                sec                          ; D11A= 38          8
                jmp osbyte0A                    ; D11B= 4C 94 EC    L.l

LD11E:
                lda $0366                    ; D11E= AD 66 03    -f.
                and $031D                    ; D121= 2D 1D 03    -..
                eor $031C                    ; D124= 4D 1C 03    M..
                sta $0366                    ; D127= 8D 66 03    .f.
                lsr a                        ; D12A= 4A          J
                bcs LD145                    ; D12B= B0 18       0.
LD12D:
                pha                          ; D12D= 48          H
                phx                          ; D12E= DA          Z
                jsr testVDU5State                    ; D12F= 20 D2 E2     Rb
                sec                          ; D132= 38          8
                bne LD143                    ; D133= D0 0E       P.
                clc                          ; D135= 18          .
                bit $036C                    ; D136= 2C 6C 03    ,l.
                bpl LD143                    ; D139= 10 08       ..
                php                          ; D13B= 08          .
                jsr vdu13EntryPoint          ; D13C= 20 F6 C3     vC
                jsr vdu10EntryPoint          ; D13F= 20 5B C2     [B
                plp                          ; D142= 28          (
LD143:
                plx                          ; D143= FA          z
                pla                          ; D144= 68          h
LD145:
                rts                          ; D145= 60          `

LD146:
                ldx #$20                     ; D146= A2 20       "
                jsr LD1E2                    ; D148= 20 E2 D1     bQ
                lda $031F                    ; D14B= AD 1F 03    -..
                ldy #$05                     ; D14E= A0 05        .
                and #$03                     ; D150= 29 03       ).
                beq LD160                    ; D152= F0 0C       p.
                lsr a                        ; D154= 4A          J
                dey                          ; D155= 88          .
                bcc LD160                    ; D156= 90 08       ..
                tax                          ; D158= AA          *
                ldy $035B,x                  ; D159= BC 5B 03    <[.
                asl a                        ; D15C= 0A          .
                asl a                        ; D15D= 0A          .
                asl a                        ; D15E= 0A          .
                tax                          ; D15F= AA          *
LD160:
                stx $0359                    ; D160= 8E 59 03    .Y.
                tya                          ; D163= 98          .
                and #$0F                     ; D164= 29 0F       ).
                sta $035A                    ; D166= 8D 5A 03    .Z.
                lda $031F                    ; D169= AD 1F 03    -..
                lsr a                        ; D16C= 4A          J
                lsr a                        ; D16D= 4A          J
                and #$FE                     ; D16E= 29 FE       )~
                tax                          ; D170= AA          *
                cmp #$34                     ; D171= C9 34       I4
                bcs LD190                    ; D173= B0 1B       0.
                and #$F3                     ; D175= 29 F3       )s
                cmp #$12                     ; D177= C9 12       I.
                php                          ; D179= 08          .
                beq LD184                    ; D17A= F0 08       p.
                cpx #$2E                     ; D17C= E0 2E       `.
                beq LD184                    ; D17E= F0 04       p.
                cpy #$05                     ; D180= C0 05       @.
                beq LD19D                    ; D182= F0 19       p.
LD184:
                lda $031F                    ; D184= AD 1F 03    -..
                jsr LD193                    ; D187= 20 93 D1     .Q
                plp                          ; D18A= 28          (
                bne LD19E                    ; D18B= D0 11       P.
                jmp LC4DF                    ; D18D= 4C DF C4    L_D

LD190:
                jmp LC6A3                    ; D190= 4C A3 C6    L#F

LD193:
                cpx #$10                     ; D193= E0 10       `.
                bcs LD19A                    ; D195= B0 03       0.
                jmp LD8A9                    ; D197= 4C A9 D8    L)X

LD19A:
                jmp (LE07B,x)                ; D19A= 7C 7B E0    |{`

LD19D:
                pla                          ; D19D= 68          h
LD19E:
                jsr copyGraphicsCursorPixelsToOldGraphicsCursorPixels                    ; D19E= 20 1A C9     .I
                ldy #$24                     ; D1A1= A0 24        $
                jmp copyLastFourVDUQueueBytes                    ; D1A3= 4C 16 C9    L.I

LD1A6:
                ldx #$24                     ; D1A6= A2 24       "$
LD1A8:
                inx                          ; D1A8= E8          h
                inx                          ; D1A9= E8          h
                jsr LD1B5                    ; D1AA= 20 B5 D1     5Q
                dex                          ; D1AD= CA          J
                dex                          ; D1AE= CA          J
                asl a                        ; D1AF= 0A          .
                asl a                        ; D1B0= 0A          .
                ldy #$00                     ; D1B1= A0 00        .
                bra LD1B9                    ; D1B3= 80 04       ..

LD1B5:
                ldy #$02                     ; D1B5= A0 02        .
LD1B7:
                lda #$00                     ; D1B7= A9 00       ).
LD1B9:
                sta $DA                      ; D1B9= 85 DA       .Z
                lda $0300,x                  ; D1BB= BD 00 03    =..
                cmp $0300,y                  ; D1BE= D9 00 03    Y..
                lda $0301,x                  ; D1C1= BD 01 03    =..
                sbc $0301,y                  ; D1C4= F9 01 03    y..
                bmi LD1D9                    ; D1C7= 30 10       0.
                lda $0304,y                  ; D1C9= B9 04 03    9..
                cmp $0300,x                  ; D1CC= DD 00 03    ]..
                lda $0305,y                  ; D1CF= B9 05 03    9..
                sbc $0301,x                  ; D1D2= FD 01 03    }..
                bpl LD1DB                    ; D1D5= 10 04       ..
                inc $DA                      ; D1D7= E6 DA       fZ
LD1D9:
                inc $DA                      ; D1D9= E6 DA       fZ
LD1DB:
                lda $DA                      ; D1DB= A5 DA       %Z
                rts                          ; D1DD= 60          `

LD1DE:
                lda #$FF                     ; D1DE= A9 FF       ).
                bra LD1E5                    ; D1E0= 80 03       ..

LD1E2:
                lda $031F                    ; D1E2= AD 1F 03    -..
LD1E5:
                sta $DA                      ; D1E5= 85 DA       .Z
                ldy #$02                     ; D1E7= A0 02        .
                jsr LD20B                    ; D1E9= 20 0B D2     .R
                jsr LD242                    ; D1EC= 20 42 D2     BR
                ldy #$00                     ; D1EF= A0 00        .
                dex                          ; D1F1= CA          J
                dex                          ; D1F2= CA          J
                jsr LD20B                    ; D1F3= 20 0B D2     .R
                ldy $0361                    ; D1F6= AC 61 03    ,a.
                cpy #$03                     ; D1F9= C0 03       @.
                beq LD202                    ; D1FB= F0 05       p.
                bcs LD205                    ; D1FD= B0 06       0.
                jsr LD242                    ; D1FF= 20 42 D2     BR
LD202:
                jsr LD242                    ; D202= 20 42 D2     BR
LD205:
                lda $0356                    ; D205= AD 56 03    -V.
                bne LD242                    ; D208= D0 38       P8
                rts                          ; D20A= 60          `

LD20B:
                clc                          ; D20B= 18          .
                lda $DA                      ; D20C= A5 DA       %Z
                and #$04                     ; D20E= 29 04       ).
                beq LD21B                    ; D210= F0 09       p.
                lda $0302,x                  ; D212= BD 02 03    =..
                pha                          ; D215= 48          H
                lda $0303,x                  ; D216= BD 03 03    =..
                bra LD229                    ; D219= 80 0E       ..

LD21B:
                lda $0302,x                  ; D21B= BD 02 03    =..
                adc $0310,y                  ; D21E= 79 10 03    y..
                pha                          ; D221= 48          H
                lda $0303,x                  ; D222= BD 03 03    =..
                adc $0311,y                  ; D225= 79 11 03    y..
                clc                          ; D228= 18          .
LD229:
                sta $0311,y                  ; D229= 99 11 03    ...
                adc $030D,y                  ; D22C= 79 0D 03    y..
                sta $0303,x                  ; D22F= 9D 03 03    ...
                pla                          ; D232= 68          h
                sta $0310,y                  ; D233= 99 10 03    ...
                clc                          ; D236= 18          .
                adc $030C,y                  ; D237= 79 0C 03    y..
                sta $0302,x                  ; D23A= 9D 02 03    ...
                bcc LD242                    ; D23D= 90 03       ..
                inc $0303,x                  ; D23F= FE 03 03    ~..
LD242:
                lda $0303,x                  ; D242= BD 03 03    =..
                asl a                        ; D245= 0A          .
                ror $0303,x                  ; D246= 7E 03 03    ~..
                ror $0302,x                  ; D249= 7E 02 03    ~..
                rts                          ; D24C= 60          `

LD24D:
                phx                          ; D24D= DA          Z
                phy                          ; D24E= 5A          Z
                phy                          ; D24F= 5A          Z
                phx                          ; D250= DA          Z
                phy                          ; D251= 5A          Z
                jsr LD280                    ; D252= 20 80 D2     .R
                plx                          ; D255= FA          z
                jsr LD280                    ; D256= 20 80 D2     .R
                plx                          ; D259= FA          z
                ply                          ; D25A= 7A          z
                jsr LDAE8                    ; D25B= 20 E8 DA     hZ
                plx                          ; D25E= FA          z
                jsr LD268                    ; D25F= 20 68 D2     hR
                plx                          ; D262= FA          z
                bra LD268                    ; D263= 80 03       ..

LD265:
                jsr terminal.L9B09           ; D265= 20 09 9B     ..
LD268:
                ldy #$00                     ; D268= A0 00        .
                jsr LD270                    ; D26A= 20 70 D2     pR
                inx                          ; D26D= E8          h
                ldy #$02                     ; D26E= A0 02        .
LD270:
                sec                          ; D270= 38          8
                jsr LD276                    ; D271= 20 76 D2     vR
                inx                          ; D274= E8          h
                iny                          ; D275= C8          H
LD276:
                lda $0300,x                  ; D276= BD 00 03    =..
                sbc $0314,y                  ; D279= F9 14 03    y..
                sta $0300,x                  ; D27C= 9D 00 03    ...
LD27F:
                rts                          ; D27F= 60          `

LD280:
                ldy #$00                     ; D280= A0 00        .
                jsr LD288                    ; D282= 20 88 D2     .R
                inx                          ; D285= E8          h
                ldy #$02                     ; D286= A0 02        .
LD288:
                clc                          ; D288= 18          .
                jsr LD28E                    ; D289= 20 8E D2     .R
                inx                          ; D28C= E8          h
                iny                          ; D28D= C8          H
LD28E:
                lda $0300,x                  ; D28E= BD 00 03    =..
                adc $0314,y                  ; D291= 79 14 03    y..
                sta $0300,x                  ; D294= 9D 00 03    ...
                rts                          ; D297= 60          `

LD298:
                sta $E1                      ; D298= 85 E1       .a
                jsr LD425                    ; D29A= 20 25 D4     %T
                beq LD27F                    ; D29D= F0 E0       p`
                ldy #$14                     ; D29F= A0 14        .
                lda #$20                     ; D2A1= A9 20       )
                ldx #$2C                     ; D2A3= A2 2C       ",
                jsr LD265                    ; D2A5= 20 65 D2     eR
                jsr LD3AA                    ; D2A8= 20 AA D3     *S
                lda #$01                     ; D2AB= A9 01       ).
LD2AD:
                sty $E0                      ; D2AD= 84 E0       .`
                tsb $E0                      ; D2AF= 04 E0       .`
                ldx #VDUVariables.workspace2C
                ldy #VDUVariables.workspace28
                jsr copyFourBytesWithinVDUVariables
                bit $0335                    ; D2B8= 2C 35 03    ,5.
                php                          ; D2BB= 08          .
                ldx #$2C                     ; D2BC= A2 2C       ",
                jsr LD726                    ; D2BE= 20 26 D7     &W
                plp                          ; D2C1= 28          (
                bpl LD2C7                    ; D2C2= 10 03       ..
                jsr LD3AA                    ; D2C4= 20 AA D3     *S
LD2C7:
                ldy $032C                    ; D2C7= AC 2C 03    ,,.
                lda $032D                    ; D2CA= AD 2D 03    --.
                bmi LD2D2                    ; D2CD= 30 03       0.
                jsr LC92E                    ; D2CF= 20 2E C9     .I
LD2D2:
                pha                          ; D2D2= 48          H
                clc                          ; D2D3= 18          .
                tya                          ; D2D4= 98          .
                adc L8830                    ; D2D5= 6D 30 88    m0.
                tay                          ; D2D8= A8          (
                pla                          ; D2D9= 68          h
                adc L8831                    ; D2DA= 6D 31 88    m1.
                bpl LD2AD                    ; D2DD= 10 CE       .N
                inc a                        ; D2DF= 1A          .
                bne LD305                    ; D2E0= D0 23       P#
                iny                          ; D2E2= C8          H
                bne LD305                    ; D2E3= D0 20       P
                lda $E0                      ; D2E5= A5 E0       %`
                beq LD305                    ; D2E7= F0 1C       p.
                lda $032C                    ; D2E9= AD 2C 03    -,.
                cmp $0328                    ; D2EC= CD 28 03    M(.
                beq LD305                    ; D2EF= F0 14       p.
                ldx #$2C                     ; D2F1= A2 2C       ",
                ldy #$28                     ; D2F3= A0 28        (
                lda $0336                    ; D2F5= AD 36 03    -6.
                asl a                        ; D2F8= 0A          .
                eor $0336                    ; D2F9= 4D 36 03    M6.
                bpl LD302                    ; D2FC= 10 04       ..
                inx                          ; D2FE= E8          h
                inx                          ; D2FF= E8          h
                iny                          ; D300= C8          H
                iny                          ; D301= C8          H
LD302:
                jsr copyTwoBytesWithinVDUVariables                    ; D302= 20 0C C9     .I
LD305:
                jsr LD425                    ; D305= 20 25 D4     %T
                lda $0329                    ; D308= AD 29 03    -).
                tax                          ; D30B= AA          *
                eor $031C                    ; D30C= 4D 1C 03    M..
                bmi LD329                    ; D30F= 30 18       0.
                ldy #$02                     ; D311= A0 02        .
                jsr LD46F                    ; D313= 20 6F D4     oT
                bne LD324                    ; D316= D0 0C       P.
                ldx $032B                    ; D318= AE 2B 03    .+.
                ldy #$00                     ; D31B= A0 00        .
                jsr LD46F                    ; D31D= 20 6F D4     oT
                beq LD333                    ; D320= F0 11       p.
                eor #$80                     ; D322= 49 80       I.
LD324:
                stx $DA                      ; D324= 86 DA       .Z
                eor $DA                      ; D326= 45 DA       EZ
                tax                          ; D328= AA          *
LD329:
                txa                          ; D329= 8A          .
                and #$80                     ; D32A= 29 80       ).
                beq LD330                    ; D32C= F0 02       p.
                lda #$C0                     ; D32E= A9 C0       )@
LD330:
                tsb $E1                      ; D330= 04 E1       .a
                clc                          ; D332= 18          .
LD333:
                rts                          ; D333= 60          `

LD334:
                lda $E1                      ; D334= A5 E1       %a
                sta L8848                    ; D336= 8D 48 88    .H.
                bit #$03                     ; D339= 89 03       ..
                beq LD333                    ; D33B= F0 F6       pv
                lda #$10                     ; D33D= A9 10       ).
                sta $DC                      ; D33F= 85 DC       .\
                asl a                        ; D341= 0A          .
                sta $DD                      ; D342= 85 DD       .]
                ldx #$1B                     ; D344= A2 1B       ".
                jsr LD34F                    ; D346= 20 4F D3     OS
                asl $DC                      ; D349= 06 DC       .\
                lsr $DD                      ; D34B= 46 DD       F]
                ldx #$28                     ; D34D= A2 28       "(
LD34F:
                lda #$80                     ; D34F= A9 80       ).
                sta $DA                      ; D351= 85 DA       .Z
                lda $0302,x                  ; D353= BD 02 03    =..
                cmp L8832                    ; D356= CD 32 88    M2.
                bne LD333                    ; D359= D0 D8       PX
                lda $0303,x                  ; D35B= BD 03 03    =..
                cmp L8833                    ; D35E= CD 33 88    M3.
                bne LD333                    ; D361= D0 D0       PP
                ldy $0300,x                  ; D363= BC 00 03    <..
                lda $0301,x                  ; D366= BD 01 03    =..
                bpl LD370                    ; D369= 10 05       ..
                lsr $DA                      ; D36B= 46 DA       FZ
                jsr LC92E                    ; D36D= 20 2E C9     .I
LD370:
                cpy L8830                    ; D370= CC 30 88    L0.
                bne LD333                    ; D373= D0 BE       P>
                cmp L8831                    ; D375= CD 31 88    M1.
                bne LD333                    ; D378= D0 B9       P9
                lda $E1                      ; D37A= A5 E1       %a
                bit #$02                     ; D37C= 89 02       ..
                beq LD399                    ; D37E= F0 19       p.
                ldy #$30                     ; D380= A0 30        0
                bit #$01                     ; D382= 89 01       ..
                beq LD388                    ; D384= F0 02       p.
                ldy $DC                      ; D386= A4 DC       $\
LD388:
                tya                          ; D388= 98          .
                lsr a                        ; D389= 4A          J
                lsr a                        ; D38A= 4A          J
                bit $E1                      ; D38B= 24 E1       $a
                bne LD395                    ; D38D= D0 06       P.
                ora $DC                      ; D38F= 05 DC       .\
                tsb $E1                      ; D391= 04 E1       .a
                bra LD399                    ; D393= 80 04       ..

LD395:
                ora $DD                      ; D395= 05 DD       .]
                trb $E1                      ; D397= 14 E1       .a
LD399:
                lda $DA                      ; D399= A5 DA       %Z
                bit $E1                      ; D39B= 24 E1       $a
                beq LD330                    ; D39D= F0 91       p.
                trb $E1                      ; D39F= 14 E1       .a
                lda $E1                      ; D3A1= A5 E1       %a
                sta L8848                    ; D3A3= 8D 48 88    .H.
                sta L8849                    ; D3A6= 8D 49 88    .I.
                rts                          ; D3A9= 60          `

LD3AA:
                lda $032E                    ; D3AA= AD 2E 03    -..
                sta L8832                    ; D3AD= 8D 32 88    .2.
                lda $032F                    ; D3B0= AD 2F 03    -/.
                sta L8833                    ; D3B3= 8D 33 88    .3.
                jsr LD3FC                    ; D3B6= 20 FC D3     |S
                jsr LD513                    ; D3B9= 20 13 D5     .U
                sty L8830                    ; D3BC= 8C 30 88    .0.
                lda L8846                    ; D3BF= AD 46 88    -F.
                lsr a                        ; D3C2= 4A          J
                lda L883D                    ; D3C3= AD 3D 88    -=.
                bcc LD3CE                    ; D3C6= 90 06       ..
                cmp #$80                     ; D3C8= C9 80       I.
                ror a                        ; D3CA= 6A          j
                ror L8830                    ; D3CB= 6E 30 88    n0.
LD3CE:
                sta L8831                    ; D3CE= 8D 31 88    .1.
                rts                          ; D3D1= 60          `

LD3D2:
                stz L8847                    ; D3D2= 9C 47 88    .G.
                stz L8830                    ; D3D5= 9C 30 88    .0.
                stz L8831                    ; D3D8= 9C 31 88    .1.
                stz L8834                    ; D3DB= 9C 34 88    .4.
                stz L8835                    ; D3DE= 9C 35 88    .5.
                lda L8832                    ; D3E1= AD 32 88    -2.
                asl a                        ; D3E4= 0A          .
                sta L8836                    ; D3E5= 8D 36 88    .6.
                lda L8833                    ; D3E8= AD 33 88    -3.
                rol a                        ; D3EB= 2A          *
                sta L8837                    ; D3EC= 8D 37 88    .7.
                lda L8846                    ; D3EF= AD 46 88    -F.
                bit #$02                     ; D3F2= 89 02       ..
                beq LD3FC                    ; D3F4= F0 06       p.
                asl L8836                    ; D3F6= 0E 36 88    .6.
                rol L8837                    ; D3F9= 2E 37 88    .7.
LD3FC:
                lda L8846                    ; D3FC= AD 46 88    -F.
                lsr a                        ; D3FF= 4A          J
                lsr a                        ; D400= 4A          J
                ldy L8832                    ; D401= AC 32 88    ,2.
                lda L8833                    ; D404= AD 33 88    -3.
                jsr LD4C5                    ; D407= 20 C5 D4     ET
                sec                          ; D40A= 38          8
                ldx #$FC                     ; D40B= A2 FC       "|
LD40D:
                lda L873C,x                  ; D40D= BD 3C 87    =<.
                sbc L8744,x                  ; D410= FD 44 87    }D.
                sta L8744,x                  ; D413= 9D 44 87    .D.
                inx                          ; D416= E8          h
                bne LD40D                    ; D417= D0 F4       Pt
                rts                          ; D419= 60          `

LD41A:
                jsr copyGraphicsCursorPixelsToOldGraphicsCursorPixels
                stz $E1                      ; D41D= 64 E1       da
                ldx #$20                     ; D41F= A2 20       "
                jsr LD427                    ; D421= 20 27 D4     'T
                rts                          ; D424= 60          `

LD425:
                ldx #VDUVariables.graphicsCursorPixelsX
LD427:
                ldy #VDUVariables.queueEnd-9
                jsr copyFourBytesWithinVDUVariables
                ldx #$1B                     ; D42C= A2 1B       ".
                jsr LD268                    ; D42E= 20 68 D2     hR
                jsr LD486                    ; D431= 20 86 D4     .T
                jsr LD513                    ; D434= 20 13 D5     .U
                ldy #$0C                     ; D437= A0 0C        .
                jsr LD4AB                    ; D439= 20 AB D4     +T
                jsr LD513                    ; D43C= 20 13 D5     .U
                cmp #$20                     ; D43F= C9 20       I
                bcc LD448                    ; D441= 90 05       ..
                pla                          ; D443= 68          h
                pla                          ; D444= 68          h
                pla                          ; D445= 68          h
                pla                          ; D446= 68          h
                rts                          ; D447= 60          `

LD448:
                sty L8844                    ; D448= 8C 44 88    .D.
                sta L8845                    ; D44B= 8D 45 88    .E.
                lda L8846                    ; D44E= AD 46 88    -F.
                bit #$02                     ; D451= 89 02       ..
                beq LD45B                    ; D453= F0 06       p.
                lsr L8845                    ; D455= 4E 45 88    NE.
                ror L8844                    ; D458= 6E 44 88    nD.
LD45B:
                ldy L8844                    ; D45B= AC 44 88    ,D.
                lda L8845                    ; D45E= AD 45 88    -E.
                jsr LC92E                    ; D461= 20 2E C9     .I
                sty L8832                    ; D464= 8C 32 88    .2.
                sta L8833                    ; D467= 8D 33 88    .3.
                ora L8832                    ; D46A= 0D 32 88    .2.
                sec                          ; D46D= 38          8
                rts                          ; D46E= 60          `

LD46F:
                stz $DA                      ; D46F= 64 DA       dZ
                lda $031B,y                  ; D471= B9 1B 03    9..
                cmp $0328,y                  ; D474= D9 28 03    Y(.
                beq LD47B                    ; D477= F0 02       p.
                inc $DA                      ; D479= E6 DA       fZ
LD47B:
                lda $031C,y                  ; D47B= B9 1C 03    9..
                sbc $0329,y                  ; D47E= F9 29 03    y).
                bne LD485                    ; D481= D0 02       P.
                lda $DA                      ; D483= A5 DA       %Z
LD485:
                rts                          ; D485= 60          `

LD486:
                ldx $0355                    ; D486= AE 55 03    .U.
                lda LD4BF,x                  ; D489= BD BF D4    =?T
                sta L8846                    ; D48C= 8D 46 88    .F.
                lsr a                        ; D48F= 4A          J
                pha                          ; D490= 48          H
                ldx #$04                     ; D491= A2 04       ".
LD493:
                stz L8837,x                  ; D493= 9E 37 88    .7.
                dex                          ; D496= CA          J
                bne LD493                    ; D497= D0 FA       Pz
                jsr LD4A0                    ; D499= 20 A0 D4      T
                pla                          ; D49C= 68          h
                lsr a                        ; D49D= 4A          J
                ldx #$02                     ; D49E= A2 02       ".
LD4A0:
                ldy $031B,x                  ; D4A0= BC 1B 03    <..
                lda $031C,x                  ; D4A3= BD 1C 03    =..
                jsr LD4C5                    ; D4A6= 20 C5 D4     ET
                ldy #$10                     ; D4A9= A0 10        .
LD4AB:
                clc                          ; D4AB= 18          .
                ldx #$FC                     ; D4AC= A2 FC       "|
LD4AE:
                lda L873C,x                  ; D4AE= BD 3C 87    =<.
                adc L8830,y                  ; D4B1= 79 30 88    y0.
                sta L873C,x                  ; D4B4= 9D 3C 87    .<.
                sta L8744,x                  ; D4B7= 9D 44 87    .D.
                iny                          ; D4BA= C8          H
                inx                          ; D4BB= E8          h
                bne LD4AE                    ; D4BC= D0 F0       Pp
                rts                          ; D4BE= 60          `

LD4BF:
                .byte $02                    ; D4BF= 02          .
                brk                          ; D4C0= 00          .
                ora ($FF,x)                  ; D4C1= 01 FF       ..
                brk                          ; D4C3= 00          .
;ORA (&8C,x)      :\ D4C4= 01       ..
                .byte $01
LD4C5:
                sty L883C                    ; D4C5= 8C 3C 88
                bcc LD4CE                    ; D4C8= 90 04
                asl L883C                    ; D4CA= 0E 3C 88
                rol a                        ; D4CD= 2A
LD4CE:
                sta L883D                    ; D4CE= 8D 3D 88
                ldy L883C                    ; D4D1= AC 3C 88    ,<.
                tax                          ; D4D4= AA          *
                bpl LD4DA                    ; D4D5= 10 03       ..
                jsr LC92E                    ; D4D7= 20 2E C9     .I
LD4DA:
                sty L883C                    ; D4DA= 8C 3C 88    .<.
                sta L883D                    ; D4DD= 8D 3D 88    .=.
                sty L8840                    ; D4E0= 8C 40 88    .@.
                stz L8842                    ; D4E3= 9C 42 88    .B.
                stz L8843                    ; D4E6= 9C 43 88    .C.
                ldy #$0F                     ; D4E9= A0 0F        .
                lsr a                        ; D4EB= 4A          J
                sta L8841                    ; D4EC= 8D 41 88    .A.
                ror L8840                    ; D4EF= 6E 40 88    n@.
LD4F2:
                bcc LD507                    ; D4F2= 90 13       ..
                clc                          ; D4F4= 18          .
                lda L883C                    ; D4F5= AD 3C 88    -<.
                adc L8842                    ; D4F8= 6D 42 88    mB.
                sta L8842                    ; D4FB= 8D 42 88    .B.
                lda L883D                    ; D4FE= AD 3D 88    -=.
                adc L8843                    ; D501= 6D 43 88    mC.
                sta L8843                    ; D504= 8D 43 88    .C.
LD507:
                ldx #$03                     ; D507= A2 03       ".
LD509:
                ror L8840,x                  ; D509= 7E 40 88    ~@.
                dex                          ; D50C= CA          J
                bpl LD509                    ; D50D= 10 FA       .z
                dey                          ; D50F= 88          .
                bpl LD4F2                    ; D510= 10 E0       .`
                rts                          ; D512= 60          `

LD513:
                ldx #$02                     ; D513= A2 02       ".
LD515:
                stz L883C,x                  ; D515= 9E 3C 88    .<.
                stz $DB,x                    ; D518= 74 DB       t[
                dex                          ; D51A= CA          J
                bpl LD515                    ; D51B= 10 F8       .x
                ldy #$03                     ; D51D= A0 03        .
LD51F:
                lda L8840,y                  ; D51F= B9 40 88    9@.
                sta $DA                      ; D522= 85 DA       .Z
                phy                          ; D524= 5A          Z
                ldy #$03                     ; D525= A0 03        .
LD527:
                phy                          ; D527= 5A          Z
                sec                          ; D528= 38          8
                rol L883C                    ; D529= 2E 3C 88    .<.
                rol L883D                    ; D52C= 2E 3D 88    .=.
                rol L883E                    ; D52F= 2E 3E 88    .>.
                ldx #$01                     ; D532= A2 01       ".
                lda $DB                      ; D534= A5 DB       %[
LD536:
                asl $DA                      ; D536= 06 DA       .Z
                rol a                        ; D538= 2A          *
                rol $DC                      ; D539= 26 DC       &\
                rol $DD                      ; D53B= 26 DD       &]
                dex                          ; D53D= CA          J
                bpl LD536                    ; D53E= 10 F6       .v
                sta $DB                      ; D540= 85 DB       .[
                sec                          ; D542= 38          8
                sbc L883C                    ; D543= ED 3C 88    m<.
                tax                          ; D546= AA          *
                lda $DC                      ; D547= A5 DC       %\
                sbc L883D                    ; D549= ED 3D 88    m=.
                tay                          ; D54C= A8          (
                lda $DD                      ; D54D= A5 DD       %]
                sbc L883E                    ; D54F= ED 3E 88    m>.
                bcc LD55F                    ; D552= 90 0B       ..
                sta $DD                      ; D554= 85 DD       .]
                sty $DC                      ; D556= 84 DC       .\
                stx $DB                      ; D558= 86 DB       .[
                inc L883C                    ; D55A= EE 3C 88    n<.
                bra LD562                    ; D55D= 80 03       ..

LD55F:
                dec L883C                    ; D55F= CE 3C 88    N<.
LD562:
                ply                          ; D562= 7A          z
                dey                          ; D563= 88          .
                bpl LD527                    ; D564= 10 C1       .A
                ply                          ; D566= 7A          z
                dey                          ; D567= 88          .
                bpl LD51F                    ; D568= 10 B5       .5
                lsr L883E                    ; D56A= 4E 3E 88    N>.
                ror L883D                    ; D56D= 6E 3D 88    n=.
                ror L883C                    ; D570= 6E 3C 88    n<.
                stz L883E                    ; D573= 9C 3E 88    .>.
                stz L883F                    ; D576= 9C 3F 88    .?.
                ldy L883C                    ; D579= AC 3C 88    ,<.
                lda L883D                    ; D57C= AD 3D 88    -=.
                rts                          ; D57F= 60          `

LD580:
                jsr LD58D                    ; D580= 20 8D D5     .U
                iny                          ; D583= C8          H
                iny                          ; D584= C8          H
                inx                          ; D585= E8          h
                inx                          ; D586= E8          h
                inc a                        ; D587= 1A          .
                inc a                        ; D588= 1A          .
                inc $DA                      ; D589= E6 DA       fZ
                inc $DA                      ; D58B= E6 DA       fZ
LD58D:
                phx                          ; D58D= DA          Z
                phy                          ; D58E= 5A          Z
                pha                          ; D58F= 48          H
                clc                          ; D590= 18          .
                lda $0300,x                  ; D591= BD 00 03    =..
                adc $0300,y                  ; D594= 79 00 03    y..
                sta $DE                      ; D597= 85 DE       .^
                lda $0301,x                  ; D599= BD 01 03    =..
                adc $0301,y                  ; D59C= 79 01 03    y..
                plx                          ; D59F= FA          z
                pha                          ; D5A0= 48          H
                ldy $DA                      ; D5A1= A4 DA       $Z
                sec                          ; D5A3= 38          8
                lda $DE                      ; D5A4= A5 DE       %^
                sbc $0300,x                  ; D5A6= FD 00 03    }..
                sta $0300,y                  ; D5A9= 99 00 03    ...
                pla                          ; D5AC= 68          h
                sbc $0301,x                  ; D5AD= FD 01 03    }..
                sta $0301,y                  ; D5B0= 99 01 03    ...
                txa                          ; D5B3= 8A          .
                ply                          ; D5B4= 7A          z
                plx                          ; D5B5= FA          z
                rts                          ; D5B6= 60          `

LD5B7:
                sec                          ; D5B7= 38          8
                lda $0302,y                  ; D5B8= B9 02 03    9..
                sbc $0302,x                  ; D5BB= FD 02 03    }..
                sta $DE                      ; D5BE= 85 DE       .^
                lda $0303,y                  ; D5C0= B9 03 03    9..
                sbc $0303,x                  ; D5C3= FD 03 03    }..
                bmi LD5D1                    ; D5C6= 30 09       0.
                ora $DE                      ; D5C8= 05 DE       .^
                bne LD5D5                    ; D5CA= D0 09       P.
LD5CC:
                jsr LD5D6                    ; D5CC= 20 D6 D5     VU
                bpl LD5D5                    ; D5CF= 10 04       ..
LD5D1:
                txa                          ; D5D1= 8A          .
                phy                          ; D5D2= 5A          Z
                plx                          ; D5D3= FA          z
                tay                          ; D5D4= A8          (
LD5D5:
                rts                          ; D5D5= 60          `

LD5D6:
                lda $0300,y                  ; D5D6= B9 00 03    9..
                cmp $0300,x                  ; D5D9= DD 00 03    ]..
                lda $0301,y                  ; D5DC= B9 01 03    9..
                sbc $0301,x                  ; D5DF= FD 01 03    }..
                rts                          ; D5E2= 60          `

LD5E3:
                inc L8847                    ; D5E3= EE 47 88    nG.
LD5E6:
                lda L8847                    ; D5E6= AD 47 88    -G.
                bne LD5FA                    ; D5E9= D0 0F       P.
                lda L8832                    ; D5EB= AD 32 88    -2.
                ora L8833                    ; D5EE= 0D 33 88    .3.
                beq LD5E3                    ; D5F1= F0 F0       pp
                ldx #$00                     ; D5F3= A2 00       ".
                jsr LD644                    ; D5F5= 20 44 D6     DV
                bpl LD643                    ; D5F8= 10 49       .I
LD5FA:
                ldx #$02                     ; D5FA= A2 02       ".
                jsr LD644                    ; D5FC= 20 44 D6     DV
                bpl LD643                    ; D5FF= 10 42       .B
                ldx #$00                     ; D601= A2 00       ".
                jsr LD60A                    ; D603= 20 0A D6     .V
                bpl LD643                    ; D606= 10 3B       .;
                ldx #$02                     ; D608= A2 02       ".
LD60A:
                lda L8830,x                  ; D60A= BD 30 88    =0.
                bne LD612                    ; D60D= D0 03       P.
                dec L8831,x                  ; D60F= DE 31 88    ^1.
LD612:
                dec L8830,x                  ; D612= DE 30 88    ^0.
                txa                          ; D615= 8A          .
                lsr a                        ; D616= 4A          J
                inc a                        ; D617= 1A          .
                bit L8846                    ; D618= 2C 46 88    ,F.
                beq LD620                    ; D61B= F0 03       p.
                jsr LD620                    ; D61D= 20 20 D6      V
LD620:
                jsr LD636                    ; D620= 20 36 D6     6V
                clc                          ; D623= 18          .
                lda L8840                    ; D624= AD 40 88    -@.
                adc L8834,x                  ; D627= 7D 34 88    }4.
                sta L8840                    ; D62A= 8D 40 88    .@.
                lda L8841                    ; D62D= AD 41 88    -A.
                adc L8835,x                  ; D630= 7D 35 88    }5.
                sta L8841                    ; D633= 8D 41 88    .A.
LD636:
                php                          ; D636= 08          .
                lda L8834,x                  ; D637= BD 34 88    =4.
                bne LD63F                    ; D63A= D0 03       P.
                dec L8835,x                  ; D63C= DE 35 88    ^5.
LD63F:
                dec L8834,x                  ; D63F= DE 34 88    ^4.
                plp                          ; D642= 28          (
LD643:
                rts                          ; D643= 60          `

LD644:
                inc L8830,x                  ; D644= FE 30 88    ~0.
                bne LD64C                    ; D647= D0 03       P.
                inc L8831,x                  ; D649= FE 31 88    ~1.
LD64C:
                txa                          ; D64C= 8A          .
                lsr a                        ; D64D= 4A          J
                inc a                        ; D64E= 1A          .
                bit L8846                    ; D64F= 2C 46 88    ,F.
                beq LD657                    ; D652= F0 03       p.
                jsr LD657                    ; D654= 20 57 D6     WV
LD657:
                jsr LD66D                    ; D657= 20 6D D6     mV
                sec                          ; D65A= 38          8
                lda L8840                    ; D65B= AD 40 88    -@.
                sbc L8834,x                  ; D65E= FD 34 88    }4.
                sta L8840                    ; D661= 8D 40 88    .@.
                lda L8841                    ; D664= AD 41 88    -A.
                sbc L8835,x                  ; D667= FD 35 88    }5.
                sta L8841                    ; D66A= 8D 41 88    .A.
LD66D:
                php                          ; D66D= 08          .
                inc L8834,x                  ; D66E= FE 34 88    ~4.
                bne LD676                    ; D671= D0 03       P.
                inc L8835,x                  ; D673= FE 35 88    ~5.
LD676:
                plp                          ; D676= 28          (
                rts                          ; D677= 60          `

                pha                          ; D678= 48          H
                sec                          ; D679= 38          8
                lda $0300,y                  ; D67A= B9 00 03    9..
                sbc $0300,x                  ; D67D= FD 00 03    }..
                pha                          ; D680= 48          H
                lda $0301,y                  ; D681= B9 01 03    9..
                sbc $0301,x                  ; D684= FD 01 03    }..
                ply                          ; D687= 7A          z
                cmp #$80                     ; D688= C9 80       I.
                bcc LD68F                    ; D68A= 90 03       ..
                jsr LC92E                    ; D68C= 20 2E C9     .I
LD68F:
                plx                          ; D68F= FA          z
                sta $0301,x                  ; D690= 9D 01 03    ...
                tya                          ; D693= 98          .
                sta $0300,x                  ; D694= 9D 00 03    ...
                rts                          ; D697= 60          `

LD698:
                ldx #$37                     ; D698= A2 37       "7
                jsr LD723                    ; D69A= 20 23 D7     #W
LD69D:
                bit $030A,x                  ; D69D= 3C 0A 03    <..
                bvs LD6B2                    ; D6A0= 70 10       p.
                rts                          ; D6A2= 60          `

LD6A3:
                ldx #$2C                     ; D6A3= A2 2C       ",
                jsr LD723                    ; D6A5= 20 23 D7     #W
LD6A8:
                bit $030A,x                  ; D6A8= 3C 0A 03    <..
                bvc LD6B2                    ; D6AB= 50 05       P.
                rts                          ; D6AD= 60          `

LD6AE:
                plx                          ; D6AE= FA          z
                jsr LD726                    ; D6AF= 20 26 D7     &W
LD6B2:
                lda $0309,x                  ; D6B2= BD 09 03    =..
                bmi LD6C7                    ; D6B5= 30 10       0.
                ldy #$03                     ; D6B7= A0 03        .
                phx                          ; D6B9= DA          Z
LD6BA:
                lda $0300,x                  ; D6BA= BD 00 03    =..
                cmp L881E,x                  ; D6BD= DD 1E 88    ]..
                bne LD6AE                    ; D6C0= D0 EC       Pl
                inx                          ; D6C2= E8          h
                dey                          ; D6C3= 88          .
                bpl LD6BA                    ; D6C4= 10 F4       .t
                plx                          ; D6C6= FA          z
LD6C7:
                rts                          ; D6C7= 60          `

LD6C8:
                jsr LD6FD                    ; D6C8= 20 FD D6     }V
                lda $030A,x                  ; D6CB= BD 0A 03    =..
                asl a                        ; D6CE= 0A          .
                asl a                        ; D6CF= 0A          .
                lda $030A,x                  ; D6D0= BD 0A 03    =..
                ror a                        ; D6D3= 6A          j
                sta $DA                      ; D6D4= 85 DA       .Z
                clc                          ; D6D6= 18          .
                bpl LD6E8                    ; D6D7= 10 0F       ..
                lda $0302,x                  ; D6D9= BD 02 03    =..
                sbc $0304                    ; D6DC= ED 04 03    m..
                tay                          ; D6DF= A8          (
                lda $0303,x                  ; D6E0= BD 03 03    =..
                sbc $0305                    ; D6E3= ED 05 03    m..
                bra LD6F5                    ; D6E6= 80 0D       ..

LD6E8:
                lda $0300                    ; D6E8= AD 00 03    -..
                sbc $0302,x                  ; D6EB= FD 02 03    }..
                tay                          ; D6EE= A8          (
                lda $0301                    ; D6EF= AD 01 03    -..
                sbc $0303,x                  ; D6F2= FD 03 03    }..
LD6F5:
                jsr LD7A4                    ; D6F5= 20 A4 D7     $W
                jsr LD6FD                    ; D6F8= 20 FD D6     }V
                bra LD755                    ; D6FB= 80 58       .X

LD6FD:
                txa                          ; D6FD= 8A          .
                inc a                        ; D6FE= 1A          .
                pha                          ; D6FF= 48          H
                inc a                        ; D700= 1A          .
                tay                          ; D701= A8          (
                jsr exchangeTwoVDUBytes     ; D702= 20 B2 E2     2b
                inx                          ; D705= E8          h
                inx                          ; D706= E8          h
                iny                          ; D707= C8          H
                iny                          ; D708= C8          H
                jsr exchangeTwoVDUBytes     ; D709= 20 B2 E2     2b
                plx                          ; D70C= FA          z
                jsr LD711                    ; D70D= 20 11 D7     .W
                dex                          ; D710= CA          J
LD711:
                lda $0308,x                  ; D711= BD 08 03    =..
                eor #$FF                     ; D714= 49 FF       I.
                sta $0308,x                  ; D716= 9D 08 03    ...
                rts                          ; D719= 60          `

LD71A:
                jsr LD726                    ; D71A= 20 26 D7     &W
LD71D:
                lda $0309,x                  ; D71D= BD 09 03    =..
                bpl LD71A                    ; D720= 10 F8       .x
                rts                          ; D722= 60          `

LD723:
                jsr LD71D                    ; D723= 20 1D D7     .W
LD726:
                lda $0309,x                  ; D726= BD 09 03    =..
                bpl LD755                    ; D729= 10 2A       .*
LD72B:
                clc                          ; D72B= 18          .
                lda $0308,x                  ; D72C= BD 08 03    =..
                adc $0304,x                  ; D72F= 7D 04 03    }..
                sta $0308,x                  ; D732= 9D 08 03    ...
                lda $0309,x                  ; D735= BD 09 03    =..
                adc $0305,x                  ; D738= 7D 05 03    }..
                sta $0309,x                  ; D73B= 9D 09 03    ...
                bmi LD743                    ; D73E= 30 03       0.
                jsr LD755                    ; D740= 20 55 D7     UW
LD743:
                phx                          ; D743= DA          Z
                inx                          ; D744= E8          h
                inx                          ; D745= E8          h
                bit $0308,x                  ; D746= 3C 08 03    <..
                bmi LD76E                    ; D749= 30 23       0#
LD74B:
                inc $0300,x                  ; D74B= FE 00 03    ~..
                bne LD753                    ; D74E= D0 03       P.
                inc $0301,x                  ; D750= FE 01 03    ~..
LD753:
                plx                          ; D753= FA          z
                rts                          ; D754= 60          `

LD755:
                sec                          ; D755= 38          8
                lda $0308,x                  ; D756= BD 08 03    =..
                sbc $0306,x                  ; D759= FD 06 03    }..
                sta $0308,x                  ; D75C= 9D 08 03    ...
                lda $0309,x                  ; D75F= BD 09 03    =..
                sbc $0307,x                  ; D762= FD 07 03    }..
                sta $0309,x                  ; D765= 9D 09 03    ...
                phx                          ; D768= DA          Z
                bit $030A,x                  ; D769= 3C 0A 03    <..
                bvc LD74B                    ; D76C= 50 DD       P]
LD76E:
                lda $0300,x                  ; D76E= BD 00 03    =..
                bne LD776                    ; D771= D0 03       P.
                dec $0301,x                  ; D773= DE 01 03    ^..
LD776:
                dec $0300,x                  ; D776= DE 00 03    ^..
                plx                          ; D779= FA          z
                rts                          ; D77A= 60          `

LD77B:
                clc                          ; D77B= 18          .
                lda $030A,x                  ; D77C= BD 0A 03    =..
                sta $DA                      ; D77F= 85 DA       .Z
                bpl LD792                    ; D781= 10 0F       ..
                lda $0302,x                  ; D783= BD 02 03    =..
                sbc $0306                    ; D786= ED 06 03    m..
                tay                          ; D789= A8          (
                lda $0303,x                  ; D78A= BD 03 03    =..
                sbc $0307                    ; D78D= ED 07 03    m..
                bra LD79F                    ; D790= 80 0D       ..

LD792:
                lda $0302                    ; D792= AD 02 03    -..
                sbc $0302,x                  ; D795= FD 02 03    }..
                tay                          ; D798= A8          (
                lda $0303                    ; D799= AD 03 03    -..
                sbc $0303,x                  ; D79C= FD 03 03    }..
LD79F:
                jsr LD7A4                    ; D79F= 20 A4 D7     $W
                bra LD72B                    ; D7A2= 80 87       ..

LD7A4:
                sty $DE                      ; D7A4= 84 DE       .^
                sta $DF                      ; D7A6= 85 DF       ._
                lda $0302,x                  ; D7A8= BD 02 03    =..
                ldy $0303,x                  ; D7AB= BC 03 03    <..
                asl $DA                      ; D7AE= 06 DA       .Z
                bcs LD7BC                    ; D7B0= B0 0A       0.
                adc $DE                      ; D7B2= 65 DE       e^
                sta $0302,x                  ; D7B4= 9D 02 03    ...
                tya                          ; D7B7= 98          .
                adc $DF                      ; D7B8= 65 DF       e_
                bra LD7C4                    ; D7BA= 80 08       ..

LD7BC:
                sbc $DE                      ; D7BC= E5 DE       e^
                sta $0302,x                  ; D7BE= 9D 02 03    ...
                tya                          ; D7C1= 98          .
                sbc $DF                      ; D7C2= E5 DF       e_
LD7C4:
                sta $0303,x                  ; D7C4= 9D 03 03    ...
                lda #$00                     ; D7C7= A9 00       ).
                bit $0309,x                  ; D7C9= 3C 09 03    <..
                bpl LD7CF                    ; D7CC= 10 01       ..
                dec a                        ; D7CE= 3A          :
LD7CF:
                sta $DC                      ; D7CF= 85 DC       .\
                lsr a                        ; D7D1= 4A          J
                sta $DD                      ; D7D2= 85 DD       .]
                ldy #$10                     ; D7D4= A0 10        .
LD7D6:
                lda $DD                      ; D7D6= A5 DD       %]
                asl a                        ; D7D8= 0A          .
                rol $0308,x                  ; D7D9= 3E 08 03    >..
                rol $0309,x                  ; D7DC= 3E 09 03    >..
                rol $DC                      ; D7DF= 26 DC       &\
                rol $DD                      ; D7E1= 26 DD       &]
                asl $DE                      ; D7E3= 06 DE       .^
                rol $DF                      ; D7E5= 26 DF       &_
                bcc LD802                    ; D7E7= 90 19       ..
                clc                          ; D7E9= 18          .
                lda $DC                      ; D7EA= A5 DC       %\
                adc $0304,x                  ; D7EC= 7D 04 03    }..
                sta $DC                      ; D7EF= 85 DC       .\
                lda $DD                      ; D7F1= A5 DD       %]
                adc $0305,x                  ; D7F3= 7D 05 03    }..
                sta $DD                      ; D7F6= 85 DD       .]
                bcc LD802                    ; D7F8= 90 08       ..
                inc $0308,x                  ; D7FA= FE 08 03    ~..
                bne LD802                    ; D7FD= D0 03       P.
                inc $0309,x                  ; D7FF= FE 09 03    ~..
LD802:
                dey                          ; D802= 88          .
                bne LD7D6                    ; D803= D0 D1       PQ
                bit $0309,x                  ; D805= 3C 09 03    <..
                bvc LD815                    ; D808= 50 0B       P.
                lda $DC                      ; D80A= A5 DC       %\
                sta $0308,x                  ; D80C= 9D 08 03    ...
                lda $DD                      ; D80F= A5 DD       %]
                sta $0309,x                  ; D811= 9D 09 03    ...
                rts                          ; D814= 60          `

LD815:
                ldy #$10                     ; D815= A0 10        .
LD817:
                rol $DC                      ; D817= 26 DC       &\
                rol $DD                      ; D819= 26 DD       &]
                rol $0308,x                  ; D81B= 3E 08 03    >..
                rol $0309,x                  ; D81E= 3E 09 03    >..
                sec                          ; D821= 38          8
                lda $0308,x                  ; D822= BD 08 03    =..
                sbc $0306,x                  ; D825= FD 06 03    }..
                sta $DE                      ; D828= 85 DE       .^
                lda $0309,x                  ; D82A= BD 09 03    =..
                sbc $0307,x                  ; D82D= FD 07 03    }..
                bcc LD83A                    ; D830= 90 08       ..
                sta $0309,x                  ; D832= 9D 09 03    ...
                lda $DE                      ; D835= A5 DE       %^
                sta $0308,x                  ; D837= 9D 08 03    ...
LD83A:
                dey                          ; D83A= 88          .
                bne LD817                    ; D83B= D0 DA       PZ
                rol $DC                      ; D83D= 26 DC       &\
                rol $DD                      ; D83F= 26 DD       &]
                sec                          ; D841= 38          8
                lda $0308,x                  ; D842= BD 08 03    =..
                sbc $0306,x                  ; D845= FD 06 03    }..
                sta $0308,x                  ; D848= 9D 08 03    ...
                lda $0309,x                  ; D84B= BD 09 03    =..
                sbc $0307,x                  ; D84E= FD 07 03    }..
                sta $0309,x                  ; D851= 9D 09 03    ...
                lda $0300,x                  ; D854= BD 00 03    =..
                ldy $0301,x                  ; D857= BC 01 03    <..
                asl $DA                      ; D85A= 06 DA       .Z
                bcs LD869                    ; D85C= B0 0B       0.
                sec                          ; D85E= 38          8
                adc $DC                      ; D85F= 65 DC       e\
                sta $0300,x                  ; D861= 9D 00 03    ...
                tya                          ; D864= 98          .
                adc $DD                      ; D865= 65 DD       e]
                bra LD872                    ; D867= 80 09       ..

LD869:
                clc                          ; D869= 18          .
                sbc $DC                      ; D86A= E5 DC       e\
                sta $0300,x                  ; D86C= 9D 00 03    ...
                tya                          ; D86F= 98          .
                sbc $DD                      ; D870= E5 DD       e]
LD872:
                sta $0301,x                  ; D872= 9D 01 03    ...
LD875:
                rts                          ; D875= 60          `

LD876:
                asl $0332                    ; D876= 0E 32 03    .2.
                ldy #$2C                     ; D879= A0 2C        ,
                jsr copyLastFourVDUQueueBytes                    ; D87B= 20 16 C9     .I
                asl $DB                      ; D87E= 06 DB       .[
                bcc LD88F                    ; D880= 90 0D       ..
                jsr LDA26                    ; D882= 20 26 DA     &Z
                beq LD875                    ; D885= F0 EE       pn
                ldx #$00                     ; D887= A2 00       ".
                lda $0332                    ; D889= AD 32 03    -2.
                jsr LDA0F                    ; D88C= 20 0F DA     .Z
LD88F:
                bit $DB                      ; D88F= 24 DB       $[
                bvc LD8A2                    ; D891= 50 0F       P.
                jsr LDA26                    ; D893= 20 26 DA     &Z
                beq LD875                    ; D896= F0 DD       p]
                ldx #$04                     ; D898= A2 04       ".
                lda $0332                    ; D89A= AD 32 03    -2.
                eor #$80                     ; D89D= 49 80       I.
                jsr LDA0F                    ; D89F= 20 0F DA     .Z
LD8A2:
                ldx #$28                     ; D8A2= A2 28       "(
                ldy #$2C                     ; D8A4= A0 2C        ,
                jmp LDAE8                    ; D8A6= 4C E8 DA    LhZ

LD8A9:
                asl a                        ; D8A9= 0A          .
                asl a                        ; D8AA= 0A          .
                sta $DB                      ; D8AB= 85 DB       .[
                and #$C0                     ; D8AD= 29 C0       )@
                eor #$40                     ; D8AF= 49 40       I@
                bne LD8B9                    ; D8B1= D0 06       P.
                lda $0367                    ; D8B3= AD 67 03    -g.
                sta $0368                    ; D8B6= 8D 68 03    .h.
LD8B9:
                jsr LD1A6                    ; D8B9= 20 A6 D1     &Q
                sta $DC                      ; D8BC= 85 DC       .\
                beq LD8C4                    ; D8BE= F0 04       p.
                lda #$80                     ; D8C0= A9 80       ).
                trb $DB                      ; D8C2= 14 DB       .[
LD8C4:
                ldx #$20                     ; D8C4= A2 20       "
                jsr LD1A8                    ; D8C6= 20 A8 D1     (Q
                sta $E0                      ; D8C9= 85 E0       .`
                beq LD8D7                    ; D8CB= F0 0A       p.
                tax                          ; D8CD= AA          *
                lda #$20                     ; D8CE= A9 20       )
                trb $DB                      ; D8D0= 14 DB       .[
                txa                          ; D8D2= 8A          .
                bit $DC                      ; D8D3= 24 DC       $\
LD8D5:
                bne LD875                    ; D8D5= D0 9E       P.
LD8D7:
                ldy #$24                     ; D8D7= A0 24        $
                lda #$20                     ; D8D9= A9 20       )
                ldx #$28                     ; D8DB= A2 28       "(
                jsr terminal.L9B09           ; D8DD= 20 09 9B     ..
                bit $DB                      ; D8E0= 24 DB       $[
                bvs LD8EC                    ; D8E2= 70 08       p.
                lda $032E                    ; D8E4= AD 2E 03    -..
                ora $032F                    ; D8E7= 0D 2F 03    ./.
                beq LD876                    ; D8EA= F0 8A       p.
LD8EC:
                lda $DC                      ; D8EC= A5 DC       %\
                bit #$0C                     ; D8EE= 89 0C       ..
                beq LD900                    ; D8F0= F0 0E       p.
                ldx #$28                     ; D8F2= A2 28       "(
                jsr LD77B                    ; D8F4= 20 7B D7     {W
                ldx #$28                     ; D8F7= A2 28       "(
                jsr LD1A8                    ; D8F9= 20 A8 D1     (Q
                bit $E0                      ; D8FC= 24 E0       $`
                bne LD8D5                    ; D8FE= D0 D5       PU
LD900:
                bit #$03                     ; D900= 89 03       ..
                beq LD90E                    ; D902= F0 0A       p.
                ldx #$28                     ; D904= A2 28       "(
                jsr LD6C8                    ; D906= 20 C8 D6     HV
                ldx #$28                     ; D909= A2 28       "(
                jsr LD1A8                    ; D90B= 20 A8 D1     (Q
LD90E:
                tay                          ; D90E= A8          (
                bne LD8D5                    ; D90F= D0 C4       PD
                ldy #$20                     ; D911= A0 20
                ldx #$22                     ; D913= A2 22       ""
                lda $E0                      ; D915= A5 E0       %`
                beq LD928                    ; D917= F0 0F       p.
                ldy #$04                     ; D919= A0 04        .
                ldx #$06                     ; D91B= A2 06       ".
                bit $0332                    ; D91D= 2C 32 03    ,2.
                bpl LD924                    ; D920= 10 02       ..
                ldx #$02                     ; D922= A2 02       ".
LD924:
                bvc LD928                    ; D924= 50 02       P.
                ldy #$00                     ; D926= A0 00        .
LD928:
                clc                          ; D928= 18          .
                lda $0300,x                  ; D929= BD 00 03    =..
                sbc $032A                    ; D92C= ED 2A 03    m*.
                bcc LD934                    ; D92F= 90 03       ..
                inc a                        ; D931= 1A          .
                eor #$FF                     ; D932= 49 FF       I.
LD934:
                sta $DC                      ; D934= 85 DC       .\
                clc                          ; D936= 18          .
                lda $0300,y                  ; D937= B9 00 03    9..
                sbc $0328                    ; D93A= ED 28 03    m(.
                tax                          ; D93D= AA          *
                lda $0301,y                  ; D93E= B9 01 03    9..
                sbc $0329                    ; D941= ED 29 03    m).
                bmi LD952                    ; D944= 30 0C       0.
                inx                          ; D946= E8          h
                bne LD94A                    ; D947= D0 01       P.
                inc a                        ; D949= 1A          .
LD94A:
                eor #$FF                     ; D94A= 49 FF       I.
                tay                          ; D94C= A8          (
                txa                          ; D94D= 8A          .
                eor #$FF                     ; D94E= 49 FF       I.
                tax                          ; D950= AA          *
                tya                          ; D951= 98          .
LD952:
                sta $DD                      ; D952= 85 DD       .]
                stx $E0                      ; D954= 86 E0       .`
                ldx #$28                     ; D956= A2 28       "(
                jsr LDF41                    ; D958= 20 41 DF     A_
                asl $DB                      ; D95B= 06 DB       .[
                bcs LD989                    ; D95D= B0 2A       0*
LD95F:
                bit $DB                      ; D95F= 24 DB       $[
                bvc LD96E                    ; D961= 50 0B       P.
                lda $E0                      ; D963= A5 E0       %`
                and $DC                      ; D965= 25 DC       %\
                and $DD                      ; D967= 25 DD       %]
                inc a                        ; D969= 1A          .
                beq LD9A0                    ; D96A= F0 34       p4
                bit $DB                      ; D96C= 24 DB       $[
LD96E:
                bpl LD979                    ; D96E= 10 09       ..
                lda $0368                    ; D970= AD 68 03    -h.
                asl a                        ; D973= 0A          .
                rol $0368                    ; D974= 2E 68 03    .h.
                bcc LD989                    ; D977= 90 10       ..
LD979:
                lda ZMASK                      ; D979= A5 D1       %Q
                and ZGORA                      ; D97B= 25 D4       %T
                ora (ZMEMG),y                  ; D97D= 11 D6       .V
                sta $DA                      ; D97F= 85 DA       .Z
                lda ZMASK                      ; D981= A5 D1       %Q
                and ZGEOR                      ; D983= 25 D5       %U
                eor $DA                      ; D985= 45 DA       EZ
                sta (ZMEMG),y                  ; D987= 91 D6       .V
LD989:
                lda $0331                    ; D989= AD 31 03    -1.
                bpl LD9DC                    ; D98C= 10 4E       .N
                inc $DC                      ; D98E= E6 DC       f\
                beq LD9A0                    ; D990= F0 0E       p.
                bit $0332                    ; D992= 2C 32 03    ,2.
                bmi LD9A1                    ; D995= 30 0A       0.
                dey                          ; D997= 88          .
                dex                          ; D998= CA          J
                bpl LD9BF                    ; D999= 10 24       .$
                jsr LDA4C                    ; D99B= 20 4C DA     LZ
                bra LD9BF                    ; D99E= 80 1F       ..

LD9A0:
                rts                          ; D9A0= 60          `

LD9A1:
                iny                          ; D9A1= C8          H
                inx                          ; D9A2= E8          h
                cpx #$08                     ; D9A3= E0 08       `.
                bne LD9BF                    ; D9A5= D0 18       P.
                sec                          ; D9A7= 38          8
                tya                          ; D9A8= 98          .
                sbc #$08                     ; D9A9= E9 08       i.
                clc                          ; D9AB= 18          .
                adc $0352                    ; D9AC= 6D 52 03    mR.
                tay                          ; D9AF= A8          (
                lda ZMEMG+1                      ; D9B0= A5 D7       %W
                adc $0353                    ; D9B2= 6D 53 03    mS.
                bpl LD9BB                    ; D9B5= 10 04       ..
                sec                          ; D9B7= 38          8
                sbc $0354                    ; D9B8= ED 54 03    mT.
LD9BB:
                sta ZMEMG+1                      ; D9BB= 85 D7       .W
                ldx #$00                     ; D9BD= A2 00       ".
LD9BF:
                lda $0369                    ; D9BF= AD 69 03    -i.
                beq LD9C7                    ; D9C2= F0 03       p.
                jsr LDA7C                    ; D9C4= 20 7C DA     |Z
LD9C7:
                clc                          ; D9C7= 18          .
                lda $0330                    ; D9C8= AD 30 03    -0.
                adc $032C                    ; D9CB= 6D 2C 03    m,.
                sta $0330                    ; D9CE= 8D 30 03    .0.
                lda $0331                    ; D9D1= AD 31 03    -1.
                adc $032D                    ; D9D4= 6D 2D 03    m-.
                sta $0331                    ; D9D7= 8D 31 03    .1.
                bmi LD95F                    ; D9DA= 30 83       0.
LD9DC:
                inc $E0                      ; D9DC= E6 E0       f`
                bne LD9E4                    ; D9DE= D0 04       P.
                inc $DD                      ; D9E0= E6 DD       f]
                beq LD9A0                    ; D9E2= F0 BC       p<
LD9E4:
                bit $0332                    ; D9E4= 2C 32 03    ,2.
                bvs LD9F2                    ; D9E7= 70 09       p.
                lsr ZMASK                      ; D9E9= 46 D1       FQ
                bcc LD9F9                    ; D9EB= 90 0C       ..
                jsr LDA67                    ; D9ED= 20 67 DA     gZ
                bra LD9F9                    ; D9F0= 80 07       ..

LD9F2:
                asl ZMASK                      ; D9F2= 06 D1       .Q
                bcc LD9F9                    ; D9F4= 90 03       ..
                jsr LDA34                    ; D9F6= 20 34 DA     4Z
LD9F9:
                sec                          ; D9F9= 38          8
                lda $0330                    ; D9FA= AD 30 03    -0.
                sbc $032E                    ; D9FD= ED 2E 03    m..
                sta $0330                    ; DA00= 8D 30 03    .0.
                lda $0331                    ; DA03= AD 31 03    -1.
                sbc $032F                    ; DA06= ED 2F 03    m/.
                sta $0331                    ; DA09= 8D 31 03    .1.
                jmp LD95F                    ; DA0C= 4C 5F D9    L_Y

LDA0F:
                bmi LDA1A                    ; DA0F= 30 09       0.
                inc $0328,x                  ; DA11= FE 28 03    ~(.
                bne LDA25                    ; DA14= D0 0F       P.
                inc $0329,x                  ; DA16= FE 29 03    ~).
                rts                          ; DA19= 60          `

LDA1A:
                lda $0328,x                  ; DA1A= BD 28 03    =(.
                bne LDA22                    ; DA1D= D0 03       P.
                dec $0329,x                  ; DA1F= DE 29 03    ^).
LDA22:
                dec $0328,x                  ; DA22= DE 28 03    ^(.
LDA25:
                rts                          ; DA25= 60          `

LDA26:
                ldy #$04                     ; DA26= A0 04        .
LDA28:
                lda $0327,y                  ; DA28= B9 27 03    9'.
                cmp $032B,y                  ; DA2B= D9 2B 03    Y+.
                bne LDA33                    ; DA2E= D0 03       P.
                dey                          ; DA30= 88          .
                bne LDA28                    ; DA31= D0 F5       Pu
LDA33:
                rts                          ; DA33= 60          `

LDA34:
                lda $0363                    ; DA34= AD 63 03    -c.
                sta ZMASK                      ; DA37= 85 D1       .Q
                tya                          ; DA39= 98          .
                sbc #$08                     ; DA3A= E9 08       i.
                tay                          ; DA3C= A8          (
                bcs LDA4B                    ; DA3D= B0 0C       0.
                lda ZMEMG+1                      ; DA3F= A5 D7       %W
                dec a                        ; DA41= 3A          :
                cmp $034E                    ; DA42= CD 4E 03    MN.
                bcs LDA49                    ; DA45= B0 02       0.
                lda #$7F                     ; DA47= A9 7F       ).
LDA49:
                sta ZMEMG+1                      ; DA49= 85 D7       .W
LDA4B:
                rts                          ; DA4B= 60          `

LDA4C:
                clc                          ; DA4C= 18          .
                tya                          ; DA4D= 98          .
                adc #$08                     ; DA4E= 69 08       i.
                sec                          ; DA50= 38          8
                sbc $0352                    ; DA51= ED 52 03    mR.
                tay                          ; DA54= A8          (
                lda ZMEMG+1                      ; DA55= A5 D7       %W
                sbc $0353                    ; DA57= ED 53 03    mS.
                cmp $034E                    ; DA5A= CD 4E 03    MN.
                bcs LDA62                    ; DA5D= B0 03       0.
                adc $0354                    ; DA5F= 6D 54 03    mT.
LDA62:
                sta ZMEMG+1                      ; DA62= 85 D7       .W
                ldx #$07                     ; DA64= A2 07       ".
                rts                          ; DA66= 60          `

LDA67:
                lda $0362                    ; DA67= AD 62 03    -b.
                sta ZMASK                      ; DA6A= 85 D1       .Q
LDA6C:
                tya                          ; DA6C= 98          .
                adc #$07                     ; DA6D= 69 07       i.
                tay                          ; DA6F= A8          (
                bcc LDA7B                    ; DA70= 90 09       ..
                inc ZMEMG+1                      ; DA72= E6 D7       fW
                bpl LDA7B                    ; DA74= 10 05       ..
                lda $034E                    ; DA76= AD 4E 03    -N.
                sta ZMEMG+1                      ; DA79= 85 D7       .W
LDA7B:
                rts                          ; DA7B= 60          `

LDA7C:
                phx                          ; DA7C= DA          Z
                txa                          ; DA7D= 8A          .
                ora $0359                    ; DA7E= 0D 59 03    .Y.
                tax                          ; DA81= AA          *
                lda L8820,x                  ; DA82= BD 20 88    = .
                ldx $035A                    ; DA85= AE 5A 03    .Z.
                pha                          ; DA88= 48          H
                ora LE144,x                  ; DA89= 1D 44 E1    .Da
                eor LE145,x                  ; DA8C= 5D 45 E1    ]Ea
                sta ZGORA                      ; DA8F= 85 D4       .T
                pla                          ; DA91= 68          h
                ora LE143,x                  ; DA92= 1D 43 E1    .Ca
                eor LE148,x                  ; DA95= 5D 48 E1    ]Ha
                sta ZGEOR                      ; DA98= 85 D5       .U
                plx                          ; DA9A= FA          z
                rts                          ; DA9B= 60          `

LDA9C:
                lda $0301,y                  ; DA9C= B9 01 03    9..
                pha                          ; DA9F= 48          H
                lda $0300,y                  ; DAA0= B9 00 03    9..
                pha                          ; DAA3= 48          H
                and $0361                    ; DAA4= 2D 61 03    -a.
                clc                          ; DAA7= 18          .
                adc $0361                    ; DAA8= 6D 61 03    ma.
                tay                          ; DAAB= A8          (
                lda LE12E,y                  ; DAAC= B9 2E E1    9.a
                eor LE120,y                  ; DAAF= 59 20 E1    Y a
                sta $DC                      ; DAB2= 85 DC       .\
                lda $0300,x                  ; DAB4= BD 00 03    =..
                and $0361                    ; DAB7= 2D 61 03    -a.
                adc $0361                    ; DABA= 6D 61 03    ma.
                tay                          ; DABD= A8          (
                lda LE120,y                  ; DABE= B9 20 E1    9 a
                sta ZMASK                      ; DAC1= 85 D1       .Q
                sec                          ; DAC3= 38          8
                pla                          ; DAC4= 68          h
                ora $0361                    ; DAC5= 0D 61 03    .a.
                sbc $0300,x                  ; DAC8= FD 00 03    }..
                tay                          ; DACB= A8          (
                pla                          ; DACC= 68          h
                sbc $0301,x                  ; DACD= FD 01 03    }..
                sta $DD                      ; DAD0= 85 DD       .]
                tya                          ; DAD2= 98          .
                ldy $0361                    ; DAD3= AC 61 03    ,a.
                cpy #$03                     ; DAD6= C0 03       @.
                beq LDADF                    ; DAD8= F0 05       p.
                bcc LDAE2                    ; DADA= 90 06       ..
                lsr $DD                      ; DADC= 46 DD       F]
                ror a                        ; DADE= 6A          j
LDADF:
                lsr $DD                      ; DADF= 46 DD       F]
                ror a                        ; DAE1= 6A          j
LDAE2:
                lsr a                        ; DAE2= 4A          J
LDAE3:
                rts                          ; DAE3= 60          `

LDAE4:
                ldx #$42                     ; DAE4= A2 42       "B
                ldy #$46                     ; DAE6= A0 46        F
LDAE8:
                jsr LD5CC                    ; DAE8= 20 CC D5     LU
                stx $DE                      ; DAEB= 86 DE       .^
                sty $DF                      ; DAED= 84 DF       ._
                ldx $DF                      ; DAEF= A6 DF       &_
                ldy #$00                     ; DAF1= A0 00        .
                jsr LD1B7                    ; DAF3= 20 B7 D1     7Q
                beq LDAFF                    ; DAF6= F0 07       p.
                lsr a                        ; DAF8= 4A          J
                beq LDAE3                    ; DAF9= F0 E8       ph
                ldx #$04                     ; DAFB= A2 04       ".
                stx $DF                      ; DAFD= 86 DF       ._
LDAFF:
                ldx $DE                      ; DAFF= A6 DE       &^
                jsr LD1A8                    ; DB01= 20 A8 D1     (Q
                lsr a                        ; DB04= 4A          J
                bne LDAE3                    ; DB05= D0 DC       P\
                lda $0302,x                  ; DB07= BD 02 03    =..
                bcc LDB10                    ; DB0A= 90 04       ..
                ldx #$00                     ; DB0C= A2 00       ".
                stx $DE                      ; DB0E= 86 DE       .^
LDB10:
                jsr LDECB                    ; DB10= 20 CB DE     K^
                ldx $DE                      ; DB13= A6 DE       &^
                ldy $DF                      ; DB15= A4 DF       $_
                jsr LDA9C                    ; DB17= 20 9C DA     .Z
                tax                          ; DB1A= AA          *
                ldy $031A                    ; DB1B= AC 1A 03    ,..
                txa                          ; DB1E= 8A          .
                beq LDB44                    ; DB1F= F0 23       p#
                jsr LDB51                    ; DB21= 20 51 DB     Q[
                bra LDB2E                    ; DB24= 80 08       ..

LDB26:
                lda (ZMEMG),y                  ; DB26= B1 D6       1V
                ora ZGORA                      ; DB28= 05 D4       .T
                eor ZGEOR                      ; DB2A= 45 D5       EU
                sta (ZMEMG),y                  ; DB2C= 91 D6       .V
LDB2E:
                tya                          ; DB2E= 98          .
                clc                          ; DB2F= 18          .
                adc #$08                     ; DB30= 69 08       i.
                tay                          ; DB32= A8          (
                bcc LDB3E                    ; DB33= 90 09       ..
                inc ZMEMG+1                      ; DB35= E6 D7       fW
                bpl LDB3E                    ; DB37= 10 05       ..
                lda $034E                    ; DB39= AD 4E 03    -N.
                sta ZMEMG+1                      ; DB3C= 85 D7       .W
LDB3E:
                dex                          ; DB3E= CA          J
                bne LDB26                    ; DB3F= D0 E5       Pe
                dex                          ; DB41= CA          J
                stx ZMASK                      ; DB42= 86 D1       .Q
LDB44:
                lda $DC                      ; DB44= A5 DC       %\
                trb ZMASK                      ; DB46= 14 D1       .Q
                bra LDB51                    ; DB48= 80 07       ..

LDB4A:
                ldx #$20                     ; DB4A= A2 20       "
LDB4C:
                jsr LDEC3                    ; DB4C= 20 C3 DE     C^
                bne LDB61                    ; DB4F= D0 10       P.
LDB51:
                lda ZMASK                      ; DB51= A5 D1       %Q
                and ZGORA                      ; DB53= 25 D4       %T
                ora (ZMEMG),y                  ; DB55= 11 D6       .V
                sta $DA                      ; DB57= 85 DA       .Z
                lda ZGEOR                      ; DB59= A5 D5       %U
                and ZMASK                      ; DB5B= 25 D1       %Q
                eor $DA                      ; DB5D= 45 DA       EZ
LDB5F:
                sta (ZMEMG),y                  ; DB5F= 91 D6       .V
LDB61:
                rts                          ; DB61= 60          `

                ldx #VDUVariables.workspace2A
                ldy #VDUVariables.workspace32
                jsr copyTwoBytesWithinVDUVariables                    ; DB66= 20 0C C9     .I
                ldx #VDUVariables.workspace36
                ldy #VDUVariables.workspace3E
                jsr copyTwoBytesWithinVDUVariables                    ; DB6D= 20 0C C9     .I
                ldx #$2A                     ; DB70= A2 2A       "*
                jsr LD1B5                    ; DB72= 20 B5 D1     5Q
                pha                          ; DB75= 48          H
                ldx #$36                     ; DB76= A2 36       "6
                jsr LD1B5                    ; DB78= 20 B5 D1     5Q
                beq LDB8C                    ; DB7B= F0 0F       p.
                pla                          ; DB7D= 68          h
                bne LDB85                    ; DB7E= D0 05       P.
                lda $0345                    ; DB80= AD 45 03    -E.
                beq LDB86                    ; DB83= F0 01       p.
LDB85:
                rts                          ; DB85= 60          `

LDB86:
                ldx #$28                     ; DB86= A2 28       "(
                ldy #$2C                     ; DB88= A0 2C        ,
                bra LDB93                    ; DB8A= 80 07       ..

LDB8C:
                pla                          ; DB8C= 68          h
                beq LDB96                    ; DB8D= F0 07       p.
                ldx #$34                     ; DB8F= A2 34       "4
                ldy #$38                     ; DB91= A0 38        8
LDB93:
                jmp LDAE8                    ; DB93= 4C E8 DA    LhZ

LDB96:
                ldx #$30                     ; DB96= A2 30       "0
                jsr LDEC8                    ; DB98= 20 C8 DE     H^
                bit $0347                    ; DB9B= 2C 47 03    ,G.
                bmi LDBA9                    ; DB9E= 30 09       0.
                tya                          ; DBA0= 98          .
                sec                          ; DBA1= 38          8
                sbc #$08                     ; DBA2= E9 08       i.
                tay                          ; DBA4= A8          (
                bcs LDBA9                    ; DBA5= B0 02       0.
                dec ZMEMG+1                      ; DBA7= C6 D7       FW
LDBA9:
                lda $0344                    ; DBA9= AD 44 03    -D.
                sta $DD                      ; DBAC= 85 DD       .]
LDBAE:
                lda (ZMEMG),y                  ; DBAE= B1 D6       1V
                ldx $0342                    ; DBB0= AE 42 03    .B.
                beq LDBB9                    ; DBB3= F0 04       p.
LDBB5:
                asl a                        ; DBB5= 0A          .
                dex                          ; DBB6= CA          J
                bne LDBB5                    ; DBB7= D0 FC       P|
LDBB9:
                sta $DA                      ; DBB9= 85 DA       .Z
                sec                          ; DBBB= 38          8
                jsr LDA6C                    ; DBBC= 20 6C DA     lZ
                lda (ZMEMG),y                  ; DBBF= B1 D6       1V
                ldx $0343                    ; DBC1= AE 43 03    .C.
                beq LDBCA                    ; DBC4= F0 04       p.
LDBC6:
                lsr a                        ; DBC6= 4A          J
                dex                          ; DBC7= CA          J
                bne LDBC6                    ; DBC8= D0 FC       P|
LDBCA:
                eor $DA                      ; DBCA= 45 DA       EZ
                and $E1                      ; DBCC= 25 E1       %a
                eor $DA                      ; DBCE= 45 DA       EZ
                ldx $DD                      ; DBD0= A6 DD       &]
                sta L8830,x                  ; DBD2= 9D 30 88    .0.
                dec $DD                      ; DBD5= C6 DD       F]
                bpl LDBAE                    ; DBD7= 10 D5       .U
                ldx #$34                     ; DBD9= A2 34       "4
                ldy #$38                     ; DBDB= A0 38        8
                jsr LDAE8                    ; DBDD= 20 E8 DA     hZ
                lda $0345                    ; DBE0= AD 45 03    -E.
                bne LDBE8                    ; DBE3= D0 03       P.
                jsr LDB86                    ; DBE5= 20 86 DB     .[
LDBE8:
                ldx #$3C                     ; DBE8= A2 3C       "<
                jsr LDEC8                    ; DBEA= 20 C8 DE     H^
                lda $0346                    ; DBED= AD 46 03    -F.
                sta $DA                      ; DBF0= 85 DA       .Z
                ldx $0344                    ; DBF2= AE 44 03    .D.
                beq LDC0C                    ; DBF5= F0 15       p.
                jsr LDC10                    ; DBF7= 20 10 DC     .\
                lda #$FF                     ; DBFA= A9 FF       ).
                sta $DA                      ; DBFC= 85 DA       .Z
                bra LDC05                    ; DBFE= 80 05       ..

LDC00_code:
                lda L8830,x                  ; DC00= BD 30 88    =0.
                sta (ZMEMG),y                  ; DC03= 91 D6       .V
LDC05:
                sec                          ; DC05= 38          8
                jsr LDA6C                    ; DC06= 20 6C DA     lZ
                dex                          ; DC09= CA          J
                bne LDC00_code               ; DC0A= D0 F4       Pt
LDC0C:
                lda $E0                      ; DC0C= A5 E0       %`
                trb $DA                      ; DC0E= 14 DA       .Z
LDC10:
                lda L8830,x                  ; DC10= BD 30 88    =0.
                eor (ZMEMG),y                  ; DC13= 51 D6       QV
                and $DA                      ; DC15= 25 DA       %Z
                eor (ZMEMG),y                  ; DC17= 51 D6       QV
                sta (ZMEMG),y                  ; DC19= 91 D6       .V
                rts                          ; DC1B= 60          `

LDC1C:
                lda $0337                    ; DC1C= AD 37 03    -7.
                inc a                        ; DC1F= 1A          .
                cmp $0336                    ; DC20= CD 36 03    M6.
                beq LDC47                    ; DC23= F0 22       p"
                sta $0337                    ; DC25= 8D 37 03    .7.
                tax                          ; DC28= AA          *
                lda $032E                    ; DC29= AD 2E 03    -..
                sta L8400,x                  ; DC2C= 9D 00 84    ...
                lda $0332                    ; DC2F= AD 32 03    -2.
                sta L8500,x                  ; DC32= 9D 00 85    ...
                lda $032F                    ; DC35= AD 2F 03    -/.
                asl a                        ; DC38= 0A          .
                asl a                        ; DC39= 0A          .
                ora $0333                    ; DC3A= 0D 33 03    .3.
                sta L8600,x                  ; DC3D= 9D 00 86    ...
                lda $0330                    ; DC40= AD 30 03    -0.
                sta L8700,x                  ; DC43= 9D 00 87    ...
LDC46:
                clc                          ; DC46= 18          .
LDC47:
                rts                          ; DC47= 60          `

LDC48:
                sta $032A                    ; DC48= 8D 2A 03    .*.
                ldx #$28                     ; DC4B= A2 28       "(
                jsr LDCB0                    ; DC4D= 20 B0 DC     0\
                bne LDC5C                    ; DC50= D0 0A       P.
LDC52:
                jsr LDC1C                    ; DC52= 20 1C DC     .\
                bcs LDC47                    ; DC55= B0 F0       0p
                jsr terminal.L9D57           ; DC57= 20 57 9D     W.
                bcs LDC46                    ; DC5A= B0 EA       0j
LDC5C:
                jsr LDCC1                    ; DC5C= 20 C1 DC     A\
                jsr terminal.L9D57           ; DC5F= 20 57 9D     W.
                bcs LDC46                    ; DC62= B0 E2       0b
                jsr LDCD7                    ; DC64= 20 D7 DC     W\
                jsr LDCB8                    ; DC67= 20 B8 DC     8\
                bra LDC52                    ; DC6A= 80 E6       .f

LDC6C:
                jsr LDD9F                    ; DC6C= 20 9F DD     .]
                jsr LDCB0                    ; DC6F= 20 B0 DC     0\
                clc                          ; DC72= 18          .
                bra LDC83                    ; DC73= 80 0E       ..

LDC75:
                jsr LDD9F                    ; DC75= 20 9F DD     .]
                jsr LDCC9                    ; DC78= 20 C9 DC     I\
                jsr LDCD2                    ; DC7B= 20 D2 DC     R\
                bne LDC83                    ; DC7E= D0 03       P.
                jsr LDCB8                    ; DC80= 20 B8 DC     8\
LDC83:
                php                          ; DC83= 08          .
                ldx #VDUVariables.workspace2E
                ldy #VDUVariables.oldGraphicsCursorPixelsX
                jsr copyFourBytesWithinVDUVariables
                plp                          ; DC8B= 28          (
                php                          ; DC8C= 08          .
                beq LDC91                    ; DC8D= F0 02       p.
                ldx #$2E                     ; DC8F= A2 2E       ".
LDC91:
                ldy #VDUVariables.graphicsCursorPixelsX
                jsr copyTwoBytesWithinVDUVariables                    ; DC93= 20 0C C9     .I
                ldx #VDUVariables.workspace30
                jsr copyTwoBytesWithinVDUVariables                    ; DC98= 20 0C C9     .I
                plp                          ; DC9B= 28          (
                beq LDCA3                    ; DC9C= F0 05       p.
                bcs LDCA4                    ; DC9E= B0 04       0.
                inc $0316                    ; DCA0= EE 16 03    n..
LDCA3:
                rts                          ; DCA3= 60          `

LDCA4:
                lda $0324                    ; DCA4= AD 24 03    -$.
                bne LDCAC                    ; DCA7= D0 03       P.
                dec $0325                    ; DCA9= CE 25 03    N%.
LDCAC:
                dec $0324                    ; DCAC= CE 24 03    N$.
                rts                          ; DCAF= 60          `

LDCB0:
                jsr LDCD2                    ; DCB0= 20 D2 DC     R\
                bne LDD0A                    ; DCB3= D0 55       PU
                jsr LDD0B                    ; DCB5= 20 0B DD     .]
LDCB8:
                ldx #$2E                     ; DCB8= A2 2E       ".
                ldy #$32                     ; DCBA= A0 32        2
                jsr LDAE8                    ; DCBC= 20 E8 DA     hZ
                bra LDD07                    ; DCBF= 80 46       .F

LDCC1:
                jsr LDCC9                    ; DCC1= 20 C9 DC     I\
                ldx #$2C                     ; DCC4= A2 2C       ",
                jsr LDCD9                    ; DCC6= 20 D9 DC     Y\
LDCC9:
                php                          ; DCC9= 08          .
                lda $E1                      ; DCCA= A5 E1       %a
                eor #$08                     ; DCCC= 49 08       I.
                sta $E1                      ; DCCE= 85 E1       .a
                plp                          ; DCD0= 28          (
                rts                          ; DCD1= 60          `

LDCD2:
                ldy #VDUVariables.workspace2E
                jsr copyFourBytesWithinVDUVariables
LDCD7:
                ldx #VDUVariables.graphicsWindowPixelsRight
LDCD9:
                ldy #VDUVariables.workspace34
                jsr copyTwoBytesWithinVDUVariables                    ; DCDB= 20 0C C9     .I
                ldx #$34                     ; DCDE= A2 34       "4
                jsr LDD35                    ; DCE0= 20 35 DD     5]
                bne LDD0A                    ; DCE3= D0 25       P%
LDCE5:
                lsr ZMASK                      ; DCE5= 46 D1       FQ
                bcc LDCF1                    ; DCE7= 90 08       ..
LDCE9:
                jsr LDA67                    ; DCE9= 20 67 DA     gZ
                jsr LDD65                    ; DCEC= 20 65 DD     e]
                bcs LDCE9                    ; DCEF= B0 F8       0x
LDCF1:
                jsr LDD85                    ; DCF1= 20 85 DD     .]
                bcs LDCE5                    ; DCF4= B0 EF       0o
                sec                          ; DCF6= 38          8
                lda $0334                    ; DCF7= AD 34 03    -4.
                sbc $DE                      ; DCFA= E5 DE       e^
                sta $0332                    ; DCFC= 8D 32 03    .2.
                lda $0335                    ; DCFF= AD 35 03    -5.
                sbc $DF                      ; DD02= E5 DF       e_
                sta $0333                    ; DD04= 8D 33 03    .3.
LDD07:
                lda #$00                     ; DD07= A9 00       ).
                sec                          ; DD09= 38          8
LDD0A:
                rts                          ; DD0A= 60          `

LDD0B:
                ldx #$00                     ; DD0B= A2 00       ".
                jsr LDD35                    ; DD0D= 20 35 DD     5]
                bne LDD0A                    ; DD10= D0 F8       Px
LDD12:
                asl ZMASK                      ; DD12= 06 D1       .Q
                bcc LDD1E                    ; DD14= 90 08       ..
LDD16:
                jsr LDA34                    ; DD16= 20 34 DA     4Z
                jsr LDD65                    ; DD19= 20 65 DD     e]
                bcs LDD16                    ; DD1C= B0 F8       0x
LDD1E:
                jsr LDD85                    ; DD1E= 20 85 DD     .]
                bcs LDD12                    ; DD21= B0 EF       0o
                lda $0300                    ; DD23= AD 00 03    -..
                adc $DE                      ; DD26= 65 DE       e^
                sta $032E                    ; DD28= 8D 2E 03    ...
                lda $0301                    ; DD2B= AD 01 03    -..
                adc $DF                      ; DD2E= 65 DF       e_
                sta $032F                    ; DD30= 8D 2F 03    ./.
                bra LDD07                    ; DD33= 80 D2       .R

LDD35:
                sec                          ; DD35= 38          8
                lda $032E                    ; DD36= AD 2E 03    -..
                sbc $0300,x                  ; DD39= FD 00 03    }..
                tay                          ; DD3C= A8          (
                lda $032F                    ; DD3D= AD 2F 03    -/.
                sbc $0301,x                  ; DD40= FD 01 03    }..
                bpl LDD48                    ; DD43= 10 03       ..
                jsr LC92E                    ; DD45= 20 2E C9     .I
LDD48:
                sty $DE                      ; DD48= 84 DE       .^
                sta $DF                      ; DD4A= 85 DF       ._
                ldx #$2E                     ; DD4C= A2 2E       ".
                jsr LDEC3                    ; DD4E= 20 C3 DE     C^
                clc                          ; DD51= 18          .
                bne LDD64                    ; DD52= D0 10       P.
                lda (ZMEMG),y                  ; DD54= B1 D6       1V
                eor L8830,x                  ; DD56= 5D 30 88    ]0.
                sta $DA                      ; DD59= 85 DA       .Z
                and ZMASK                      ; DD5B= 25 D1       %Q
                beq LDD61                    ; DD5D= F0 02       p.
                lda #$08                     ; DD5F= A9 08       ).
LDD61:
                eor $E1                      ; DD61= 45 E1       Ea
                sec                          ; DD63= 38          8
LDD64:
                rts                          ; DD64= 60          `

LDD65:
                lda (ZMEMG),y                  ; DD65= B1 D6       1V
                eor L8830,x                  ; DD67= 5D 30 88    ]0.
                sta $DA                      ; DD6A= 85 DA       .Z
                ora $E1                      ; DD6C= 05 E1       .a
                clc                          ; DD6E= 18          .
                bne LDD84                    ; DD6F= D0 13       P.
                lda $DE                      ; DD71= A5 DE       %^
                sbc $0361                    ; DD73= ED 61 03    ma.
                pha                          ; DD76= 48          H
                lda $DF                      ; DD77= A5 DF       %_
                sbc #$00                     ; DD79= E9 00       i.
                bcc LDD83                    ; DD7B= 90 06       ..
                sta $DF                      ; DD7D= 85 DF       ._
                pla                          ; DD7F= 68          h
                sta $DE                      ; DD80= 85 DE       .^
                rts                          ; DD82= 60          `

LDD83:
                pla                          ; DD83= 68          h
LDD84:
                rts                          ; DD84= 60          `

LDD85:
                lda $DA                      ; DD85= A5 DA       %Z
                and ZMASK                      ; DD87= 25 D1       %Q
                beq LDD8D                    ; DD89= F0 02       p.
                lda #$08                     ; DD8B= A9 08       ).
LDD8D:
                eor $E1                      ; DD8D= 45 E1       Ea
                bne LDD9E                    ; DD8F= D0 0D       P.
                lda $DE                      ; DD91= A5 DE       %^
                bne LDD9B                    ; DD93= D0 06       P.
                lda $DF                      ; DD95= A5 DF       %_
                beq LDD9E                    ; DD97= F0 05       p.
                dec $DF                      ; DD99= C6 DF       F_
LDD9B:
                dec $DE                      ; DD9B= C6 DE       F^
                sec                          ; DD9D= 38          8
LDD9E:
                rts                          ; DD9E= 60          `

LDD9F:
                lsr a                        ; DD9F= 4A          J
                lsr a                        ; DDA0= 4A          J
LDDA1:
                and #$08                     ; DDA1= 29 08       ).
                sta $E1                      ; DDA3= 85 E1       .a
                eor #$0F                     ; DDA5= 49 0F       I.
                tax                          ; DDA7= AA          *
                ldy #$07                     ; DDA8= A0 07        .
LDDAA:
                lda L8820,x                  ; DDAA= BD 20 88    = .
                sta L8830,y                  ; DDAD= 99 30 88    .0.
                dex                          ; DDB0= CA          J
                dey                          ; DDB1= 88          .
                bpl LDDAA                    ; DDB2= 10 F6       .v
                ldx #$20                     ; DDB4= A2 20       "
                rts                          ; DDB6= 60          `

LDDB7:
                jsr LC0FA                    ; DDB7= 20 FA C0     z@
                ldx $0361                    ; DDBA= AE 61 03    .a.
                beq LDDE0                    ; DDBD= F0 21       p!
                pha                          ; DDBF= 48          H
                tax                          ; DDC0= AA          *
                jsr LD1DE                    ; DDC1= 20 DE D1     ^Q
                plx                          ; DDC4= FA          z
                jsr LDEC3                    ; DDC5= 20 C3 DE     C^
                bne LDDE0                    ; DDC8= D0 16       P.
                lda (ZMEMG),y                  ; DDCA= B1 D6       1V
                stz $DA                      ; DDCC= 64 DA       dZ
                bra LDDD1                    ; DDCE= 80 01       ..

LDDD0:
                asl a                        ; DDD0= 0A          .
LDDD1:
                asl ZMASK                      ; DDD1= 06 D1       .Q
                bcc LDDD0                    ; DDD3= 90 FB       .{
                asl a                        ; DDD5= 0A          .
                rol $DA                      ; DDD6= 26 DA       &Z
                ldx ZMASK                      ; DDD8= A6 D1       &Q
                bne LDDD1                    ; DDDA= D0 F5       Pu
                lda $DA                      ; DDDC= A5 DA       %Z
                bra LDDE2                    ; DDDE= 80 02       ..

LDDE0:
                lda #$FF                     ; DDE0= A9 FF       ).
LDDE2:
                jmp LC0CA                    ; DDE2= 4C CA C0    LJ@

LDDE5:
                cmp #$23                     ; DDE5= C9 23       I#
                beq LDDF3                    ; DDE7= F0 0A       p.
                cmp #$5F                     ; DDE9= C9 5F       I_
                beq LDDF5                    ; DDEB= F0 08       p.
                cmp #$60                     ; DDED= C9 60       I`
                bne LDDF7                    ; DDEF= D0 06       P.
                eor #$3F                     ; DDF1= 49 3F       I?
LDDF3:
                eor #$43                     ; DDF3= 49 43       IC
LDDF5:
                eor #$3F                     ; DDF5= 49 3F       I?
LDDF7:
                rts                          ; DDF7= 60          `

LDDF8:
                cli                          ; DDF8= 58          X
                bit STATE                      ; DDF9= 24 D0       $P
                bvc LDE03                    ; DDFB= 50 06       P.
                jsr LC0FA                    ; DDFD= 20 FA C0     z@
                jsr LC0D1                    ; DE00= 20 D1 C0     Q@
LDE03:
                ldy $0360                    ; DE03= AC 60 03    ,`.
                bne LDE1F                    ; DE06= D0 17       P.
                lda (ZMEMT)                    ; DE08= B2 D8       2X
                jsr LDDE5                    ; DE0A= 20 E5 DD     e]
                jsr LDDE5                    ; DE0D= 20 E5 DD     e]
LDE10:
                bit STATE                      ; DE10= 24 D0       $P
                bvc LDE1A                    ; DE12= 50 06       P.
                jsr LC0D1                    ; DE14= 20 D1 C0     Q@
                jsr LC0CA                    ; DE17= 20 CA C0     J@
LDE1A:
                ldy $0355                    ; DE1A= AC 55 03    ,U.
                tax                          ; DE1D= AA          *
                rts                          ; DE1E= 60          `

LDE1F:
                jsr LDE56                    ; DE1F= 20 56 DE     V^
                lda $F4                      ; DE22= A5 F4       %t
                pha                          ; DE24= 48          H
                jsr selectTerminalROMAndANDY                    ; DE25= 20 7F E5     .e
                lda #$20                     ; DE28= A9 20       )
                tax                          ; DE2A= AA          *
                jsr getSoftCharacterDefinitionAddress                    ; DE2B= 20 2C E2     ,b
LDE2E:
                ldy #$07                     ; DE2E= A0 07        .
LDE30:
                lda $0328,y                  ; DE30= B9 28 03    9(.
                eor ($DE),y                  ; DE33= 51 DE       Q^
                bne LDE41                    ; DE35= D0 0A       P.
                dey                          ; DE37= 88          .
                bpl LDE30                    ; DE38= 10 F6       .v
                txa                          ; DE3A= 8A          .
LDE3B:
                plx                          ; DE3B= FA          z
                jsr selectROMX                    ; DE3C= 20 81 E5     .e
                bra LDE10                    ; DE3F= 80 CF       .O

LDE41:
                inx                          ; DE41= E8          h
                clc                          ; DE42= 18          .
                lda $DE                      ; DE43= A5 DE       %^
                adc #$08                     ; DE45= 69 08       i.
                sta $DE                      ; DE47= 85 DE       .^
                bcc LDE4D                    ; DE49= 90 02       ..
                inc $DF                      ; DE4B= E6 DF       f_
LDE4D:
                cpx #$7F                     ; DE4D= E0 7F       `.
                beq LDE41                    ; DE4F= F0 F0       pp
                txa                          ; DE51= 8A          .
                bne LDE2E                    ; DE52= D0 DA       PZ
                bra LDE3B                    ; DE54= 80 E5       .e

LDE56:
                ldx ZMEMT+0                      ; DE56= A6 D8       &X
                lda ZMEMT+1                      ; DE58= A5 D9       %Y
                jsr LCED9                    ; DE5A= 20 D9 CE     YN
                ldy #$07                     ; DE5D= A0 07        .
LDE5F:
                ldx $0360                    ; DE5F= AE 60 03    .`.
                cpx #$03                     ; DE62= E0 03       `.
                beq LDE6F                    ; DE64= F0 09       p.
                bcs LDE7B                    ; DE66= B0 13       0.
                lda (ZMEMT),y                  ; DE68= B1 D8       1X
                eor $0358                    ; DE6A= 4D 58 03    MX.
                bra LDE91                    ; DE6D= 80 22       ."

LDE6F:
                lda (ZMEMT),y                  ; DE6F= B1 D8       1X
                jsr LDEA2                    ; DE71= 20 A2 DE     "^
                lda ($DA),y                  ; DE74= B1 DA       1Z
                jsr LDEA2                    ; DE76= 20 A2 DE     "^
                bra LDE8F                    ; DE79= 80 14       ..

LDE7B:
                lda (ZMEMT),y                  ; DE7B= B1 D8       1X
                jsr LDE98                    ; DE7D= 20 98 DE     .^
                lda ($DA),y                  ; DE80= B1 DA       1Z
                jsr LDE98                    ; DE82= 20 98 DE     .^
                lda ($DC),y                  ; DE85= B1 DC       1\
                jsr LDE98                    ; DE87= 20 98 DE     .^
                lda ($E0),y                  ; DE8A= B1 E0       1`
                jsr LDE98                    ; DE8C= 20 98 DE     .^
LDE8F:
                lda $DF                      ; DE8F= A5 DF       %_
LDE91:
                sta $0328,y                  ; DE91= 99 28 03    .(.
                dey                          ; DE94= 88          .
                bpl LDE5F                    ; DE95= 10 C8       .H
                rts                          ; DE97= 60          `

LDE98:
                eor $0358                    ; DE98= 4D 58 03    MX.
                jsr LDEB5                    ; DE9B= 20 B5 DE     5^
                and #$03                     ; DE9E= 29 03       ).
                bra LDEAE                    ; DEA0= 80 0C       ..

LDEA2:
                eor $0358                    ; DEA2= 4D 58 03    MX.
                jsr LDEBA                    ; DEA5= 20 BA DE     :^
                and #$0F                     ; DEA8= 29 0F       ).
                asl $DF                      ; DEAA= 06 DF       ._
                asl $DF                      ; DEAC= 06 DF       ._
LDEAE:
                asl $DF                      ; DEAE= 06 DF       ._
                asl $DF                      ; DEB0= 06 DF       ._
                tsb $DF                      ; DEB2= 04 DF       ._
                rts                          ; DEB4= 60          `

LDEB5:
                sta $DE                      ; DEB5= 85 DE       .^
                jsr LDEBE                    ; DEB7= 20 BE DE     >^
LDEBA:
                sta $DE                      ; DEBA= 85 DE       .^
                lsr a                        ; DEBC= 4A          J
                lsr a                        ; DEBD= 4A          J
LDEBE:
                lsr a                        ; DEBE= 4A          J
                lsr a                        ; DEBF= 4A          J
                ora $DE                      ; DEC0= 05 DE       .^
LDEC2:
                rts                          ; DEC2= 60          `

LDEC3:
                jsr LD1A8                    ; DEC3= 20 A8 D1     (Q
                bne LDEC2                    ; DEC6= D0 FA       Pz
LDEC8:
                lda $0302,x                  ; DEC8= BD 02 03    =..
LDECB:
                eor #$FF                     ; DECB= 49 FF       I.
                tay                          ; DECD= A8          (
                and #$07                     ; DECE= 29 07       ).
                sta $DA                      ; DED0= 85 DA       .Z
                tya                          ; DED2= 98          .
                and #$F8                     ; DED3= 29 F8       )x
                lsr a                        ; DED5= 4A          J
                sta ZMEMG+1                      ; DED6= 85 D7       .W
                lsr a                        ; DED8= 4A          J
                lsr a                        ; DED9= 4A          J
                adc ZMEMG+1                      ; DEDA= 65 D7       eW
                lsr a                        ; DEDC= 4A          J
                sta ZMEMG+1                      ; DEDD= 85 D7       .W
                lda #$00                     ; DEDF= A9 00       ).
                ror a                        ; DEE1= 6A          j
                ldy $0356                    ; DEE2= AC 56 03    ,V.
                beq LDEEA                    ; DEE5= F0 03       p.
                lsr ZMEMG+1                      ; DEE7= 46 D7       FW
                ror a                        ; DEE9= 6A          j
LDEEA:
                ora $DA                      ; DEEA= 05 DA       .Z
                adc $0350                    ; DEEC= 6D 50 03    mP.
                sta $031A                    ; DEEF= 8D 1A 03    ...
                lda ZMEMG+1                      ; DEF2= A5 D7       %W
                adc $0351                    ; DEF4= 6D 51 03    mQ.
                sta ZMEMG+1                      ; DEF7= 85 D7       .W
                lda $0301,x                  ; DEF9= BD 01 03    =..
                sta ZMEMG+0                      ; DEFC= 85 D6       .V
                lda $0300,x                  ; DEFE= BD 00 03    =..
LDF01:
                and $0361                    ; DF01= 2D 61 03    -a.
LDF04:
                adc $0361                    ; DF04= 6D 61 03    ma.
                tay                          ; DF07= A8          (
LDF08:
                lda LE12E,y                  ; DF08= B9 2E E1    9.a
                sta ZMASK                      ; DF0B= 85 D1       .Q
                lda $0300,x                  ; DF0D= BD 00 03    =..
LDF10:
                ldy $0361                    ; DF10= AC 61 03    ,a.
                cpy #$03                     ; DF13= C0 03       @.
                beq LDF1C                    ; DF15= F0 05       p.
                bcs LDF1F                    ; DF17= B0 06       0.
                asl a                        ; DF19= 0A          .
                rol ZMEMG+0                      ; DF1A= 26 D6       &V
LDF1C:
                asl a                        ; DF1C= 0A          .
                rol ZMEMG+0                      ; DF1D= 26 D6       &V
LDF1F:
                and #$F8                     ; DF1F= 29 F8       )x
                clc                          ; DF21= 18          .
                adc $031A                    ; DF22= 6D 1A 03    m..
                sta $031A                    ; DF25= 8D 1A 03    ...
                lda ZMEMG+0                      ; DF28= A5 D6       %V
                adc ZMEMG+1                      ; DF2A= 65 D7       eW
                bpl LDF32                    ; DF2C= 10 04       ..
                sec                          ; DF2E= 38          8
                sbc $0354                    ; DF2F= ED 54 03    mT.
LDF32:
                sta ZMEMG+1                      ; DF32= 85 D7       .W
                stz ZMEMG+0                      ; DF34= 64 D6       dV
                ldx $DA                      ; DF36= A6 DA       &Z
                jsr LDA7C                    ; DF38= 20 7C DA     |Z
                ldy $031A                    ; DF3B= AC 1A 03    ,..
LDF3E:
                lda #$00                     ; DF3E= A9 00       ).
                rts                          ; DF40= 60          `

LDF41:
                jsr LDEC8                    ; DF41= 20 C8 DE     H^
                phx                          ; DF44= DA          Z
                ldx #$00                     ; DF45= A2 00       ".
                lda $035A                    ; DF47= AD 5A 03    -Z.
                cmp #$04                     ; DF4A= C9 04       I.
                bcs LDF59                    ; DF4C= B0 0B       0.
                ldx $036A                    ; DF4E= AE 6A 03    .j.
                lda $0359                    ; DF51= AD 59 03    -Y.
                beq LDF59                    ; DF54= F0 03       p.
                ldx $036B                    ; DF56= AE 6B 03    .k.
LDF59:
                stx $0369                    ; DF59= 8E 69 03    .i.
                plx                          ; DF5C= FA          z
                rts                          ; DF5D= 60          `

LDF5E:
                lda #$20                     ; DF5E= A9 20       )
                bit STATE                      ; DF60= 24 D0       $P
                bvc LDF3E                    ; DF62= 50 DA       PZ
                bne LDF3E                    ; DF64= D0 D8       PX
                jsr LDDF8                    ; DF66= 20 F8 DD     x]
                beq LDF77                    ; DF69= F0 0C       p.
                pha                          ; DF6B= 48          H
                jsr LDFD5                    ; DF6C= 20 D5 DF     U_
                bne LDF76                    ; DF6F= D0 05       P.
                lda #$09                     ; DF71= A9 09       ).
                jsr LDFBC                    ; DF73= 20 BC DF     <_
LDF76:
                pla                          ; DF76= 68          h
LDF77:
                rts                          ; DF77= 60          `

LDF78:
                pha                          ; DF78= 48          H
                jsr LDFD5                    ; DF79= 20 D5 DF     U_
                bne LDF76                    ; DF7C= D0 F8       Px
                bvs LDF96                    ; DF7E= 70 16       p.
                lda $035F                    ; DF80= AD 5F 03    -_.
                and #$DF                     ; DF83= 29 DF       )_
                jsr hideCursor               ; DF85= 20 53 CF     SO
                ldx #VDUVariables.textCursorXPosition
                ldy #VDUVariables.editCursorXPosition
                jsr copyTwoBytesWithinVDUVariables                    ; DF8C= 20 0C C9     .I
                jsr LC105                    ; DF8F= 20 05 C1     .A
                lda #$02                     ; DF92= A9 02       ).
                tsb STATE                      ; DF94= 04 D0       .P
LDF96:
                pla                          ; DF96= 68          h
                and #$7F                     ; DF97= 29 7F       ).
                sta $DA                      ; DF99= 85 DA       .Z
                cmp #$0A                     ; DF9B= C9 0A       I.
                bcs LDFAD                    ; DF9D= B0 0E       0.
                lda $0366                    ; DF9F= AD 66 03    -f.
                lsr a                        ; DFA2= 4A          J
                and #$05                     ; DFA3= 29 05       ).
                bit #$04                     ; DFA5= 89 04       ..
                beq LDFBA                    ; DFA7= F0 11       p.
                eor #$07                     ; DFA9= 49 07       I.
                bra LDFBA                    ; DFAB= 80 0D       ..

LDFAD:
                lda $0366                    ; DFAD= AD 66 03    -f.
                lsr a                        ; DFB0= 4A          J
                lsr a                        ; DFB1= 4A          J
                and #$03                     ; DFB2= 29 03       ).
                bit #$02                     ; DFB4= 89 02       ..
                beq LDFBA                    ; DFB6= F0 02       p.
                eor #$01                     ; DFB8= 49 01       I.
LDFBA:
                eor $DA                      ; DFBA= 45 DA       EZ
LDFBC:
                tay                          ; DFBC= A8          (
                lda #$40                     ; DFBD= A9 40       )@
                trb STATE                      ; DFBF= 14 D0       .P
                tya                          ; DFC1= 98          .
LDFC2:
                ldx $036C                    ; DFC2= AE 6C 03    .l.
LDFC5:
                phx                          ; DFC5= DA          Z
LDFC6:
                lsr $036C                    ; DFC6= 4E 6C 03    Nl.
LDFC9:
                jsr outputToVDU
LDFCC:
                pla                          ; DFCC= 68          h
LDFCD:
                sta $036C                    ; DFCD= 8D 6C 03    .l.
                lda #$40                     ; DFD0= A9 40       )@
                tsb STATE                      ; DFD2= 04 D0       .P
LDFD4:
                rts                          ; DFD4= 60          `

LDFD5:
                ldx $026A                    ; DFD5= AE 6A 02    .j.
LDFD8:
                bne LDFDE                    ; DFD8= D0 04       P.
LDFDA:
                lda #$A0                     ; DFDA= A9 A0       )
LDFDC:
                bit STATE                      ; DFDC= 24 D0       $P
LDFDE:
                rts                          ; DFDE= 60          `

LDFDF:
                ldx #$8E                     ; DFDF= A2 8E       ".  ; select VIEW+ANDY
                jsr selectROMX                    ; DFE1= 20 81 E5     .e
                jsr XBEBE                    ; DFE4= 20 BE BE     >>
                bra LDFF1                    ; DFE7= 80 08       ..

LDFE9:
                ldx #$8E                     ; DFE9= A2 8E       ".
                jsr selectROMX                    ; DFEB= 20 81 E5     .e
                jsr XBA00                    ; DFEE= 20 00 BA     .:
LDFF1:
                jmp selectTerminalROMAndANDY                    ; DFF1= 4C 7F E5    L.e

LDFF4:
                ldx #$8E                     ; DFF4= A2 8E       ".
                jsr selectROMX                    ; DFF6= 20 81 E5     .e
                jsr XBA67                    ; DFF9= 20 67 BA     g:
                bra LDFF1                    ; DFFC= 80 F3       .s

                .text 0,0,13
                .text "Acorn MOS",0,7
                .byte 0,0,0,0   ;space for "xxK"
                
                php                          ; E010= 08          .
;ORA &000D        :\ E011= 0D 0D 00    ...
                .byte $0D
                .byte $0D
LE013:
                .byte $00
                ; ORA ($22),y                ; E014= 11 22       ."
                ; EQUB $33                   ; E016= 33          3
                ; EQUB $44                   ; E017= 44          D
                ; EOR $66,x                  ; E018= 55 66       Uf
                ; EQUB $77                   ; E01A= 77          w
                ; DEY                        ; E01B= 88          .
                ; STA LBBAA,y                ; E01C= 99 AA BB    .*;
                ; CPY LEEDD                  ; E01F= CC DD EE    L]n
                ; EQUB $FF                   ; E022= FF          .
                .byte $11
                .byte $22
                .byte $33
                .byte $44
                .byte $55
                .byte $66
                .byte $77
                .byte $88
                .byte $99
                .byte $AA
                .byte $BB
                .byte $CC
                .byte $DD
                .byte $EE
                .byte $FF
LE023:
                ; BRK                        ; E023= 00          .
                ; EOR $AA,x                  ; E024= 55 AA       U*
                ; EQUB $FF                   ; E026= FF          .
                .byte $00
                .byte $55
                .byte $AA
                .byte $FF

; VDU control code dispatch tables
; ================================
;

; each routine is (address, number of additional VDU bytes)
_:=[(vdu0EntryPoint,0)] ; VDU0
_..=[(vdu1EntryPoint,1)] ; VDU1
_..=[(vdu2EntryPoint,0)] ; VDU2
_..=[(vdu3EntryPoint,0)] ; VDU3
_..=[(vdu4EntryPoint,0)] ; VDU4
_..=[(vdu5EntryPoint,0)] ; VDU5
_..=[(vdu6EntryPoint,0)] ; VDU6
_..=[(vdu7EntryPoint,0)] ; VDU7
_..=[(vdu8EntryPoint,0)] ; VDU8
_..=[(vdu9EntryPoint,0)] ; VDU9
_..=[(vdu10EntryPoint,0)] ; VDU10
_..=[(vdu11EntryPoint,0)] ; VDU11
_..=[(vdu12EntryPoint,0)] ; VDU12
_..=[(vdu13EntryPoint,0)] ; VDU13
_..=[(vdu14EntryPoint,0)] ; VDU14
_..=[(vdu15EntryPoint,0)] ; VDU15
_..=[(vdu16EntryPoint,0)] ; VDU16
_..=[(vdu17EntryPoint,1)] ; VDU17
_..=[(vdu18EntryPoint,2)] ; VDU18
_..=[(vdu19EntryPoint,5)] ; VDU19
_..=[(vdu20EntryPoint,0)] ; VDU20
_..=[(vdu21EntryPoint,0)] ; VDU21
_..=[(vdu22EntryPoint,1)] ; VDU22
_..=[(vdu23EntryPoint,9)] ; VDU23
_..=[(vdu24EntryPoint,8)] ; VDU24
_..=[(vdu25EntryPoint,5)] ; VDU25
_..=[(vdu26EntryPoint,0)] ; VDU26
_..=[(vdu27EntryPoint,0)] ; VDU27
_..=[(vdu28EntryPoint,4)] ; VDU28
_..=[(vdu29EntryPoint,4)] ; VDU29
_..=[(vdu30EntryPoint,0)] ; VDU30
_..=[(vdu31EntryPoint,2)] ; VDU31
_..=[(LCE2D,0)] ; ???
vdu_routines=_
                
; LSB of routine address
LE027:
                .for i=0,i<len(vdu_routines),i+=1
                .byte <vdu_routines[i][0]
                .next

; If bit 7 set: MSB of routine address
;
; If bit 7 clear:
;
; Top 4 bits are bits 8-11 of routine address (bits 12-15 are %1010,
; so address is $C0xx to $C7xx)
;
; Bottom 4 bits are ORed with $f0 and stored in $26a - -ve bytes left
; in VDU queue.
LE048:
                .for i=0,i<len(vdu_routines),i+=1
                .if vdu_routines[i][1]==0
                .byte >vdu_routines[i][0]
                .else
                .cerror vdu_routines[i][0]<$c000 || vdu_routines[i][0]>$c7ff,format("illegal VDU routine address for VDU %d: $%04x",i,vdu_routines[i][0])
                .cerror vdu_routines[i][1]<0 || vdu_routines[i][1]>15,format("illegal VDU parameter count for VDU %d: %d",i,vdu_routines[i][1])
                .byte (16-vdu_routines[i][1])|(((>vdu_routines[i][0])&$0f)<<4)
                .endif
                .next

;-------------------------------------------------------------------------
;
; entry:
;
; C=0
;
; A = vdu 23 code
;
; VDU queue = the full 9 bytes of the VDU 23
; 
vdu23EntryPointTable:
                .word vdu23_0_EntryPoint
                .word vdu23_1_EntryPoint
                .word vdu23_2_EntryPoint
                .word vdu23_3_EntryPoint
                .word vdu23_4_EntryPoint
                .word vdu23_5_EntryPoint
                .word vdu23_6_EntryPoint
                .word vdu23_7_EntryPoint
                .word LD069                  ; E079= 69 D0        i.
LE07B:
                .word LD10F                  ; E07B= 0F D1        ..
                .word LD110                  ; E07D= 10 D1        ..
                .word LCF6D                  ; E07F= 6D CF        m.
                .word LCF96                  ; E081= 96 CF        ..
                .word LCF96                  ; E083= 96 CF        ..
                .word LCF96                  ; E085= 96 CF        ..
                .word LCF96                  ; E087= 96 CF        ..
                .word LD11E                  ; E089= 1E D1        ..
                .word LDB4A                  ; E08B= 4A DB        J.
                .word LDC6C                  ; E08D= 6C DC
                .word terminal.L9BF7         ; E08F= F7 9B
                .word LDC75                  ; E091= 75 DC       u\
                .word LC448                  ; E093= 48 C4
                .word LDC6C                  ; E095= 6C DC
                .word terminal.L9BA3         ; E097= A3 9B
                .word LDC75                  ; E099= 75 DC       u\
                .word terminal.L9CF9         ; E09B= F9 9C
                .word terminal.L9CF9         ; E09D= F9 9C
                .word terminal.L99A4         ; E09F= A4 99
                .word terminal.L9944         ; E0A1= 44 99
                .word terminal.L9999         ; E0A3= 99 99
                .word terminal.L9935         ; E0A5= 35 99       5.
                .word terminal.L9923         ; E0A7= 23 99
                .word LDFDF                  ; E0A9= DF DF
                .word LDFE9                  ; E0AB= E9 DF       i_
                .word LDFF4                  ; E0AD= F4 DF

; Times 40 lookup table, high bytes
multiplyBy40TableHigh:
                .for i=0,i<25,i+=1
                .byte >i*40
                .next

; Times 40 lookup table, low bytes
multiplyBy40TableLow:
                .for i=0,i<25,i+=1
                .byte <i*40
                .next

; Times 640 lookup table, high bytes
multiplyBy640TableHigh:
                .for i=0,i<32,i+=1
                .byte >i*640
                .next

;-------------------------------------------------------------------------

modeMaxRow:
                .byte 31                     ;MODE 0 = 32 rows
                .byte 31                     ;MODE 1 = 32 rows
                .byte 31                     ;MODE 2 = 32 rows
                .byte 24                     ;MODE 3 = 25 rows
                .byte 31                     ;MODE 4 = 32 rows
                .byte 31                     ;MODE 5 = 32 rows
                .byte 24                     ;MODE 6 = 25 rows
                .byte 24                     ;MODE 7 = 25 rows
                
;-------------------------------------------------------------------------

modeMaxColumn:
                .byte 79                     ;MODE 0 = 80 columns
                .byte 39                     ;MODE 1 = 40 columns
                .byte 19                     ;MODE 2 = 20 columns
                .byte 79                     ;MODE 3 = 80 columns
                .byte 39                     ;MODE 4 = 40 columns
                .byte 19                     ;MODE 5 = 20 columns
                .byte 39                     ;MODE 6 = 40 columns
                .byte 39                     ;MODE 7 = 40 columns
                
;-------------------------------------------------------------------------

LE111:
;STZ LF4D8        :\ E111= 9C D8 F4    .Xt
                .byte $9C
                .byte $d8
                .byte $F4
;STZ LC488        :\ E114= 9C 88 C4    ..D
                .byte $9C
                .byte $88
                .byte $C4
                dey                          ; E117= 88          .
                .byte $4B                    ; E118= 4B          K
LE119:
                php                          ; E119= 08          .
                bpl LE13C                    ; E11A= 10 20       .
                php                          ; E11C= 08          .
                php                          ; E11D= 08          .
                bpl LE128                    ; E11E= 10 08       ..
LE120:
                ora ($FF,x)                  ; E120= 01 FF       ..
                eor $FF,x                    ; E122= 55 FF       U.
                .byte $77                    ; E124= 77          w
                .byte $33                    ; E125= 33          3
;ORA (&FF),y      :\ E126= 11 FF       ..
                .byte $11
LE127:
                .byte $FF
LE128:
                .byte $7F                    ; E128= 7F          .
                .byte $3F                    ; E129= 3F          ?
                .byte $1F                    ; E12A= 1F          .
                .byte $0F                    ; E12B= 0F          .
                .byte $07                    ; E12C= 07          .
                .byte $03                    ; E12D= 03          .
LE12E:
                ora ($AA,x)                  ; E12E= 01 AA       .*
LE130:
                eor $88,x                    ; E130= 55 88       U.
                .byte $44                    ; E132= 44          D
                .byte $22                    ; E133= 22          "
                ora ($80),y                  ; E134= 11 80       ..
                rti                          ; E136= 40          @

                jsr $0810                    ; E137= 20 10 08     ..
                tsb $02                      ; E13A= 04 02       ..
LE13C:
                ora ($03,x)                  ; E13C= 01 03       ..
                .byte $0F                    ; E13E= 0F          .
                ora ($01,x)                  ; E13F= 01 01       ..
                .byte $03                    ; E141= 03          .
;ORA (&00,x)      :\ E142= 01 00       ..
                .byte $01
LE143:
                .byte $00
LE144:
                .byte $FF                    ; E144= FF          .
LE145:
                brk                          ; E145= 00          .
                brk                          ; E146= 00          .
                .byte $FF                    ; E147= FF          .
LE148:
                .byte $FF                    ; E148= FF          .
                .byte $FF                    ; E149= FF          .
                .byte $FF                    ; E14A= FF          .
LE14B:
                brk                          ; E14B= 00          .
                brk                          ; E14C= 00          .
                .byte $FF                    ; E14D= FF          .
                brk                          ; E14E= 00          .
                .byte $0F                    ; E14F= 0F          .
;BEQ LE151        :\ E150= F0 FF       p.
                .byte $F0
                .byte $FF
                brk                          ; E152= 00          .
                .byte $03                    ; E153= 03          .
                tsb $300F                    ; E154= 0C 0F 30    ..0
                .byte $33                    ; E157= 33          3
                .byte $3c,$3f,$c0
                .byte $C3                    ; E15B= C3          C
;CPY LF0CF        :\ E15C= CC CF F0    LOp
                .byte $CC
                .byte $CF
                .byte $F0
                .byte $F3                    ; E15F= F3          s
                .byte $FC                    ; E160= FC          |
                .byte $FF                    ; E161= FF          .
LE162:
                .byte $07                    ; E162= 07          .
                .byte $03                    ; E163= 03          .
;ORA (&00,x)      :\ E164= 01 00       ..
                .byte $01
LE165:
                .byte $00
                .byte $07                    ; E166= 07          .
                .byte $03                    ; E167= 03          .
LE168:
                brk                          ; E168= 00          .
                brk                          ; E169= 00          .
                brk                          ; E16A= 00          .
                ora ($02,x)                  ; E16B= 01 02       ..
                .byte $02                    ; E16D= 02          .
                .byte $03                    ; E16E= 03          .
;TSB &0D          :\ E16F= 04 0D       ..
                .byte $04
LE170:
                .byte $0D
                ora $0D                      ; E171= 05 0D       ..
;ORA &04          :\ E173= 05 04       ..
                .byte $05
LE174:
                .byte $04
                tsb $0C                      ; E175= 04 0C       ..
;TSB &5004        :\ E177= 0C 04 50    ..P
                .byte $0C
                .byte $04
LE179:
                .byte $50
                rti                          ; E17A= 40          @

                plp                          ; E17B= 28          (
;JSR &3004        :\ E17C= 20 04 30     .0
                .byte $20
                .byte $04
LE17E:
                .byte $30
                rti                          ; E17F= 40          @

                cli                          ; E180= 58          X
                rts                          ; E181= 60          `

;JMP (&170B,x)    :\ E182= 7C 0B 17    |..
                .byte $7C
LE183:
                .byte $0B
                .byte $17

                .byte $23                    ; E185= 23          #
                .byte $2F                    ; E186= 2F          /
                .byte $3B                    ; E187= 3B          ;
LE188:
                .byte $7F                    ; E188= 7F          .
;BVC LE1ED        :\ E189= 50 62       Pb
                .byte $50
                .byte $62
                plp                          ; E18B= 28          (
                rol $00                      ; E18C= 26 00       &.
                jsr $0122                    ; E18E= 20 22 01     ".
                .byte $07                    ; E191= 07          .
                .byte $67                    ; E192= 67          g
                php                          ; E193= 08          .
                .byte $7F                    ; E194= 7F          .
;BVC LE1F9        :\ E195= 50 62       Pb
                .byte $50
                .byte $62
                plp                          ; E197= 28          (
                asl $1902,x                  ; E198= 1E 02 19    ...
                .byte $1B                    ; E19B= 1B          .
                ora ($09,x)                  ; E19C= 01 09       ..
                .byte $67                    ; E19E= 67          g
                ora #$3F                     ; E19F= 09 3F       .?
                plp                          ; E1A1= 28          (
                and ($24),y                  ; E1A2= 31 24       1$
                rol $00                      ; E1A4= 26 00       &.
                jsr $0122                    ; E1A6= 20 22 01     ".
                .byte $07                    ; E1A9= 07          .
                .byte $67                    ; E1AA= 67          g
                php                          ; E1AB= 08          .
                .byte $3F                    ; E1AC= 3F          ?
                plp                          ; E1AD= 28          (
                and ($24),y                  ; E1AE= 31 24       1$
                asl $1902,x                  ; E1B0= 1E 02 19    ...
                .byte $1B                    ; E1B3= 1B          .
                ora ($09,x)                  ; E1B4= 01 09       ..
                .byte $67                    ; E1B6= 67          g
                ora #$3F                     ; E1B7= 09 3F       .?
                plp                          ; E1B9= 28          (
                .byte $33                    ; E1BA= 33          3
                bit $1E                      ; E1BB= 24 1E       $.
                .byte $02                    ; E1BD= 02          .
                .byte $19,$1b,$93            ; E1BE= 19 1B 93    ...
                ora ($72)                    ; E1C1= 12 72       .r
LE1C3:
                .byte $13                    ; E1C3= 13          .
                tax                          ; E1C4= AA          *
                brk                          ; E1C5= 00          .
                tax                          ; E1C6= AA          *
                brk                          ; E1C7= 00          .
                tax                          ; E1C8= AA          *
                eor $AA,x                    ; E1C9= 55 AA       U*
                eor $FF,x                    ; E1CB= 55 FF       U.
                eor $FF,x                    ; E1CD= 55 FF       U.
                eor $11,x                    ; E1CF= 55 11       U.
                .byte $22                    ; E1D1= 22          "
                .byte $44                    ; E1D2= 44          D
                dey                          ; E1D3= 88          .
                lda $0F                      ; E1D4= A5 0F       %.
                lda $0F                      ; E1D6= A5 0F       %.
                lda $5A                      ; E1D8= A5 5A       %Z
                lda $5A                      ; E1DA= A5 5A       %Z
                .byte $f0,$5a                ; E1DC= F0 5A       pZ
                .byte $f0,$5a                ; E1DE= F0 5A       pZ
                sbc $FA,x                    ; E1E0= F5 FA       uz
                sbc $FA,x                    ; E1E2= F5 FA       uz
                .byte $0B                    ; E1E4= 0B          .
                .byte $07                    ; E1E5= 07          .
                .byte $0B                    ; E1E6= 0B          .
                .byte $07                    ; E1E7= 07          .
                .byte $23                    ; E1E8= 23          #
                .byte $13                    ; E1E9= 13          .
                .byte $23                    ; E1EA= 23          #
                .byte $13                    ; E1EB= 13          .
                asl $0E0D                    ; E1EC= 0E 0D 0E    ...
                ora $2F1F                    ; E1EF= 0D 1F 2F    ../
                .byte $1F                    ; E1F2= 1F          .
                .byte $2F                    ; E1F3= 2F          /
;CPY LCC00        :\ E1F4= CC 00 CC    L.L
                .byte $CC
                .byte $00
                .byte $CC
                brk                          ; E1F7= 00          .
                .byte $cc,$33,$cc            ; E1F8= CC 33 CC    L3L
                .byte $33                    ; E1FB= 33          3
                .byte $FF                    ; E1FC= FF          .
                .byte $33                    ; E1FD= 33          3
                .byte $FF                    ; E1FE= FF          .
                .byte $33                    ; E1FF= 33          3
                .byte $03                    ; E200= 03          .
;TSB LC030        :\ E201= 0C 30 C0    .0@
                .byte $0C
                .byte $30
                .byte $C0
LE204:
                ora ($01,x)                  ; E204= 01 01       ..
                .byte $03                    ; E206= 03          .
                .byte $03                    ; E207= 03          .
                .byte $02                    ; E208= 02          .
                brk                          ; E209= 00          .
                .byte $02                    ; E20A= 02          .
                brk                          ; E20B= 00          .
scrollRoutinesTable:
                .word LC95F     ; E20C= 5F C9        _.
                .word LC96B     ; E20E= 6B C9        k.
                .word LC95F     ; E210= 5F C9        _.
                .word LC96B     ; E212= 6B C9        k.
                .word LC99D     ; E214= 9D C9        ..
                .word LC99D     ; E216= 9D C9        ..
                .word LC9A4     ; E218= A4 C9        ..
                .word LC9A4     ; E21A= A4 C9        ..
                .word LC9C3     ; E21C= C3 C9        ..
                .word LCA2D     ; E21E= 2D CA        -.
                .word LC9C3     ; E220= C3 C9        ..
                .word LCA2D     ; E222= 2D CA        -.
                .word LCAF1     ; E224= F1 CA        ..
                .word LCAF1     ; E226= F1 CA        ..
                .word LCAFA     ; E228= FA CA        ..
                .word LCAFA     ; E22A= FA CA

;-------------------------------------------------------------------------
;
; Get address of soft character definition.
;
; entry:
;
; A = character (32-255)
;
; exit:
;
; ($de) = address
; 
getSoftCharacterDefinitionAddress:
                asl a                        ;a bcdefgh0
                rol a                        ;b cdefgh0a
                rol a                        ;c defgh0ab
                tay
                and #$03                     ;c 000000ab
                rol a                        ;0 00000abc
                adc #(>andy.softCharacterDefinitions)-1
                sta $DF
                tya                          ;0 defgh0ab
                and #$F8                     ;0 defgh000
                sta $DE                      ;
                rts                          ;

osbyteA5:
                jsr withMOSROM               ; E23D= 20 AB F3     +s
                bit STATE                      ; E240= 24 D0       $P
                bvc LE252                    ; E242= 50 0E       P.
                jsr LE2AE                    ; E244= 20 AE E2     .b
                jsr LE252                    ; E247= 20 52 E2     Rb
                phx                          ; E24A= DA          Z
                phy                          ; E24B= 5A          Z
                jsr LE2AE                    ; E24C= 20 AE E2     .b
                ply                          ; E24F= 7A          z
                plx                          ; E250= FA          z
                rts                          ; E251= 60          `

LE252:
                jsr LE26D                    ; E252= 20 6D E2     mb
                bit $036C                    ; E255= 2C 6C 03    ,l.
                bpl LE25B                    ; E258= 10 01       ..
                inx                          ; E25A= E8          h
LE25B:
                rts                          ; E25B= 60          `

LE25C:
                sec                          ; E25C= 38          8
                lda $030A                    ; E25D= AD 0A 03    -..
                sbc $0308                    ; E260= ED 08 03    m..
                pha                          ; E263= 48          H
                lda #$00                     ; E264= A9 00       ).
                tay                          ; E266= A8          (
                bra LE279                    ; E267= 80 10       ..

osbyte86: ;E269:
                bit STATE
                bvc osbyteA5       ;branch taken if not cursor editing
LE26D:
                lda #$02                     ; E26D= A9 02       ).
                ldy #$10                     ; E26F= A0 10        .
                ldx #$00                     ; E271= A2 00       ".
                jsr LE28A                    ; E273= 20 8A E2     .b
                pha                          ; E276= 48          H
                lda #$04                     ; E277= A9 04       ).
LE279:
                iny                          ; E279= C8          H
                ldx #$03                     ; E27A= A2 03       ".
                jsr LE28A                    ; E27C= 20 8A E2     .b
                tax                          ; E27F= AA          *
                tay                          ; E280= A8          (
                lda #vduv.cursorFlags.swapAxes
                bit vduv.cursorFlags
                beq plxThenRTS
                ply                          ; E288= 7A          z
                rts                          ; E289= 60          `

LE28A:
                sec                          ; E28A= 38          8
                bit $0366                    ; E28B= 2C 66 03    ,f.
                beq LE29B                    ; E28E= F0 0B       p.
                txa                          ; E290= 8A          .
                eor #$02                     ; E291= 49 02       I.
                tax                          ; E293= AA          *
                lda $0308,x                  ; E294= BD 08 03    =..
                sbc $0308,y                  ; E297= F9 08 03    y..
                rts                          ; E29A= 60          `

LE29B:
                lda $0308,y                  ; E29B= B9 08 03    9..
                sbc $0308,x                  ; E29E= FD 08 03    }..
                rts                          ; E2A1= 60          `

;-------------------------------------------------------------------------
;
; Get default bounds for current mode.
;
; exit:
;
; X = max column (19, 39 or 79)
;
; Y = max row (24 or 31)
;
; preserves: A, C
; 
getDefaultBoundsForCurrentScreenMODE:
                ldx vduv.currentScreenMODE
                ldy modeMaxColumn,x          ;Y = max column
                phy                          ;save max column
                ldy modeMaxRow,x             ;Y = max row
plxThenRTS:
                plx                          ;X = max column
                rts

;-------------------------------------------------------------------------

LE2AE:
                ldx #VDUVariables.textCursorXPosition
                ldy #VDUVariables.editCursorXPosition
exchangeTwoVDUBytes:
                lda #$02
                bra exchangeVDUVariables

LE2B6:
                ldx #VDUVariables.graphicsCursorPixelsX
LE2B8:
                ldy #VDUVariables.oldGraphicsCursorPixelsX
exchangeFourVDUBytes:
                lda #$04                     ; E2BA= A9 04       ).
exchangeVDUVariables:
                pha                          ;save count remaining
                lda vduv,x
                pha
                lda vduv,y
                sta vduv,x
                pla
                sta vduv,y
                inx
                iny
                pla
                dec a
                bne exchangeVDUVariables
                rts                          ; E2D1= 60          `

;-------------------------------------------------------------------------
;
; Test current VDU4/VDU5 status.
;
; exit:
;
; Z=1 if VDU5 mode
testVDU5State:
                lda STATE
                and #STATE.isVDU5
                rts

;-------------------------------------------------------------------------

; Default vector table
; ====================
defaultVectorTable: .block
                .word LFBED ; USERV=$200
                .word LE565 ; BRKV=$202
                .word LE5FF ; IRQ1V=$204
                .word LE60C ; IRQ2V=$206
                .word oscliEntryPoint ; CLIV=$208
                .word osbyteEntryPoint ; BYTEV=$20a
                .word oswordEntryPoint ; WORDV=$20c
                .word oswrchEntryPoint ; WRCHV=$20e
                .word osrdchEntryPoint ; RDCHV=$210
fsVectors: .block
                .word E_FILEV ; FILEV=$212
                .word E_ARGSV ; ARGSV=$214
                .word E_BGETV ; BGETV=$216
                .word E_BPUTV ; BPUTV=$218
                .word E_GBPBV ; GBPBV=$21a
                .word E_FINDV ; FINDV=$21c
                .word E_FSCV ; FSCV=$21e
end:
                .bend
                .word rtsFFAA ; EVENTV=$220
                .word rtsFFAA ; UPTV=$222
                .word rtsFFAA ; NETV=$224
                .word rtsFFAA ; VDUV=$226 
                .word LF74C ; KEYV=$228 
                .word LEA43 ; INSV=$22a 
                .word LE9F8 ; REMV=$22c 
                .word LE97B ; CNPV=$22e 
                .word rtsFFAA ; IND1V=$230
                .word rtsFFAA ; IND2V=$232
                .word rtsFFAA ; IND3V=$234
end:
                .bend
                
                bcc LE310                    ; E30D= 90 01       ..
                .byte $9F                    ; E30F= 9F          .
LE310:
                ora $02A1                    ; E310= 0D A1 02    .!.
                .byte $82                    ; E313= 82          .
                sed                          ; E314= F8          x
                brk                          ; E315= 00          .
                .byte $03                    ; E316= 03          .
                brk                          ; E317= 00          .
                brk                          ; E318= 00          .
                .byte $FF                    ; E319= FF          .
                brk                          ; E31A= 00          .
                brk                          ; E31B= 00          .
                ora ($00,x)                  ; E31C= 01 00       ..
                brk                          ; E31E= 00          .
                brk                          ; E31F= 00          .
                brk                          ; E320= 00          .
                brk                          ; E321= 00          .
                .byte $FF                    ; E322= FF          .
                tsb $04                      ; E323= 04 04       ..
                brk                          ; E325= 00          .
                .byte $FF                    ; E326= FF          .
                .byte $42                    ; E327= 42          B
                ora $1919,y                  ; E328= 19 19 19    ...
                and ($08)                    ; E32B= 32 08       2.
                brk                          ; E32D= 00          .
                brk                          ; E32E= 00          .
                brk                          ; E32F= 00          .
                brk                          ; E330= 00          .
                jsr $0009                    ; E331= 20 09 00     ..
                brk                          ; E334= 00          .
                brk                          ; E335= 00          .
                brk                          ; E336= 00          .
                brk                          ; E337= 00          .
                brk                          ; E338= 00          .
                brk                          ; E339= 00          .
                .byte $03                    ; E33A= 03          .
                bcc LE3A1                    ; E33B= 90 64       .d
                asl $81                      ; E33D= 06 81       ..
                brk                          ; E33F= 00          .
                brk                          ; E340= 00          .
                brk                          ; E341= 00          .
                ora #$1B                     ; E342= 09 1B       ..
                ora ($D0,x)                  ; E344= 01 D0       .P
                cpx #$F0                     ; E346= E0 F0       `p
                ora ($80,x)                  ; E348= 01 80       ..
                bcc LE34C                    ; E34A= 90 00       ..
LE34C:
                brk                          ; E34C= 00          .
                brk                          ; E34D= 00          .
LE34E:
                .byte $FF                    ; E34E= FF          .
                .byte $FF                    ; E34F= FF          .
                .byte $FF                    ; E350= FF          .
                brk                          ; E351= 00          .
                brk                          ; E352= 00          .
                brk                          ; E353= 00          .
                brk                          ; E354= 00          .
                bmi LE358                    ; E355= 30 01       0.
                brk                          ; E357= 00          .
LE358:
                brk                          ; E358= 00          .
                stz $05                      ; E359= 64 05       d.
                .byte $FF                    ; E35B= FF          .
                ora ($0A,x)                  ; E35C= 01 0A       ..
                brk                          ; E35E= 00          .
                brk                          ; E35F= 00          .
                brk                          ; E360= 00          .
                brk                          ; E361= 00          .
                brk                          ; E362= 00          .
                .byte $FF                    ; E363= FF          .

; STARTUP
; =======
resetEntryPoint:                ;e364
                lda #$40        ; $40 = RTI
                sta nmiEntryPoint ; make NMI routine a no-op
                sei
                lda #$53              ;
                sta LFE8E             ; ???
                jsr selectTerminalROM ; Page in ROM 15 and continue
                jmp terminal.reset

; Check if a coprocessor is attached to the Tube
; ----------------------------------------------
LE375:
                ldx #$01                     ;
                stx tube.status1
                lda tube.status1                   ;
                eor #$01
                ldx #$81                     ;
                stx tube.status1
                and tube.status1                   ; Cy=0 if no Tube, Cy=1 if Tube
                ror a
                rts

LE389:
                phy                          ; E389= 5A          Z
                phx                          ; E38A= DA          Z
                jsr LE9BB                    ; E38B= 20 BB E9     ;i
                sta $FC                      ; E38E= 85 FC       .|
                jsr selectTerminalROM                    ; E390= 20 90 E5     .e
                jsr terminal.L98B7           ; E393= 20 B7 98     7.
                tya                          ; E396= 98          .
                and $FC                      ; E397= 25 FC       %|
                cmp #$01                     ; E399= C9 01       I.
                plx                          ; E39B= FA          z
                ply                          ; E39C= 7A          z
                jmp selectROMX                    ; E39D= 4C 81 E5    L.e

LE3A0:
                txa                          ; E3A0= 8A          .
LE3A1:
                tay                          ; E3A1= A8          (
                jsr LE389                    ; E3A2= 20 89 E3     .c
                bcc LE3DB                    ; E3A5= 90 34       .4
                jsr isROMValid                    ; E3A7= 20 F7 E3     wc
                bcc LE3DB                    ; E3AA= 90 2F       ./
                ldx $F4                      ; E3AC= A6 F4       &t
                ldy $F4                      ; E3AE= A4 F4       $t
LE3B0:
                iny                          ; E3B0= C8          H
                cpy #$10                     ; E3B1= C0 10       @.
                bcs LE3DF                    ; E3B3= B0 2A       0*
                jsr LE389                    ; E3B5= 20 89 E3     .c
                bcc LE3B0                    ; E3B8= 90 F6       .v
                tya                          ; E3BA= 98          .
                eor #$FF                     ; E3BB= 49 FF       I.
                sta $FA                      ; E3BD= 85 FA       .z
                lda #$7F                     ; E3BF= A9 7F       ).
                sta $FB                      ; E3C1= 85 FB       .{
LE3C3:
                sty ROMSEL                   ; E3C3= 8C 30 FE    .0~
                lda ($FA),y                  ; E3C6= B1 FA       1z
                stx ROMSEL                   ; E3C8= 8E 30 FE    .0~
                cmp ($FA),y                  ; E3CB= D1 FA       Qz
                bne LE3B0                    ; E3CD= D0 E1       Pa
                inc $FA                      ; E3CF= E6 FA       fz
                bne LE3C3                    ; E3D1= D0 F0       Pp
                inc $FB                      ; E3D3= E6 FB       f{
                lda $FB                      ; E3D5= A5 FB       %{
                cmp #$84                     ; E3D7= C9 84       I.
                bcc LE3C3                    ; E3D9= 90 E8       .h
LE3DB:
                ldx $F4                      ; E3DB= A6 F4       &t
                bra LE3EC                    ; E3DD= 80 0D       ..

LE3DF:
                lda $8006                    ; E3DF= AD 06 80    -..
                sta $02A1,x                  ; E3E2= 9D A1 02    .!.
                and #$8F                     ; E3E5= 29 8F       ).
                bne LE3EC                    ; E3E7= D0 03       P.
                stx $024B                    ; E3E9= 8E 4B 02    .K.
LE3EC:
                inx                          ; E3EC= E8          h
                cpx #$10                     ; E3ED= E0 10       `.
                bcc LE3A0                    ; E3EF= 90 AF       ./
                jsr selectTerminalROM        ; E3F1= 20 90 E5     .e
                jmp terminal.L8224           ; E3F4= 4C 24 82    L$.

;-------------------------------------------------------------------------
;
; Checks a ROM is valid - i.e., has a valid-looking copyright string.
;
; Entry:
;
; X = ROM to check
;
; Exit:
;
; C=0 if ROM invalid; C=1 if ROM valid

isROMValid: .proc ;e3f7
                jsr selectROMX
                ldx #$03
                ldy $8007       ; fetch ROM copyright offset pointer
                clc             ; assume no match
-
                lda $8000,y     ; fetch possible ROM copyright char
                eor LE513,x     ; Z=1 if it matches "\x0(C)"
                bne +           ; branch taken if no match
                iny             ; next copyright byte
                dex             ; count 4 chars
                bpl -
                sec             ; C=1 means a match
+
                rts
                .pend

;-------------------------------------------------------------------------

; End of STARTUP code
; ===================
LE40E:
                sec                      ; Call Break Intercept Vector
                jsr osbyte247EntryPoint
                ldx #romServiceCallInformReset
                jsr makeROMServiceCall
                ldy $0256                    ; Get Exec handle, skip past if closed
                beq LE424
                stz $0256                    ; Clear Exec handle
                lda #$00                     ; Close Exec channel
                jsr OSFIND
LE424:
                sec                          ;
                ror hazel.currentFS
                lda $028D                    ; Soft Break
                beq LE431
                sec                          ;
                ror hazel.libFS
LE431:
                jsr LEE64                    ; Set default ROMFS/TAPEFS settings
                jsr osbyte76                    ; Test Shift and Ctrl keys
                lsr a                        ; Move SHIFT status from b7 to b3
                lsr a
                lsr a
                lsr a
                eor $028F                    ; Toggle with OSBYTE 255 boot status
                and #$08
                tay
                ldx hazel.currentFSROM
                lda $028D                    ; Soft Break, use current filing system
                beq LE454
                jsr selectTerminalROM                    ; E449= 20 90 E5     .e
LE44C:
                phy                          ; E44C= 5A          Z
                jsr terminal.L8EA4           ; E44D= 20 A4 8E     $.
                and #$0F                     ; E450= 29 0F       ).
                ply                          ; E452= 7A          z
                tax                          ; E453= AA          *
LE454:
                bit $02A1,x                  ; E454= 3C A1 02    <!.
                bpl LE478                    ; E457= 10 1F       ..
                jsr selectROMX                    ; E459= 20 81 E5     .e
                cpx #$0F                     ; E45C= E0 0F       `.
                bne LE46C                    ; E45E= D0 0C       P.
                jsr osbyte7A
                inx                          ; E463= E8          h
                beq LE47F                    ; E464= F0 19       p.
                cpx #$63                     ; E466= E0 63       `c
                beq LE47F                    ; E468= F0 15       p.
                bra LE478                    ; E46A= 80 0C       ..

LE46C:
                lda #romServiceCallAutoBoot  ; Filing System selection
                jsr $8003
                tax                          ; E471= AA          *
                jsr selectTerminalROM                    ; E472= 20 90 E5     .e
                txa                          ; E475= 8A          .
                beq LE4A3                    ; E476= F0 2B       p+
LE478:
                ldx #romServiceCallAutoBoot
                jsr makeROMServiceCall
                beq LE4A3                    ; E47D= F0 24       p$
LE47F:
                tya                          ; E47F= 98          .
                bne LE499                    ; E480= D0 17       P.
                lda #$8D                     ; E482= A9 8D       ).
                jsr osbyte8C8D                    ; E484= 20 9A ED     .m
                ldx #<starRunBOOT                     ; E487= A2 08       ".
                ldy #>starRunBOOT                     ; E489= A0 F4        t
                dec $0267                    ; E48B= CE 67 02    Ng.
                jsr OSCLI                   ; E48E= 20 F7 FF     w.
                inc $0267                    ; E491= EE 67 02    ng.
                bra LE4A3                    ; E494= 80 0D       ..

LE496:
                inc $0267                    ; E496= EE 67 02    ng.
LE499:
                sec                          ; E499= 38          8
                ror hazel.currentFS
                lda #$00                     ; E49D= A9 00       ).
                tax                          ; E49F= AA          *
                jsr LEDC2                    ; E4A0= 20 C2 ED     Bm
LE4A3:
                lda #$05                     ;
                ldx $0285                    ; *FX5,<current printer>
                jsr osbyteEntryPoint
                lda $028D                    ; If not Soft Break, select default language
                bne LE4BB
                ldx $028C                    ; Get current language ROM
                cpx #$10                     ; <16, normal ROM number, use it
                bcc LE4C2
                cpx #$1F                     ; 16+UTILS ROM, re-enter Supervisor or Tube CLI
                beq LE509
LE4BB:
                jsr selectTerminalROM     ; Page in ROM 15 - UTILS ROM
                jsr terminal.L8E9C        ; Read configured LANG
                tax
LE4C2:
                clc
osbyte8E: ;LE4C3:
                bit $02A1,x                  ; b6=0, error Not a language
                bvc LE516
                php                          ; E4C8= 08          .
                bcc LE4E1                    ; E4C9= 90 16       ..
                jsr selectROMX                    ; E4CB= 20 81 E5     .e
                lda $8006                    ; E4CE= AD 06 80    -..
                and #$0D                     ; E4D1= 29 0D       ).
                beq LE4DA                    ; E4D3= F0 05       p.
                bit $027A                    ; E4D5= 2C 7A 02    ,z.
                bpl LE52E                    ; E4D8= 10 54       .T
LE4DA:
                phx                          ; E4DA= DA          Z
                ldx #romServiceCallLanguageChange
                jsr makeROMServiceCall
                plx                          ; E4E0= FA          z
LE4E1:
                stx $028C                    ; E4E1= 8E 8C 02    ...
                jsr selectROMX                    ; E4E4= 20 81 E5     .e
                lda #$80                     ; E4E7= A9 80       ).
                ldy #$08                     ; E4E9= A0 08        .
                jsr LE7A3                    ; E4EB= 20 A3 E7     #g
                sty $FD                      ; E4EE= 84 FD       .}
                jsr OSNEWL                   ; E4F0= 20 E7 FF     g.
                jsr OSNEWL                   ; E4F3= 20 E7 FF     g.
                plp                          ; E4F6= 28          (
                lda #$01                     ; E4F7= A9 01       ).
                bit $027A                    ; E4F9= 2C 7A 02    ,z.
                bmi LE510                    ; E4FC= 30 12       0.
                lda $8006                    ; E4FE= AD 06 80    -..
                and #$0D                     ; E501= 29 0D       ).
                bne LE52E                    ; E503= D0 29       P)
                inc a                        ; E505= 1A          .
                jmp $8000                    ; E506= 4C 00 80    L..

LE509:
                lda #$00                     ; E509= A9 00       ).
                bit $027A                    ; E50B= 2C 7A 02    ,z.
                bpl LE579                    ; E50E= 10 69       .i
LE510:
                jmp terminal.tubeHost.copyLanguage

LE513:
                .text ")C("
LE516:
                brk                          ; E516= 00          .
                .text 0,"This is not a language"
LE52E:
                brk
                .text 0,"I cannot run this code",0
osbyteA4:
                ldx #$03                     ; E547= A2 03       ".
                ldy #$07                     ; E549= A0 07        .
                lda ($F0),y                  ; E54B= B1 F0       1p
                tay                          ; E54D= A8          (
LE54E:
                lda ($F0),y                  ; E54E= B1 F0       1p
                cmp LE513,x                  ; E550= DD 13 E5    ].e
                bne LE564                    ; E553= D0 0F       P.
                iny                          ; E555= C8          H
                dex                          ; E556= CA          J
                bpl LE54E                    ; E557= 10 F5       .u
                ldy #$06                     ; E559= A0 06        .
                lda ($F0),y                  ; E55B= B1 F0       1p
                asl a                        ; E55D= 0A          .
                bpl LE516                    ; E55E= 10 B6       .6
                and #$1A                     ; E560= 29 1A       ).
                bne LE52E                    ; E562= D0 CA       PJ
LE564:
                rts                          ; E564= 60          `

LE565:
                ldy #$00                     ; E565= A0 00        .
                jsr LE7A7                    ; E567= 20 A7 E7     'g
                jsr OSNEWL                   ; E56A= 20 E7 FF     g.
                lda $0267                    ; E56D= AD 67 02    -g.
                ror a                        ; E570= 6A          j
                bcs LE579                    ; E571= B0 06       0.
                jsr OSNEWL                   ; E573= 20 E7 FF     g.
                jmp LE496                    ; E576= 4C 96 E4    L.d

LE579:
                jsr selectTerminalROM        ; E579= 20 90 E5     .e
                jmp terminal.L8661           ; E57C= 4C 61 86    La.

;-------------------------------------------------------------------------
;
; Select paged ROM bank 15 - TERMINAL - with ANDY paged in,
;
; Preserves A/Y
selectTerminalROMAndANDY:   ;e57f
                ldx #$8F
                ; fall through into selectROMX

;-------------------------------------------------------------------------
;-------------------------------------------------------------------------
;
; Select paged ROM bank.
;
; Entry:
;
; X = bank to select.
;
; Preserves A/X/Y/P
selectROMX:   ;e581
                stx $F4
                stx ROMSEL
                rts

;-------------------------------------------------------------------------
;
LE587:
                phy                          ; E587= 5A          Z
                jsr isROMValid                    ; E588= 20 F7 E3     wc
                jsr selectTerminalROM                    ; E58B= 20 90 E5     .e
                ply                          ; E58E= 7A          z
                rts                          ; E58F= 60          `

;-------------------------------------------------------------------------
;
; Select paged ROM bank 15 - TERMINAL.
;
; Preserves X/Y
selectTerminalROM:            ;e590
                lda #$0F
                ; fall through into selectROMA
                
;-------------------------------------------------------------------------
;
; Select paged ROM bank.
;
; A = bank to select.
;
; Preserves A/X/Y/P
selectROMA:                   ;e592
                sta $F4         ;update ROMSEL copy
                sta ROMSEL
                rts

;-------------------------------------------------------------------------
;
; Select paged ROM bank 15 - TERMINAL - with ANDY paged in,
;
; Preserves A/X/Y

selectTerminalROMAndANDY2:
                phx
                jsr selectTerminalROMAndANDY
                plx
                rts

;-------------------------------------------------------------------------

irqEntryPoint:
                sta $FC                      ; E59E= 85 FC       .|
                pla                          ; E5A0= 68          h
                pha                          ; E5A1= 48          H
                and #$10                     ; E5A2= 29 10       ).
                bne LE5A9                    ; E5A4= D0 03       P.
                jmp (IRQ1V)                  ; E5A6= 6C 04 02    l..

LE5A9:
                phx                          ; E5A9= DA          Z
                tsx                          ; E5AA= BA          :
                lda $0103,x                  ; E5AB= BD 03 01    =..
                cld                          ; E5AE= D8          X
                sec                          ; E5AF= 38          8
                sbc #$01                     ; E5B0= E9 01       i.
                sta $FD                      ; E5B2= 85 FD       .}
                lda $0104,x                  ; E5B4= BD 04 01    =..
                sbc #$00                     ; E5B7= E9 00       i.
                sta $FE                      ; E5B9= 85 FE       .~
                lda $F4                      ; E5BB= A5 F4       %t
                sta $024A                    ; E5BD= 8D 4A 02    .J.
                stx $F0                      ; E5C0= 86 F0       .p
                ldx #romServiceCallBreakInstruction
                jsr makeROMServiceCall
                ldx $028C                    ; E5C7= AE 8C 02    ...
                jsr selectROMX                    ; E5CA= 20 81 E5     .e
                plx                          ; E5CD= FA          z
                lda $FC                      ; E5CE= A5 FC       %|
                cli                          ; E5D0= 58          X
                jmp (BRKV)                  ; E5D1= 6C 02 02    l..

LE5D4:
                sec                          ; E5D4= 38          8
                ror $024F                    ; E5D5= 6E 4F 02    nO.
                bit $0250                    ; E5D8= 2C 50 02    ,P.
                bpl LE5E4                    ; E5DB= 10 07       ..
                jsr LED27                    ; E5DD= 20 27 ED     'm
                ldx #$00                     ; E5E0= A2 00       ".
                bcs LE5E6                    ; E5E2= B0 02       0.
LE5E4:
                ldx #$40                     ; E5E4= A2 40       "@
LE5E6:
                jmp LE912                    ; E5E6= 4C 12 E9    L.i

LE5E9:
                ldy ACIA+1                    ; E5E9= AC 09 FE    ,.~
                and #$3A                     ; E5EC= 29 3A       ):
                bne LE628                    ; E5EE= D0 38       P8
                ldx $025C                    ; E5F0= AE 5C 02    .\.
                bne LE5FE                    ; E5F3= D0 09       P.
                inx                          ; E5F5= E8          h
                jsr osbyte99                    ; E5F6= 20 80 EA     .j
                jsr LED27                    ; E5F9= 20 27 ED     'm
                bcc LE5E4                    ; E5FC= 90 E6       .f
LE5FE:
                rts                          ; E5FE= 60          `

LE5FF:
                lda $FC                      ; E5FF= A5 FC       %|
                pha                          ; E601= 48          H
                phx                          ; E602= DA          Z
                phy                          ; E603= 5A          Z
                clv                          ; E604= B8          8
                jsr LE60F                    ; E605= 20 0F E6     .f
                ply                          ; E608= 7A          z
                plx                          ; E609= FA          z
                pla                          ; E60A= 68          h
                rti                          ; E60B= 40          @

LE60C:
                lda $FC                      ; E60C= A5 FC       %|
                rti                          ; E60E= 40          @

LE60F:
                lda ACIA+0                    ; E60F= AD 08 FE    -.~
                bvs LE616                    ; E612= 70 02       p.
                bpl LE672                    ; E614= 10 5C       .\
LE616:
                ldx $EA                      ; E616= A6 EA       &j
                dex                          ; E618= CA          J
                bmi LE64E                    ; E619= 30 33       03
                bvs LE64D                    ; E61B= 70 30       p0
                jsr withTerminalROM          ; E61D= 20 84 F3     .s
                jmp terminal.LA45D           ; E620= 4C 5D A4    L]$

LE623:
                ldy ACIA+1                    ; E623= AC 09 FE    ,.~
                rol a                        ; E626= 2A          *
                asl a                        ; E627= 0A          .
LE628:
                tax                          ; E628= AA          *
                tya                          ; E629= 98          .
                ldy #$07                     ; E62A= A0 07        .
                jmp eventEntryPoint                    ; E62C= 4C 28 EA    L(j

LE62F:
                ldx #$02                     ; E62F= A2 02       ".
                jsr osbyte91                    ; E631= 20 F4 E9     ti
                bcc LE646                    ; E634= 90 10       ..
                lda $0285                    ; E636= AD 85 02    -..
                cmp #$02                     ; E639= C9 02       I.
                bne LE5D4                    ; E63B= D0 97       P.
                inx                          ; E63D= E8          h
                jsr osbyte91                    ; E63E= 20 F4 E9     ti
                ror $02D1                    ; E641= 6E D1 02    nQ.
                bmi LE5D4                    ; E644= 30 8E       0.
LE646:
                sta ACIA+1                    ; E646= 8D 09 FE    ..~
                lda #$E7                     ; E649= A9 E7       )g
                sta $EA                      ; E64B= 85 EA       .j
LE64D:
                rts                          ; E64D= 60          `

LE64E:
                and $0278                    ; E64E= 2D 78 02    -x.
                lsr a                        ; E651= 4A          J
                bcc LE65B                    ; E652= 90 07       ..
                bvs LE65B                    ; E654= 70 05       p.
                ldy $0250                    ; E656= AC 50 02    ,P.
                bmi LE5E9                    ; E659= 30 8E       0.
LE65B:
                lsr a                        ; E65B= 4A          J
                ror a                        ; E65C= 6A          j
                bcs LE623                    ; E65D= B0 C4       0D
                bmi LE62F                    ; E65F= 30 CE       0N
                bvs LE64D                    ; E661= 70 EA       pj
LE663:
                ldx #romServiceCallUnrecognisedInterrupt
                jsr makeROMServiceCall
                beq LE64D                    ; E668= F0 E3       pc
                pla                          ; E66A= 68          h
                pla                          ; E66B= 68          h
                ply                          ; E66C= 7A          z
                plx                          ; E66D= FA          z
                pla                          ; E66E= 68          h
                jmp (IRQ2V)                  ; E66F= 6C 06 02    l..

LE672:
                lda systemVIA.ifr            ; E672= AD 4D FE    -M~
                bpl LE6B3                    ; E675= 10 3C       .<
                and $0279                    ; E677= 2D 79 02    -y.
                and systemVIA.ier            ; E67A= 2D 4E FE    -N~
                bit #$02                     ; E67D= 89 02       ..
                beq LE6D5                    ; E67F= F0 54       pT
                dec $0240                    ; E681= CE 40 02    N@.
                lda $EA                      ; E684= A5 EA       %j
                bpl LE68A                    ; E686= 10 02       ..
                inc $EA                      ; E688= E6 EA       fj
LE68A:
                lda $0251                    ; E68A= AD 51 02    -Q.
                beq LE6A9                    ; E68D= F0 1A       p.
                dec $0251                    ; E68F= CE 51 02    NQ.
                bne LE6A9                    ; E692= D0 15       P.
                ldx $0252                    ; E694= AE 52 02    .R.
                lda $0248                    ; E697= AD 48 02    -H.
                lsr a                        ; E69A= 4A          J
                bcc LE6A0                    ; E69B= 90 03       ..
                ldx $0253                    ; E69D= AE 53 02    .S.
LE6A0:
                rol a                        ; E6A0= 2A          *
                eor #$01                     ; E6A1= 49 01       I.
                jsr LF250                    ; E6A3= 20 50 F2     Pr
                stx $0251                    ; E6A6= 8E 51 02    .Q.
LE6A9:
                ldy #$04                     ; E6A9= A0 04        .
                jsr eventEntryPoint                    ; E6AB= 20 28 EA     (j
                lda #$02                     ; E6AE= A9 02       ).
                jmp LE78A                    ; E6B0= 4C 8A E7    L.g

LE6B3:
                lda userVIA.ifr              ; E6B3= AD 6D FE    -m~
                bpl LE663                    ; E6B6= 10 AB       .+
                and $0277                    ; E6B8= 2D 77 02    -w.
                and userVIA.ier              ; E6BB= 2D 6E FE    -n~
                ror a                        ; E6BE= 6A          j
                ror a                        ; E6BF= 6A          j
                bcc LE663                    ; E6C0= 90 A1       .!
                ldy $0285                    ; E6C2= AC 85 02    ,..
                dey                          ; E6C5= 88          .
                bne LE663                    ; E6C6= D0 9B       P.
                lda #$02                     ; E6C8= A9 02       ).
                sta userVIA.ifr              ; E6CA= 8D 6D FE    .m~
                sta userVIA.ier              ; E6CD= 8D 6E FE    .n~
                ldx #$03                     ; E6D0= A2 03       ".
                jmp LE8D5                    ; E6D2= 4C D5 E8    LUh

LE6D5:
                bit #$40                     ; E6D5= 89 40       .@
                beq LE74E                    ; E6D7= F0 75       pu
                lda #$40                     ; E6D9= A9 40       )@
                sta systemVIA.ifr            ; E6DB= 8D 4D FE    .M~
                lda $0283                    ; E6DE= AD 83 02    -..
                tax                          ; E6E1= AA          *
                eor #$0F                     ; E6E2= 49 0F       I.
                pha                          ; E6E4= 48          H
                tay                          ; E6E5= A8          (
                sec                          ; E6E6= 38          8
LE6E7:
                lda $0291,x                  ; E6E7= BD 91 02    =..
                adc #$00                     ; E6EA= 69 00       i.
                sta $0291,y                  ; E6EC= 99 91 02    ...
                dex                          ; E6EF= CA          J
                beq LE6F5                    ; E6F0= F0 03       p.
                dey                          ; E6F2= 88          .
                bne LE6E7                    ; E6F3= D0 F2       Pr
LE6F5:
                pla                          ; E6F5= 68          h
                sta $0283                    ; E6F6= 8D 83 02    ...
                ldx #$05                     ; E6F9= A2 05       ".
LE6FB:
                inc $029B,x                  ; E6FB= FE 9B 02    ~..
                bne LE708                    ; E6FE= D0 08       P.
                dex                          ; E700= CA          J
                bne LE6FB                    ; E701= D0 F8       Px
                ldy #$05                     ; E703= A0 05        .
                jsr eventEntryPoint                    ; E705= 20 28 EA     (j
LE708:
                lda $02B1                    ; E708= AD B1 02    -1.
                bne LE715                    ; E70B= D0 08       P.
                lda $02B2                    ; E70D= AD B2 02    -2.
                beq LE718                    ; E710= F0 06       p.
                dec $02B2                    ; E712= CE B2 02    N2.
LE715:
                dec $02B1                    ; E715= CE B1 02    N1.
LE718:
                bit $02CD                    ; E718= 2C CD 02    ,M.
                bpl LE728                    ; E71B= 10 0B       ..
                inc $02CD                    ; E71D= EE CD 02    nM.
                cli                          ; E720= 58          X
                jsr LF416                    ; E721= 20 16 F4     .t
                sei                          ; E724= 78          x
                dec $02CD                    ; E725= CE CD 02    NM.
LE728:
                bit LE34E                    ; E728= 2C 4E E3    ,Nc
                jsr LE60F                    ; E72B= 20 0F E6     .f
                lda $EC                      ; E72E= A5 EC       %l
                ora $ED                      ; E730= 05 ED       .m
                and $0242                    ; E732= 2D 42 02    -B.
                beq LE73B                    ; E735= F0 04       p.
                sec                          ; E737= 38          8
                jsr LF8FF                    ; E738= 20 FF F8     .x
LE73B:
                jsr LE933                    ; E73B= 20 33 E9     3i
                ldy $0243                    ; E73E= AC 43 02    ,C.
                beq LE748                    ; E741= F0 05       p.
                ldx #romServiceCallPollingInterrupt
                jsr makeROMServiceCall
LE748:
                bit HADC+0                   ; E748= 2C 18 FE    ,.~
                bvs LE752                    ; E74B= 70 05       p.
                rts                          ; E74D= 60          `

LE74E:
                bit #$10                     ; E74E= 89 10       ..
                beq LE78E                    ; E750= F0 3C       p<
LE752:
                ldx $024C                    ; E752= AE 4C 02    .L.
                beq LE788                    ; E755= F0 31       p1
                lda HADC+2                   ; E757= AD 1A FE    -.~
                sta $02B5,x                  ; E75A= 9D B5 02    .5.
                lda HADC+1                   ; E75D= AD 19 FE    -.~
                sta $02B9,x                  ; E760= 9D B9 02    .9.
                stx $02BE                    ; E763= 8E BE 02    .>.
                ldy #$03                     ; E766= A0 03        .
                jsr eventEntryPoint                    ; E768= 20 28 EA     (j
                dex                          ; E76B= CA          J
                bne LE771                    ; E76C= D0 03       P.
                ldx $024D                    ; E76E= AE 4D 02    .M.
LE771:
                cpx #$05                     ; E771= E0 05       `.
                bcc LE777                    ; E773= 90 02       ..
                ldx #$04                     ; E775= A2 04       ".
LE777:
                stx $024C                    ; E777= 8E 4C 02    .L.
                lda $024E                    ; E77A= AD 4E 02    -N.
                dec a                        ; E77D= 3A          :
                and #$08                     ; E77E= 29 08       ).
                clc                          ; E780= 18          .
                adc $024C                    ; E781= 6D 4C 02    mL.
                dec a                        ; E784= 3A          :
                sta HADC+0                   ; E785= 8D 18 FE    ..~
LE788:
                lda #$10                     ; E788= A9 10       ).
LE78A:
                sta systemVIA.ifr            ; E78A= 8D 4D FE    .M~
                rts                          ; E78D= 60          `

LE78E:
                lsr a                        ; E78E= 4A          J
                bcc LE799                    ; E78F= 90 08       ..
                clc                          ; E791= 18          .
                jsr LF8FF                    ; E792= 20 FF F8     .x
                lda #$01                     ; E795= A9 01       ).
                bra LE78A                    ; E797= 80 F1       .q

LE799:
                jmp LE663                    ; E799= 4C 63 E6    Lcf

osbyte11:                       ;e79c
                sty $02BE                    ; E79C= 8C BE 02    .>.
                bra LE771                    ; E79F= 80 D0       .P

LE7A1:
                lda #$E0                     ; E7A1= A9 E0       )`
LE7A3:
                sta $FE                      ; E7A3= 85 FE       .~
                stz $FD                      ; E7A5= 64 FD       d}
LE7A7:
                iny                          ; E7A7= C8          H
                lda ($FD),y                  ; E7A8= B1 FD       1}
                jsr OSASCI                   ; E7AA= 20 E3 FF     c.
                tax                          ; E7AD= AA          *
                bne LE7A7                    ; E7AE= D0 F7       Pw
                rts                          ; E7B0= 60          `

LE7B1:
                stx $02B1                    ; E7B1= 8E B1 02    .1.
                sty $02B2                    ; E7B4= 8C B2 02    .2.
                ror $E6                      ; E7B7= 66 E6       ff
                cli                          ; E7B9= 58          X
                bra LE7BE                    ; E7BA= 80 02       ..

osrdchEntryPoint:
                stz $E6                      ; E7BC= 64 E6       df
LE7BE:
                phx                          ; E7BE= DA          Z
                phy                          ; E7BF= 5A          Z
                ldy $0256                    ; E7C0= AC 56 02    ,V.
                beq LE7D7                    ; E7C3= F0 12       p.
                sec                          ; E7C5= 38          8
                ror $EB                      ; E7C6= 66 EB       fk
                jsr OSBGET                   ; E7C8= 20 D7 FF     W.
                stz $EB                      ; E7CB= 64 EB       dk
                bcc LE7F3                    ; E7CD= 90 24       .$
                lda #$00                     ; E7CF= A9 00       ).
                stz $0256                    ; E7D1= 9C 56 02    .V.
                jsr OSFIND                   ; E7D4= 20 CE FF     N.
LE7D7:
                lda $FF                      ; E7D7= A5 FF       %.
                asl a                        ; E7D9= 0A          .
                lda #$1B                     ; E7DA= A9 1B       ).
                bcs LE7F3                    ; E7DC= B0 15       0.
                ldx $0241                    ; E7DE= AE 41 02    .A.
                jsr LEAFD                    ; E7E1= 20 FD EA     }j
                bcc LE7F3                    ; E7E4= 90 0D       ..
                bit $E6                      ; E7E6= 24 E6       $f
                bpl LE7D7                    ; E7E8= 10 ED       .m
                lda $02B2                    ; E7EA= AD B2 02    -2.
                ora $02B1                    ; E7ED= 0D B1 02    .1.
                bne LE7D7                    ; E7F0= D0 E5       Pe
                dec a                        ; E7F2= 3A          :
LE7F3:
                ply                          ; E7F3= 7A          z
                plx                          ; E7F4= FA          z
                rts                          ; E7F5= 60          `

LE7F6:
                lda hazel.activeFS
                sta hazel.libFS
                rts                          ; E7FC= 60          `

LE7FD:
                sta TUBE+8                   ; E7FD= 8D E8 FE    .h~
LE800:
                bra LE800                    ; E800= 80 FE       .~

;-------------------------------------------------------------------------
;
; OSCLI
;
; MasRef D.4-1
;

oscliEntryPoint: .block
                jsr selectHAZEL
                stx stringInputBufferAddress+0
                sty stringInputBufferAddress+1
                ldy #$00
-
                lda (stringInputBufferAddress),y
                sta hazel.commandLine,y
emptyCommandLine=*+1                         ;arbitrary place that's
                                             ;just a 13 byte...
                cmp #$0D
                beq +     ;branch taken if end of command line reached
                iny
                bne -
                
                ; OSCLI is a no-op if the command line is too long.
                rts

+
                ldy #>hazel.commandLine      ; E818= A0 DC        \
                ldx #<hazel.commandLine      ; E81A= A2 00       ".
                jsr withTerminalROM          ; E81C= 20 84 F3     .s
                jmp terminal.oscli           ; E81F= 4C FF 84    L..
                .endblock

emptyCommandLine=oscliEntryPoint.emptyCommandLine
                
                ; OSWRCH
                ; ======
oswrchEntryPoint:
                pha                          ;S=[ch]
                phx                          ;S=[x; ch]
                phy                          ;S=[y; x; ch]
                pha                          ;S=[ch; y; x; ch]
                bit $0260                    ; E826= 2C 60 02    ,`.
                bpl LE833                    ; E829= 10 08       ..
                tay                          ; E82B= A8          (
                lda #$04                     ; E82C= A9 04       ).
                jsr LEB04                    ; E82E= 20 04 EB     .k
                bcs LE8A5                    ; E831= B0 72       0r
LE833:
                lda #$02                     ; E833= A9 02       ).
                bit $027C                    ; E835= 2C 7C 02    ,|.
                bne LE862                    ; E838= D0 28       P(
                pla                          ;restore char to print
                pha                          ;save it again
                tax                          ;X=char to print
                lda ACCCON                   ;
                pha                          ;S=[old ACCCON; ch; y; x; ch]
                lda #ACCCON.Y
                trb ACCCON                   ;MOS ROM at $c000
                lda $F4                      
                pha          ;S=[old ROMSEL; old ACCCON; ch; y; x; ch]
                lda #$8F
                sta $F4
                sta ROMSEL                   ;page in ANDY+Terminal
                txa                          ;A=char to print
                jsr outputToVDU
                pla                          ; E854= 68          h
                sta $F4                      ; E855= 85 F4       .t
                sta ROMSEL                   ; E857= 8D 30 FE    .0~
                pla                          ; E85A= 68          h
                and #$08                     ; E85B= 29 08       ).
                tsb ACCCON                    ; E85D= 0C 34 FE    .4~
                bcs LE869                    ; E860= B0 07       0.
LE862:
                lda #$08                     ; E862= A9 08       ).
                bit $027C                    ; E864= 2C 7C 02    ,|.
                beq LE86E                    ; E867= F0 05       p.
LE869:
                pla                          ; E869= 68          h
                pha                          ; E86A= 48          H
                jsr LE8AA                    ; E86B= 20 AA E8     *h
LE86E:
                lda $027C                    ; E86E= AD 7C 02    -|.
                ror a                        ; E871= 6A          j
                bcc LE88F                    ; E872= 90 1B       ..
                ldy $EA                      ; E874= A4 EA       $j
                dey                          ; E876= 88          .
                bpl LE88F                    ; E877= 10 16       ..
                pla                          ; E879= 68          h
                pha                          ; E87A= 48          H
                php                          ; E87B= 08          .
                sei                          ; E87C= 78          x
                ldx #$02                     ; E87D= A2 02       ".
                pha                          ; E87F= 48          H
                jsr osbyte98                    ; E880= 20 EF E9     oi
                bcc LE888                    ; E883= 90 03       ..
                jsr LE908                    ; E885= 20 08 E9     .i
LE888:
                pla                          ; E888= 68          h
                ldx #$02                     ; E889= A2 02       ".
                jsr LE9A3                    ; E88B= 20 A3 E9     #i
                plp                          ; E88E= 28          (
LE88F:
                lda #$10                     ; E88F= A9 10       ).
                bit $027C                    ; E891= 2C 7C 02    ,|.
                bne LE8A5                    ; E894= D0 0F       P.
                ldy $0257                    ; E896= AC 57 02    ,W.
                beq LE8A5                    ; E899= F0 0A       p.
                pla                          ; E89B= 68          h
                pha                          ; E89C= 48          H
                sec                          ; E89D= 38          8
                ror $EB                      ; E89E= 66 EB       fk
                jsr OSBPUT                   ; E8A0= 20 D4 FF     T.
                lsr $EB                      ; E8A3= 46 EB       Fk
LE8A5:
                pla                          ; E8A5= 68          h
                ply                          ; E8A6= 7A          z
                plx                          ; E8A7= FA          z
                pla                          ; E8A8= 68          h
                rts                          ; E8A9= 60          `

LE8AA:
                bit $027C                    ; E8AA= 2C 7C 02    ,|.
                bvs LE8D4                    ; E8AD= 70 25       p%
                cmp $0286                    ; E8AF= CD 86 02    M..
                bne LE8B9                    ; E8B2= D0 05       P.
                bit $0246                    ; E8B4= 2C 46 02    ,F.
                bpl LE8D4                    ; E8B7= 10 1B       ..
LE8B9:
                php                          ; E8B9= 08          .
                sei                          ; E8BA= 78          x
                tax                          ; E8BB= AA          *
                lda #$04                     ; E8BC= A9 04       ).
                bit $027C                    ; E8BE= 2C 7C 02    ,|.
                bne LE8D3                    ; E8C1= D0 10       P.
                txa                          ; E8C3= 8A          .
                ldx #$03                     ; E8C4= A2 03       ".
                jsr LE9A3                    ; E8C6= 20 A3 E9     #i
                bcs LE8D3                    ; E8C9= B0 08       0.
                bit $02D1                    ; E8CB= 2C D1 02    ,Q.
                bpl LE8D3                    ; E8CE= 10 03       ..
                jsr LE8D5                    ; E8D0= 20 D5 E8     Uh
LE8D3:
                plp                          ; E8D3= 28          (
LE8D4:
                rts                          ; E8D4= 60          `

LE8D5:
                lda $0285                    ; E8D5= AD 85 02    -..
                beq LE959                    ; E8D8= F0 7F       p.
                dec a                        ; E8DA= 3A          :
                bne LE8FD                    ; E8DB= D0 20       P
                jsr osbyte91                    ; E8DD= 20 F4 E9     ti
                ror $02D1                    ; E8E0= 6E D1 02    nQ.
                bmi LE928                    ; E8E3= 30 43       0C
                ldy #$82                     ; E8E5= A0 82        .
                sty userVIA.ier              ; E8E7= 8C 6E FE    .n~
                sta userVIA.ora              ; E8EA= 8D 61 FE    .a~
                lda userVIA.pcr              ; E8ED= AD 6C FE    -l~
                and #$F1                     ; E8F0= 29 F1       )q
                ora #$0C                     ; E8F2= 09 0C       ..
                sta userVIA.pcr              ; E8F4= 8D 6C FE    .l~
                ora #$0E                     ; E8F7= 09 0E       ..
                sta userVIA.pcr              ; E8F9= 8D 6C FE    .l~
                rts                          ; E8FC= 60          `

LE8FD:
                dec a                        ; E8FD= 3A          :
                bne LE929                    ; E8FE= D0 29       P)
                ldy $EA                      ; E900= A4 EA       $j
                dey                          ; E902= 88          .
                bpl LE959                    ; E903= 10 54       .T
                lsr $02D1                    ; E905= 4E D1 02    NQ.
LE908:
                lsr $024F                    ; E908= 4E 4F 02    NO.
LE90B:
                jsr LED27                    ; E90B= 20 27 ED     'm
                bcc LE928                    ; E90E= 90 18       ..
                ldx #$20                     ; E910= A2 20       "
LE912:
                ldy #$9F                     ; E912= A0 9F        .
osbyte9C:
                php                          ; E914= 08          .
                sei                          ; E915= 78          x
                tya                          ; E916= 98          .
                stx $FA                      ; E917= 86 FA       .z
                and $0250                    ; E919= 2D 50 02    -P.
                eor $FA                      ; E91C= 45 FA       Ez
                ldx $0250                    ; E91E= AE 50 02    .P.
LE921:
                sta $0250                    ; E921= 8D 50 02    .P.
                sta ACIA+0                    ; E924= 8D 08 FE    ..~
                plp                          ; E927= 28          (
LE928:
                rts                          ; E928= 60          `

LE929:
                clc                          ; E929= 18          .
                lda #$01                     ; E92A= A9 01       ).
                jsr LE93A                    ; E92C= 20 3A E9     :i
osbyte7B:
                ror $02D1                    ; E92F= 6E D1 02    nQ.
LE932:
                rts                          ; E932= 60          `

LE933:
                bit $02D1                    ; E933= 2C D1 02    ,Q.
                bmi LE932                    ; E936= 30 FA       0z
                lda #$00                     ; E938= A9 00       ).
LE93A:
                ldx #$03                     ; E93A= A2 03       ".
LE93C:
                ldy $0285                    ; E93C= AC 85 02    ,..
                jsr LEB04                    ; E93F= 20 04 EB     .k
                jmp (UPTV)                  ; E942= 6C 22 02    l".

osbyte0F:                       ;e945
                bne LE956                    ; E945= D0 0F       P.
LE947:
                ldx #$08                     ; E947= A2 08       ".
LE949:
                cli                          ; E949= 58          X
                sei                          ; E94A= 78          x
                jsr osbyte15
                dex                          ; E94E= CA          J
                bpl LE949                    ; E94F= 10 F8       .x
osbyte15:                                    ;e951
                cpx #$09                     ; E951= E0 09       `.
                bcc LE959                    ; E953= 90 04       ..
                rts                          ; E955= 60          `

LE956:
                ldx $0241                    ; E956= AE 41 02    .A.
LE959:
                clc                          ; E959= 18          .
LE95A:
                pha                          ; E95A= 48          H
                php                          ; E95B= 08          .
                sei                          ; E95C= 78          x
                bcs LE967                    ; E95D= B0 08       0.
                txa                          ; E95F= 8A          .
                and #$04                     ; E960= 29 04       ).
                beq LE967                    ; E962= F0 03       p.
                jsr LF55D                    ; E964= 20 5D F5     ]u
LE967:
                sec                          ; E967= 38          8
                ror $02CE,x                  ; E968= 7E CE 02    ~N.
                cpx #$02                     ; E96B= E0 02       `.
                bcs LE975                    ; E96D= B0 06       0.
                stz $0268                    ; E96F= 9C 68 02    .h.
                stz $026A                    ; E972= 9C 6A 02    .j.
LE975:
                jsr LED21                    ; E975= 20 21 ED     !m
                plp                          ; E978= 28          (
                pla                          ; E979= 68          h
                rts                          ; E97A= 60          `

LE97B:
                bvc LE984                    ; E97B= 50 07       P.
LE97D:
                lda $02D7,x                  ; E97D= BD D7 02    =W.
                sta $02E0,x                  ; E980= 9D E0 02    .`.
                rts                          ; E983= 60          `

LE984:
                php                          ; E984= 08          .
                sei                          ; E985= 78          x
                php                          ; E986= 08          .
                sec                          ; E987= 38          8
                lda $02E0,x                  ; E988= BD E0 02    =`.
                sbc $02D7,x                  ; E98B= FD D7 02    }W.
                bcs LE994                    ; E98E= B0 04       0.
                sec                          ; E990= 38          8
                sbc LE9DB,x                  ; E991= FD DB E9    }[i
LE994:
                plp                          ; E994= 28          (
                bcc LE99D                    ; E995= 90 06       ..
                clc                          ; E997= 18          .
                adc LE9DB,x                  ; E998= 7D DB E9    }[i
                eor #$FF                     ; E99B= 49 FF       I.
LE99D:
                ldy #$00                     ; E99D= A0 00        .
                tax                          ; E99F= AA          *
                plp                          ; E9A0= 28          (
LE9A1:
                rts                          ; E9A1= 60          `

LE9A2:
                cli                          ; E9A2= 58          X
LE9A3:
                sei                          ; E9A3= 78          x
LE9A4:
                jsr LEA40                    ; E9A4= 20 40 EA     @j
                bcc LE9A1                    ; E9A7= 90 F8       .x
                jsr LF241                    ; E9A9= 20 41 F2     Ar
                pha                          ; E9AC= 48          H
                jsr LF735                    ; E9AD= 20 35 F7     5w
                asl a                        ; E9B0= 0A          .
                pla                          ; E9B1= 68          h
                bcc LE9A2                    ; E9B2= 90 EE       .n
                rts                          ; E9B4= 60          `

;-------------------------------------------------------------------------
;
; OSBYTE $77
;
; D.2-33
;
osbyte77:                       ;e9b5
                jsr withTerminalROM          ; E9B5= 20 84 F3     .s
                jmp terminal.L9423           ; E9B8= 4C 23 94    L#.

LE9BB:
                lda #$00                     ; E9BB= A9 00       ).
                sec                          ; E9BD= 38          8
                ldx #$14                     ; E9BE= A2 14       ".
LE9C0:
                rol a                        ; E9C0= 2A          *
                bne LE9C5                    ; E9C1= D0 02       P.
                inx                          ; E9C3= E8          h
                rol a                        ; E9C4= 2A          *
LE9C5:
                dey                          ; E9C5= 88          .
                bpl LE9C0                    ; E9C6= 10 F8       .x
                rts                          ; E9C8= 60          `

LE9C9:
                .byte $03                    ; E9C9= 03          .
                asl a                        ; E9CA= 0A          .
                php                          ; E9CB= 08          .
                .byte $07                    ; E9CC= 07          .
                .byte $07                    ; E9CD= 07          .
                .byte $07                    ; E9CE= 07          .
                .byte $07                    ; E9CF= 07          .
                .byte $07                    ; E9D0= 07          .
;ORA #&00         :\ E9D1= 09 00       ..
                .byte $09
LE9D2:
                .byte $00
                brk                          ; E9D3= 00          .
                cpy #$C0                     ; E9D4= C0 C0       @@
                bvc LEA38                    ; E9D6= 50 60       P`
                bvs LE95A                    ; E9D8= 70 80       p.
                brk                          ; E9DA= 00          .
LE9DB:
                cpx #$00                     ; E9DB= E0 00       `.
                rti                          ; E9DD= 40          @

                cpy #$F0                     ; E9DE= C0 F0       @p
;BEQ LE9D2        :\ E9E0= F0 F0       pp
                .byte $F0
                .byte $F0
;BEQ LE9A4        :\ E9E2= F0 C0       p@
                .byte $F0
                .byte $C0
LE9E4:
                lda LE9D2,x                  ; E9E4= BD D2 E9    =Ri
                sta $FA                      ; E9E7= 85 FA       .z
                lda LE9C9,x                  ; E9E9= BD C9 E9    =Ii
                sta $FB                      ; E9EC= 85 FB       .{
                rts                          ; E9EE= 60          `

osbyte98:
                bit LE34E                    ; E9EF= 2C 4E E3    ,Nc
                bra LE9F5                    ; E9F2= 80 01       ..

osbyte91:
                clv                          ; E9F4= B8          8
LE9F5:
                jmp (REMV)                  ; E9F5= 6C 2C 02    l,.

LE9F8:
                php                          ; E9F8= 08          .
                sei                          ; E9F9= 78          x
                lda $02D7,x                  ; E9FA= BD D7 02    =W.
                cmp $02E0,x                  ; E9FD= DD E0 02    ]`.
                beq LEA6E                    ; EA00= F0 6C       pl
                tay                          ; EA02= A8          (
                jsr LE9E4                    ; EA03= 20 E4 E9     di
                lda ($FA),y                  ; EA06= B1 FA       1z
                bvs LEA24                    ; EA08= 70 1A       p.
                pha                          ; EA0A= 48          H
                iny                          ; EA0B= C8          H
                tya                          ; EA0C= 98          .
                bne LEA12                    ; EA0D= D0 03       P.
                lda LE9DB,x                  ; EA0F= BD DB E9    =[i
LEA12:
                sta $02D7,x                  ; EA12= 9D D7 02    .W.
                cpx #$02                     ; EA15= E0 02       `.
                bcc LEA23                    ; EA17= 90 0A       ..
                cmp $02E0,x                  ; EA19= DD E0 02    ]`.
                bne LEA23                    ; EA1C= D0 05       P.
                ldy #$00                     ; EA1E= A0 00        .
                jsr eventEntryPoint                    ; EA20= 20 28 EA     (j
LEA23:
                pla                          ; EA23= 68          h
LEA24:
                tay                          ; EA24= A8          (
LEA25:
                plp                          ; EA25= 28          (
                clc                          ; EA26= 18          .
                rts                          ; EA27= 60          `

eventEntryPoint:
                php                          ; EA28= 08          .
                sei                          ; EA29= 78          x
                pha                          ; EA2A= 48          H
                lda $02BF,y                  ; EA2B= B9 BF 02    9?.
                beq LEA6D                    ; EA2E= F0 3D       p=
                tya                          ; EA30= 98          .
                ply                          ; EA31= 7A          z
                phy                          ; EA32= 5A          Z
                jsr LF8BF                    ; EA33= 20 BF F8     ?x
                bra LEA23                    ; EA36= 80 EB       .k

LEA38:
                tya                          ; EA38= 98          .
                ldy #$02                     ; EA39= A0 02        .
                jsr eventEntryPoint                    ; EA3B= 20 28 EA     (j
                tay                          ; EA3E= A8          (
osbyte8A: ;LEA3F:
                tya                          ; EA3F= 98          .
LEA40:
                jmp (INSV)                  ; EA40= 6C 2A 02    l*.

LEA43:
                php                          ; EA43= 08          .
                sei                          ; EA44= 78          x
                pha                          ; EA45= 48          H
                lda $02E0,x                  ; EA46= BD E0 02    =`.
                inc a                        ; EA49= 1A          .
                bne LEA4F                    ; EA4A= D0 03       P.
                lda LE9DB,x                  ; EA4C= BD DB E9    =[i
LEA4F:
                cmp $02D7,x                  ; EA4F= DD D7 02    ]W.
                beq LEA62                    ; EA52= F0 0E       p.
                ldy $02E0,x                  ; EA54= BC E0 02    <`.
                sta $02E0,x                  ; EA57= 9D E0 02    .`.
                jsr LE9E4                    ; EA5A= 20 E4 E9     di
                pla                          ; EA5D= 68          h
                sta ($FA),y                  ; EA5E= 91 FA       .z
                bra LEA25                    ; EA60= 80 C3       .C

LEA62:
                pla                          ; EA62= 68          h
                cpx #$02                     ; EA63= E0 02       `.
                bcs LEA6E                    ; EA65= B0 07       0.
                ldy #$01                     ; EA67= A0 01        .
                jsr eventEntryPoint                    ; EA69= 20 28 EA     (j
                pha                          ; EA6C= 48          H
LEA6D:
                pla                          ; EA6D= 68          h
LEA6E:
                plp                          ; EA6E= 28          (
                sec                          ; EA6F= 38          8
                rts                          ; EA70= 60          `

;-------------------------------------------------------------------------
;
; Check if character is a letter - A-Z or a-z.
;
; Entry:
;
; A = character to test
;
; Exit:
;
; C=0 if character is letter, C=1 otherwise
;
; Preserves: A/X/Y
isLetter: .proc                 ;EA71
                pha
                and #$DF        ;convert to upper case
                cmp #'Z'+1
                bcs +           ;branch taken with C=1 if past Z
                eor #$FF
                cmp #-'A'       ;C=1 if past A
+
                pla
                rts
                .pend

;-------------------------------------------------------------------------

LEA7E:
                ldx #$00                     ; EA7E= A2 00       ".
osbyte99:
                txa                          ; EA80= 8A          .
                and $0245                    ; EA81= 2D 45 02    -E.
                bne osbyte8A                    ; EA84= D0 B9       P9
                tya                          ; EA86= 98          .
                eor $026C                    ; EA87= 4D 6C 02    Ml.
                ora $0275                    ; EA8A= 0D 75 02    .u.
                bne LEA38                    ; EA8D= D0 A9       P)
                lda $0258                    ; EA8F= AD 58 02    -X.
                ror a                        ; EA92= 6A          j
                tya                          ; EA93= 98          .
                bcs LEAA0                    ; EA94= B0 0A       0.
                ldy #$06                     ; EA96= A0 06        .
                jsr eventEntryPoint                    ; EA98= 20 28 EA     (j
                bcc LEAA0                    ; EA9B= 90 03       ..
                jsr osbyte7D                    ; EA9D= 20 57 EC     Wl
LEAA0:
                clc                          ; EAA0= 18          .
                rts                          ; EAA1= 60          `

LEAA2:
                ror a                        ; EAA2= 6A          j
                pla                          ; EAA3= 68          h
                bcs LEABD                    ; EAA4= B0 17       0.
LEAA6:
                tya                          ; EAA6= 98          .
                and #$0F                     ; EAA7= 29 0F       ).
                pha                          ; EAA9= 48          H
                tya                          ; EAAA= 98          .
                lsr a                        ; EAAB= 4A          J
                lsr a                        ; EAAC= 4A          J
                lsr a                        ; EAAD= 4A          J
                lsr a                        ; EAAE= 4A          J
                eor #$04                     ; EAAF= 49 04       I.
                tay                          ; EAB1= A8          (
                lda $0265,y                  ; EAB2= B9 65 02    9e.
                lsr a                        ; EAB5= 4A          J
                beq LEB32                    ; EAB6= F0 7A       pz
                pla                          ; EAB8= 68          h
                clc                          ; EAB9= 18          .
                adc $0265,y                  ; EABA= 79 65 02    ye.
LEABD:
                clc                          ; EABD= 18          .
                rts                          ; EABE= 60          `

LEABF:
                jsr vdu7EntryPoint           ; EABF= 20 B6 EF     6o
                plx                          ; EAC2= FA          z
LEAC3:
                jsr osbyte91                    ; EAC3= 20 F4 E9     ti
                bcs LEB28                    ; EAC6= B0 60       0`
                pha                          ; EAC8= 48          H
                cpx #$01                     ; EAC9= E0 01       `.
                bne LEAD3                    ; EACB= D0 06       P.
                jsr LE90B                    ; EACD= 20 0B E9     .i
                sec                          ; EAD0= 38          8
                ldx #$01                     ; EAD1= A2 01       ".
LEAD3:
                pla                          ; EAD3= 68          h
                bcc LEADB                    ; EAD4= 90 05       ..
                ldy $0245                    ; EAD6= AC 45 02    ,E.
                bne LEB27                    ; EAD9= D0 4C       PL
LEADB:
                tay                          ; EADB= A8          (
                bpl LEB27                    ; EADC= 10 49       .I
                and #$0F                     ; EADE= 29 0F       ).
                cmp #$0B                     ; EAE0= C9 0B       I.
                bcc LEAA6                    ; EAE2= 90 C2       .B
                adc #$7B                     ; EAE4= 69 7B       i{
                pha                          ; EAE6= 48          H
                lda $027D                    ; EAE7= AD 7D 02    -}.
                bne LEAA2                    ; EAEA= D0 B6       P6
                lda $027C                    ; EAEC= AD 7C 02    -|.
                ror a                        ; EAEF= 6A          j
                ror a                        ; EAF0= 6A          j
                pla                          ; EAF1= 68          h
                bcs LEAC3                    ; EAF2= B0 CF       0O
                cmp #$87                     ; EAF4= C9 87       I.
                beq LEB29                    ; EAF6= F0 31       p1
                phx                          ; EAF8= DA          Z
                jsr LEB5D                    ; EAF9= 20 5D EB     ]k
                plx                          ; EAFC= FA          z
LEAFD:
                bit $025F                    ; EAFD= 2C 5F 02    ,_.
                bpl LEB07                    ; EB00= 10 05       ..
                lda #$06                     ; EB02= A9 06       ).
LEB04:
                jmp (NETV)                  ; EB04= 6C 24 02    l$.

LEB07:
                lda $0268                    ; EB07= AD 68 02    -h.
                beq LEAC3                    ; EB0A= F0 B7       p7
                txa                          ; EB0C= 8A          .
                and $0245                    ; EB0D= 2D 45 02    -E.
                bne LEAC3                    ; EB10= D0 B1       P1
                lda $F4                      ; EB12= A5 F4       %t
                pha                          ; EB14= 48          H
                jsr selectTerminalROMAndANDY2 ; EB15= 20 98 E5     .e
                lda ($F8)                    ; EB18= B2 F8       2x
                plx                          ; EB1A= FA          z
                jsr selectROMX                    ; EB1B= 20 81 E5     .e
                dec $0268                    ; EB1E= CE 68 02    Nh.
                inc $F8                      ; EB21= E6 F8       fx
                bne LEB27                    ; EB23= D0 02       P.
                inc $F9                      ; EB25= E6 F9       fy
LEB27:
                clc                          ; EB27= 18          .
LEB28:
                rts                          ; EB28= 60          `

LEB29:
                phx                          ; EB29= DA          Z
                jsr LEB63                    ; EB2A= 20 63 EB     ck
                beq LEABF                    ; EB2D= F0 90       p.
                plx                          ; EB2F= FA          z
                clc                          ; EB30= 18          .
                rts                          ; EB31= 60          `

LEB32:
                ply                          ; EB32= 7A          z
                bcc LEAC3                    ; EB33= 90 8E       ..
                tya                          ; EB35= 98          .
                sta $02C9                    ; EB36= 8D C9 02    .I.
                lda $F4                      ; EB39= A5 F4       %t
                pha                          ; EB3B= 48          H
                jsr selectTerminalROMAndANDY2 ; EB3C= 20 98 E5     .e
                jsr LEB55                    ; EB3F= 20 55 EB     Uk
                sta $0268                    ; EB42= 8D 68 02    .h.
                lda L8000,y                  ; EB45= B9 00 80    9..
                sta $F8                      ; EB48= 85 F8       .x
                lda L8011,y                  ; EB4A= B9 11 80    9..
                sta $F9                      ; EB4D= 85 F9       .y
                pla                          ; EB4F= 68          h
                jsr selectROMA                    ; EB50= 20 92 E5     .e
                bra LEAFD                    ; EB53= 80 A8       .(

LEB55:
                lda L8001,y                  ; EB55= B9 01 80    9..
LEB58:
                sec                          ; EB58= 38          8
                sbc L8000,y                  ; EB59= F9 00 80    y..
                rts                          ; EB5C= 60          `

LEB5D:
                jsr withMOSROM               ; EB5D= 20 AB F3     +s
                jmp LDF78                    ; EB60= 4C 78 DF    Lx_

LEB63:
                jsr withMOSROM               ; EB63= 20 AB F3     +s
                jmp LDF5E                    ; EB66= 4C 5E DF    L^_

; OSBYTE Dispatch Table
; =====================

; TODO structure probably the same as
; https://tobylobster.github.io/mos/mos/S-s15.html#SP1...
                
osbyteAndOSWORDRoutineTable:
                .word osbyte00 ;Display MOS version D.2-18
                .word osbyte01 ;Write user flag D.2-18
                .word osbyte02 ;Specify input stream D.2-18
                .word osbyte03 ;Specify output stream D.2-19
                .word osbyte04 ;Enable/disable cursor editing
                .word osbyte05 ;Write printer driver type D.2-20
                .word osbyte06 ;Write printer ignore character D.2-21
                .word osbyte07 ;Write RS423 receive rate D.2-21
                .word osbyte08 ;Write RS423 transmit rate D.2-22
                .word osbyte09 ;Write duration of first colour D.2-22
                .word osbyte0A ;Write duration of second colour D.2-22
                .word osbyte0B ;Write keyboard auto-repeat delay D.2-22
                .word osbyte0C ;Write keyboard auto-repeat rate D.2-23
                .word osbyte0D ;Disable event D.2-23
                .word osbyte0E ;Enable event D.2-24
                .word osbyte0F ;Flush buffer D.2-24
                .word osbyte10 ;Write number of ADC channels D.2-25
                .word osbyte11 ;Write next ADC channel to be sampled D.2-25
                .word osbyte12 ;Reset soft keys D.2-26
                .word osbyte13 ;Wait for vertical sync D.2-26
                .word osbyte14 ;Restore default font definitions D.2-26
                .word osbyte15 ;Flush selected buffer D.2-27
                .word osbyte16 ;Increment ROM polling semaphore D.2-27
                .word osbyte17 ;Decrement ROM polling semaphore D.2-27
                .word osbyteUnused ; Reserved
                .word osbyte19 ;Restore a group of font definitions D.2-28
                .word osbyte6B ;Write 1MHz bus selection status D.2-29
                .word osbyte6C ;Write usage of main/shadow memory D.2-30
                .word osbyte6D ;Make temporary Filing System permanent D.2-30
                .word osbyteUnused ;Unused
                .word osbyteUnused ;Unused
                .word osbyte70 ;Select main/shadow memory for VDU access D.2-31
                .word osbyte71 ;Select main/shadow memory for display D.2-31
                .word osbyte72 ;Write usage of shadow memory D.2-31
                .word rtsFFAA  ;Unused
                .word rtsFFAA  ;Unused
                .word osbyte75 ;Read VDU status D.2-32
                .word osbyte76 ;Reflect keyboard status in keyboard LEDs D.2-33
                .word osbyte77 ;Close all *SPOOL/*SPOOLON or *EXEC files D.2-33
                .word osbyte78 ;Write keys pressed information D.2-33
                .word callKEYV ;Keyboard scan D.2-33
                .word osbyte7A ;Keyboard scan from 16 decimal
                .word osbyte7B ;Inform MOS of printer driver going dormant
                .word osbyte7C ;Clear escape condition
                .word osbyte7D ;Set escape condition
                .word osbyte7E ;Acknowledge escape condition
                .word osbyte7F ;Check for end of file on an opened file
                .word osbyte80 ;Read ADC channel or get buffer status
                .word osbyte81 ;Read key with time limit
                .word osbyte82 ;
                .word osbyte83 ;Read Operating System High Water Mark (OSHWM)
                .word osbyte84 ;Read top of user RAM
                .word osbyte85 ;Read top of user RAM for given mode
                .word osbyte86 ;Read text cursor position
                .word osbyte87 ;Read screen mode and character at text cursor position
                .word osbyte88 ;Execute user code
                .word osbyte89 ;Switch cassette motor relay
                .word osbyte8A ;Insert character code into buffer
                .word osbyte8B ;Write Filing System options
                .word osbyte8C8D ;Select Cassette Filing System
                .word osbyte8C8D ;Select ROM Filing System
                .word osbyte8E   ;Enter language ROM
                .word osbyte8F   ;Issue paged ROM service request
                .word osbyte90 ;Set vertical screen shift and interlace option
                .word osbyte91 ;Get character from buffer
                .word osbyte92 ;Read from FRED (&FC00 – &FCFF)
                .word osbyte93 ;Write to FRED (&FC00 – &FCFF)
                .word osbyte94 ;Read from JIM (&FD00 - &FDFF)
                .word osbyte95 ;Write to JIM (&FD00 - &FDFF)
                .word osbyte96 ;Read from SHEILA (&FE00 - &FEFF)
                .word osbyte97 ;Write to SHEILA (&FE00 - &FEFF)
                .word osbyte98 ;Examine buffer status
                .word osbyte99 ;Insert character code into buffer checking for escape
                .word osbyte9A ;Write video ULA control register
                .word osbyte9B ;Write to video ULA palette register and copy
                .word osbyte9C ;Read/write serial ACIA control register and copy
                .word osbyte9D ;Write byte across Tube
                .word osbyteUnused ;reserved for the speech system
                .word osbyteUnused ;reserved for the speech system
                .word osbyteA0     ;Read VDU variable value
                .word osbyteA1     ;Read CMOS RAM
                .word osbyteA2     ;Write CMOS RAM
                .word osbyteUnused ;reserved for applications software
                .word osbyteA4     ;Check processor type
                .word osbyteA5     ;Read output cursor position
                .word osbyteA6  ;handle osbyte A6-FF
                .word callUSERV ;*LINE - not part of the above table???
oswordRoutineTable:
                .word osword00  ;Read line from input stream to memory
                .word osword01  ;Read system clock
                .word osword02  ;Write system clock
                .word osword03  ;Read interval timer
                .word osword04  ;Write interval timer
                .word osword05  ;Read byte from I/O processor memory
                .word osword06  ;Write byte to I/O processor memory
                .word osword07  ;Generate a sound
                .word osword08  ;Define a sound envelope
                .word osword09  ;Read pixel logical colour
                .word osword0A  ;Read a character definition
                .word osword0B  ;Read the palette
                .word osword0C  ;Write the palette
                .word osword0D ;Read current and previous graphics cursor positions
                .word osword0E ;Read CMOS clock
                .word osword0F ;Write CMOS clock
                
osbyte88: ;LEC37:
                lda #$00

callUSERV:
                jmp (USERV)                  ; EC39= 6C 00 02    l..

osbyte7E:                       ;ec3c
                ldx #$00                     ; EC3C= A2 00       ".
                bit $FF                      ; EC3E= 24 FF       $.
                bpl osbyte7C                    ; EC40= 10 14       ..
                lda $0276                    ; EC42= AD 76 02    -v.
                bne LEC54                    ; EC45= D0 0D       P.
                cli                          ; EC47= 58          X
                stz $0269                    ; EC48= 9C 69 02    .i.
                jsr withTerminalROM          ; EC4B= 20 84 F3     .s
                jsr terminal.LA591           ; EC4E= 20 91 A5     .%
                jsr LE947                    ; EC51= 20 47 E9     Gi
LEC54:
                ldx #$FF                     ; EC54= A2 FF       ".
osbyte7C: ;EC56
                clc                          ; EC56= 18          .
osbyte7D: ;EC57
                ror $FF                      ; EC57= 66 FF       f.
                bit $027A                    ; EC59= 2C 7A 02    ,z.
                bpl LECD9                    ; EC5C= 10 7B       .{
                jmp terminal.tubeHost.copyEscapeStatus

osbyte89:
                lda serialRegisterULACopy                    ; EC61= AD 82 02    -..
                tay                          ; EC64= A8          (
                rol a                        ; EC65= 2A          *
                cpx #$01                     ; EC66= E0 01       `.
                ror a                        ; EC68= 6A          j
                bra LEC89                    ; EC69= 80 1E       ..

;-------------------------------------------------------------------------
;
; ;OSBYTE 8 (&08) Write RS423 transmit rate
;
; This call sets the RS423 baud rate for transmitting data. The actual format of
; the data is set using OSBYTE 156/&9C (see below).
;
; Entry parameters :
; X=0 selects 9600 baud
; X=1 selects 75 baud
; X=2 selects 150 baud
; X=3 selects 300 baud
; X=4 selects 1200 baud
; X=5 selects 2400 baud
; X=6 selects 4800 baud
; X=7 selects 9600 baud
; X=8 selects 19200 baud
; Y=0
;                 
; On exit : X=Y=<old serial ACIA control register contents>

osbyte08:
                lda #$38
                ; fall through to OSBYTE &07

;-------------------------------------------------------------------------
;
; OSBYTE 7 (&07) Write RS423 receive rate
;
; This call sets the RS423 baud rate for receiving data. The actual
; format of the data is set using OSBYTE 156/&9C (see below).
;
; Entry parameters :
; X=0 selects 9600 baud
; X=1 selects 75 baud
; X=2 selects 150 baud
; X=3 selects 300 baud
; X=4 selects 1200 baud
; X=5 selects 2400 baud
; X=6 selects 4800 baud
; X=7 selects 9600 baud
; X=8 selects 19200 baud
; Y=0
;                 
; On exit : X=Y=<old serial ACIA control register contents>

osbyte07:                                    ;ec6d
                eor #$3F                     ;if OSBYTE 8,
                                             ;A=%00000111, mask for
                                             ;transmit rate; if OSBYTE
                                             ;8, A=%000111000, mask
                                             ;for receive rate.
                sta $FA                      ;save mask
                ldy serialRegisterULACopy                    ;
                cpx #$09                     ;check for invalid baud rate
                bcs LEC8F                    ;branch taken if invalid
                and serialBaudRatesTable,x   ;get setting in A
                sta $FB                      ;store setting
                tya                          ;
                ora $FA                      ; EC7E= 05 FA       .z
                eor $FA                      ; EC80= 45 FA       Ez
                ora $FB                      ; EC82= 05 FB       .{
                ora #$40                     ; EC84= 09 40       .@
                eor $025D                    ;mask in tape/serial flag set by OSBYTE 205ac
LEC89:
                sta serialRegisterULACopy                    ; EC89= 8D 82 02    ...
                sta SERPROC+0                    ; EC8C= 8D 10 FE    ..~
LEC8F:
                tya                          ; EC8F= 98          .
LEC90:
                tax                          ; EC90= AA          *
                rts                          ; EC91= 60          `

; Y=0 on entry.
                
osbyte09:                       ;ec92
                iny                          ; EC92= C8          H
                clc                          ; EC93= 18          .
osbyte0A:                                    ;ec94
                lda $0252,y                  ; EC94= B9 52 02    9R.
                pha                          ; EC97= 48          H
                txa                          ; EC98= 8A          .
                sta $0252,y                  ; EC99= 99 52 02    .R.
                ply                          ; EC9C= 7A          z
                lda $0251                    ; EC9D= AD 51 02    -Q.
                bne LEC8F                    ; ECA0= D0 ED       Pm
                stx $0251                    ; ECA2= 8E 51 02    .Q.
                lda $0248                    ; ECA5= AD 48 02    -H.
                php                          ; ECA8= 08          .
                ror a                        ; ECA9= 6A          j
                plp                          ; ECAA= 28          (
                rol a                        ; ECAB= 2A          *
                sta $0248                    ; ECAC= 8D 48 02    .H.
                sta VCONTROL                 ; ECAF= 8D 20 FE    . ~
                bra LEC8F                    ; ECB2= 80 DB       .[

;-------------------------------------------------------------------------
;
; OSBYTE &02
;
; D.2-10
                
osbyte02:                       ;ecb4
                txa                          ; ECB4= 8A          .
                and #$01                     ; ECB5= 29 01       ).
                pha                          ; ECB7= 48          H
                lda $0250                    ; ECB8= AD 50 02    -P.
                rol a                        ; ECBB= 2A          *
                cpx #$01                     ; ECBC= E0 01       `.
                ror a                        ; ECBE= 6A          j
                cmp $0250                    ; ECBF= CD 50 02    MP.
                php                          ; ECC2= 08          .
                sta $0250                    ; ECC3= 8D 50 02    .P.
                sta ACIA+0                    ; ECC6= 8D 08 FE    ..~
                jsr LE90B                    ; ECC9= 20 0B E9     .i
                plp                          ; ECCC= 28          (
                beq LECD2                    ; ECCD= F0 03       p.
                bit ACIA+1                    ; ECCF= 2C 09 FE    ,.~
LECD2:
                ldx $0241                    ; ECD2= AE 41 02    .A.
                pla                          ; ECD5= 68          h
                sta $0241                    ; ECD6= 8D 41 02    .A.
LECD9:
                rts                          ; ECD9= 60          `

osbyte0D:                       ;ecda
                tya                          ; ECDA= 98          .
osbyte0E:                                    ;ecda
                cpx #$0A                     ; ECDB= E0 0A       `.
                bcs LEC90                    ; ECDD= B0 B1       01
                ldy $02BF,x                  ; ECDF= BC BF 02    <?.
                sta $02BF,x                  ; ECE2= 9D BF 02    .?.
                bra LEC8F                    ; ECE5= 80 A8       .(

osbyte10:                       ;ece7
                beq LECEC                    ; ECE7= F0 03       p.
                jsr osbyte11
LECEC:
                lda $024D                    ; ECEC= AD 4D 02    -M.
                stx $024D                    ; ECEF= 8E 4D 02    .M.
                tax                          ; ECF2= AA          *
                rts                          ; ECF3= 60          `

osbyte81:                       ;ecf4
                tya                          ; ECF4= 98          .
                bmi LED01                    ; ECF5= 30 0A       0.
                jsr LE7B1                    ; ECF7= 20 B1 E7     1g
                bcs LECFF                    ; ECFA= B0 03       0.
                tax                          ; ECFC= AA          *
LECFD:
                lda #$00                     ; ECFD= A9 00       ).
LECFF:
                tay                          ; ECFF= A8          (
                rts                          ; ED00= 60          `

LED01:
                txa                          ; ED01= 8A          .
                beq LED14                    ; ED02= F0 10       p.
                eor #$7F                     ; ED04= 49 7F       I.
                tax                          ; ED06= AA          *
                jsr callKEYV
                rol a                        ; ED0A= 2A          *
osbyte82:                                    ;ed0b
                ldx #$FF                     ; ED0B= A2 FF       ".
                ldy #$FF                     ; ED0D= A0 FF        .
                bcs LED13                    ; ED0F= B0 02       0.
                inx                          ; ED11= E8          h
                iny                          ; ED12= C8          H
LED13:
                rts                          ; ED13= 60          `

LED14:
                ldx #$FD                     ; ED14= A2 FD       "}
                bra LECFD                    ; ED16= 80 E5       .e

LED18:
                txa                          ; ED18= 8A          .
                eor #$FF                     ; ED19= 49 FF       I.
                tax                          ; ED1B= AA          *
                cpx #$02                     ; ED1C= E0 02       `.
LED1E:
                clv                          ; ED1E= B8          8
                bra LED24                    ; ED1F= 80 03       ..

LED21:
                bit LE34E                    ; ED21= 2C 4E E3    ,Nc
LED24:
                jmp (CNPV)                  ; ED24= 6C 2E 02    l..

LED27:
                sec                          ; ED27= 38          8
                ldx #$01                     ; ED28= A2 01       ".
                jsr LED1E                    ; ED2A= 20 1E ED     .m
                cpy #$01                     ; ED2D= C0 01       @.
                bcs LED34                    ; ED2F= B0 03       0.
                cpx $025B                    ; ED31= EC 5B 02    l[.
LED34:
                rts                          ; ED34= 60          `

osbyte80:                       ;ed35
                bmi LED18                    ; ED35= 30 E1       0a
                beq LED45                    ; ED37= F0 0C       p.
                cpx #$05                     ; ED39= E0 05       `.
                bcs osbyte82                    ; ED3B= B0 CE       0N
                ldy $02B9,x                  ; ED3D= BC B9 02    <9.
                lda $02B5,x                  ; ED40= BD B5 02    =5.
                tax                          ; ED43= AA          *
                rts                          ; ED44= 60          `

LED45:
                lda systemVIA.irb            ; ED45= AD 40 FE    -@~
                ror a                        ; ED48= 6A          j
                ror a                        ; ED49= 6A          j
                ror a                        ; ED4A= 6A          j
                ror a                        ; ED4B= 6A          j
                eor #$FF                     ; ED4C= 49 FF       I.
                and #$03                     ; ED4E= 29 03       ).
                ldy $02BE                    ; ED50= AC BE 02    ,>.
                stx $02BE                    ; ED53= 8E BE 02    .>.
                tax                          ; ED56= AA          *
                rts                          ; ED57= 60          `

;-------------------------------------------------------------------------
;
; OSBYTE $70
;
; D.2-31
;
osbyte70:                       ;ed58
                jsr LED70                    ; ED58= 20 70 ED     pm
                asl a                        ; ED5B= 0A          .
                beq clearACCCCONE
LED5E:
                tsb ACCCON                    ; ED5E= 0C 34 FE    .4~
                rts                          ; ED61= 60          `

clearACCCCONE:
                lda #ACCCON.E
LED64:
                trb ACCCON                    ; ED64= 1C 34 FE    .4~
                rts                          ; ED67= 60          `

osbyte71:                       ;ed68
                jsr LED70                    ; ED68= 20 70 ED     pm
                bne LED5E                    ; ED6B= D0 F1       Pq
                inc a                        ; ED6D= 1A          .
                bra LED64                    ; ED6E= 80 F4       .t

LED70:
                tay                          ; ED70= A8          (
                txa                          ; ED71= 8A          .
                sta $021A,y                  ; ED72= 99 1A 02    ...
                bne LED80                    ; ED75= D0 09       P.
                lda STATE                      ; ED77= A5 D0       %P
                and #STATE.isShadowMode
                beq LED83       ;
LED7D:
                lda #$01                     ; ED7D= A9 01       ).
                rts                          ; ED7F= 60          `

LED80:
                dec a                        ; ED80= 3A          :
                bne LED7D                    ; ED81= D0 FA       Pz
LED83:
                rts                          ; ED83= 60          `

; OSBYTE &6E (110), &6F (111)
; ===========================
; Pass to sideways ROMs
osbyteUnused:                   ;ed84
                ldx #romServiceCallUnrecognisedOSBYTE
                jsr makeROMServiceCall
                ldx $F0                      ; ED89= A6 F0       &p
                eor #$00                     ; ED8B= 49 00       I.
                rts                          ; ED8D= 60          `

osbyteA1:
                jsr withTerminalROM          ; ED8E= 20 84 F3     .s
                jmp terminal.L98B2           ; ED91= 4C B2 98    L2.

osbyteA2:
                jsr withTerminalROM          ; ED94= 20 84 F3     .s
                jmp terminal.L98DC           ; ED97= 4C DC 98    L\.

; OSBYTE &8C (140) - Select TAPE
; ==============================
osbyte8C8D:; LED9A:
                jsr LEDC0
                lda ACCCON                    ; Save ACCON register
                pha
                jsr selectHAZEL         ; Page Hazel workspace in
                ldx hazel.activeFS
                stx hazel.currentFS
                lda #$0F                     ; Set FS ROM = 15
                sta hazel.currentFSROM
                pla                          ; Restore ACCON
selectMOSOrHAZEL:                                       ;edb0
                and #ACCCON.Y   ;get just the HAZEL/MOS bit
                bne tsbACCCON   ;branch taken if HAZEL at $c000
                lda #ACCCON.Y
                trb ACCCON      ;page in MOS at $c000
                rts

selectHAZEL:
                lda #ACCCON.Y
tsbACCCON:
                tsb ACCCON      ;page in HAZEL at $c000
                rts

; Select ROM or TAPE
; ==================
LEDC0:
                eor #$8C
LEDC2:
                asl a                        ; Set CFS/RFS swicth to 0=CFS or 2=RFS
                sta $0247
                bne LEDCC                    ; Skip past if not RFS
                lda #$04                     ; CFS, clear b2 of status
                trb $E2
LEDCC:
                cpx #$03                     ; EQ=TAPE 300, NE=TAPE 1200
                bra LEDD6

LEDD0:
                jsr LEE64                    ; EDD0= 20 64 EE     dn
                jsr LF1EE                    ; EDD3= 20 EE F1     nq
LEDD6:
                php                          ; Save baud flag in Carry
                lda #$06                     ; Vectors about to change
                jsr callFSCV
                lda $0247                    ; Jump if RFS selected
                bne LEDEE
                ldx #$06                     ; Prepare baud=6 for TAPE300
                plp                          ; Skip past if TAPE300
                beq LEDEB
                lda #$04                     ; TAPE1200, set bit 2 of status
                tsb $E2
                dex                          ; Change to baud=5 for TAPE1200
LEDEB:
                stx $C6                      ; Store baud rate setting
                php
LEDEE:
                stz $CE                      ; Clear byte (unused on BBC)
                plp
                ldx #defaultVectorTable.fsVectors.end-defaultVectorTable.fsVectors ; Prepare to set 7 vectors
LEDF3:
                lda defaultVectorTable.fsVectors-1,x ; Set filing
                                                     ; system vectors
                                                     ; to point to
                                                     ; extended
                                                     ; vectors
                sta FILEV-1,x
                dex
                bne LEDF3
                jsr LF1EE                    ; Set extended vectors
                stz $C2                      ; Set Progress=idle
                ldx #$0F                     ; Send service call &0F - vectors changed

; Send a sideways ROM service call and check for filing system change
; ===================================================================
osbyte8F: .proc                    ;ee03
                phy
                phx                          ; Send service call
                jsr makeROMServiceCall
                plx
                cpx #romServiceCallVectorsClaimed ; If VectorsClaimed,
                                                  ; hook FileSwitch
                                                  ; back in
                beq handleVectorsClaimed
                inc a       ; If claimed, check for
                            ; InitialiseFilingSystem or
                            ; UnrecognisedCommand
                dec a       ;Z=1 if claimed
                beq wasClaimed  ;branch taken if claimed
done:
                plx             ; Return with result in X, EQ=Claimed
                tax
                rts

wasClaimed:
                cpx #romServiceCallInitialiseFilingSystem
                beq +
                cpx #romServiceCallUnrecognisedCommand
                bne done                    ; EE1A= D0 F5       Pu
+

; handle InitialiseFilingSystem ($12) or UnrecognisedCommand ($04)
                
                ply                     ;Y=service call arg
                pha                     ;save A (though actually it's
                                        ;always $00...)
                lda ACCCON
                pha                     ;save ACCCON
                jsr selectHAZEL
                sec
                ror hazel.currentFS ;set currentFS bit 7
LEE29:
                phy             ;save ROM service call argument
                lda #$00                     
                tay                          
                jsr callARGSV   ;A=0, Y=0 - get active FS number
                sta hazel.activeFS ;save active FS number
                bit hazel.currentFS
                bpl LEE3B
                jsr osbyte6D
LEE3B:
                ply                          ; EE3B= 7A          z
                pla                          ; EE3C= 68          h
                jsr selectMOSOrHAZEL
                pla                          ; EE40= 68          h
                tax                          ; EE41= AA          *
                rts                          ; EE42= 60          `

handleVectorsClaimed:
                ply                          ; EE43= 7A          z
                pha                          ; EE44= 48          H
                lda ACCCON                    ; EE45= AD 34 FE    -4~
                pha                          ; EE48= 48          H
                jsr selectHAZEL                    ; EE49= 20 BA ED     :m
                lda FSCV+0
                sta hazel.activeFSCV+0
                lda FSCV+1
                sta hazel.activeFSCV+1
                lda #<fscEntryPoint
                sta FSCV+0
                lda #>fscEntryPoint          
                sta FSCV+1
                bra LEE29                    ; EE62= 80 C5       .E
                .pend

LEE64:
                lda #$A1                     ; EE64= A9 A1       )!
                sta $E3                      ; EE66= 85 E3       .c
                lda #$19                     ; EE68= A9 19       ).
                sta $03D1                    ; EE6A= 8D D1 03    .Q.
                lda #$04                     ; EE6D= A9 04       ).
                tsb $E2                      ; EE6F= 04 E2       .b
                rts                          ; EE71= 60          `
                
;-------------------------------------------------------------------------
; 
; Pass service call around sideways ROMs
;
; Entry:
; X=service call number
; Y=any parameters
;
; Exit:
; X=0 or preserved
; Y=any returned parameters
; EQ=call claimed if called directly
;
makeROMServiceCall: .proc                    ;ee72
                lda $F4         ; Save current ROM
                pha
                lda ACCCON      ; Save current paging state
                pha
                jsr selectHAZEL ; Page in Hazel
                txa             ; Pass service call number to A
                ldx #$0F     ; Start at ROM 15, and always call ROM 15
                bra callServiceEntry
callServiceEntriesLoop:
                bit $02A1,x     ;check if ROM X has a service entry
                bpl nextROM       ;branch taken if no service entry
callServiceEntry:
                jsr selectROMX  ; Page in ROM X
                jsr $8003       ; Call ROM service entry point
                tax             ; X = service call result
                beq done       ;branch taken if service call claimed
                ldx $F4         ; Get ROM number
nextROM:
                dex       ; Step down to next ROM, loop until all done
                bpl callServiceEntriesLoop

done:
                pla                          ; Restore paging state
                jsr selectMOSOrHAZEL
                pla                          ; Restore current ROM
                jsr selectROMA
                txa                          ; Pass claim/noclaim to A
                rts
                .pend

; OSBYTE &6B (107) - Select memory for direct access
; ==============================================
osbyte6B:                       ;ee9e
                ldy #$20                     ; Y=&20 to change 1MHz bit
                bra LEEA4

; OSBYTE &6C (108) - Select memory for direct access
; ==============================================
osbyte6C:
                ldy #$04                     ; Y=&04 to change RAM bit
LEEA4:
                tya                          ; Clear RAM or 1MHz bit
                trb ACCCON
                txa                          ; If X=0, exit with normal RAM/1MHz selected
                beq LEEB0
                lda #$04                     ; BUG! This should be TYA
                tsb ACCCON                    ; Page in shadow RAM
LEEB0:
                rts                          ; X preserved, Y=&04 or &20


; OSBYTE
; ======
osbyteEntryPoint:
                pha                          ; EEB1= 48          H
                php                          ; EEB2= 08          .
                sei                          ; EEB3= 78          x
                sta $EF                      ; EEB4= 85 EF       .o
                stx $F0                      ; EEB6= 86 F0       .p
                sty $F1                      ; EEB8= 84 F1       .q
                ldx #romServiceCallUnrecognisedOSBYTE
                cmp #$6B                     
                bcc osbyte00To6A
                cmp #$A6
                bcc osbyte6BToA5
                cmp #$A6
                bcc LEF0C       ;??? - wait... didn't we just do this?

osbyteA6ToFF:
                clc
osbyteOrUSERV:      ;call OSBYTE A6+ routine if C=0; call USERV if C=1
                lda #$A6
                adc #$00
osbyte6BToA5:
                sbc #$50        ;map $6b-$a5 to $1b-$56
osbyteUseTable:
                asl a           ;table is of words
                sec
callOSBYTEOrOSWORDFromTable:
                sty $F1         ;save Y (possibly again?)
                tay             ;get table offset in Y
                bit $025E                    ; EED4= 2C 5E 02    ,^.
                bpl LEEE0                    ; EED7= 10 07       ..
                txa                          ; EED9= 8A          .
                clv                          ; EEDA= B8          8
                jsr LEB04                    ; EEDB= 20 04 EB     .k
                bvs LEEFA                    ; EEDE= 70 1A       p.
LEEE0:
                lda osbyteAndOSWORDRoutineTable+1,y
                sta $FB
                lda osbyteAndOSWORDRoutineTable,y
                sta $FA                      ; EEE8= 85 FA       .z
                lda $EF                      ; EEEA= A5 EF       %o
                ldy $F1                      ; EEEC= A4 F1       $q
                bcs LEEF4                    ; EEEE= B0 04       0.
                ldy #$00                     ; EEF0= A0 00        .
                lda ($F0)                    ; EEF2= B2 F0       2p
LEEF4:
                sec                          ; EEF4= 38          8
                ldx $F0                      ; EEF5= A6 F0       &p

; on entry to the OSBYTE handlers, C=1, N/Z set as per X.
                
                jsr call00FA                    ; EEF7= 20 DF F8     _x
LEEFA:
                ror a                        ; EEFA= 6A          j
                plp                          ; EEFB= 28          (
                rol a                        ; EEFC= 2A          *
                pla                          ; EEFD= 68          h
                clv                          ; EEFE= B8          8
                rts                          ; EEFF= 60          `

osbyte00To6A:
                ldy #$00        ;Y=0 on entry for this lot
                cmp #$1A        ;OSBYTE <=$19 is table-driven
                bcc osbyteUseTable ;taken if OSBYTE $00-$19
                bra LEF0C       

LEF08:
                ldx #romServiceCallUnrecognisedOSWORD
                pla                          ; EF0A= 68          h
                pla                          ; EF0B= 68          h
LEF0C:
                jsr makeROMServiceCall
                bne LEF15                    ; EF0F= D0 04       P.
                ldx $F0                      ; EF11= A6 F0       &p
                bra LEEFA                    ; EF13= 80 E5       .e

LEF15:
                plp                          ; EF15= 28          (
                pla                          ; EF16= 68          h
                bit LE34E                    ; EF17= 2C 4E E3    ,Nc
                rts                          ; EF1A= 60          `

LEF1B:
                lda $EB                      ; EF1B= A5 EB       %k
                bmi LEF60                    ; EF1D= 30 41       0A
                lda $0257                    ; EF1F= AD 57 02    -W.
                bne LEF60                    ; EF22= D0 3C       P<
                lda #$08                     ; EF24= A9 08       ).
                and $E2                      ; EF26= 25 E2       %b
                bne LEF2E                    ; EF28= D0 04       P.
                lda #$88                     ; EF2A= A9 88       ).
                and $BB                      ; EF2C= 25 BB       %;
LEF2E:
                rts                          ; EF2E= 60          `
                
osword0E:                       ;ef2f
                cmp #$03                     ; EF2F= C9 03       I.
                bcs LEF08                    ; EF31= B0 D5       0U
                jsr withTerminalROM          ; EF33= 20 84 F3     .s
                jmp terminal.L97B4           ; EF36= 4C B4 97    L4.

;-------------------------------------------------------------------------
;
; Entry point for OSWORD.
;
; D.3-3
; 
oswordEntryPoint:
                pha             ;save OSWORD request
                php
                sei
                sta $EF                      ; EF3C= 85 EF       .o
                stx $F0                      ; EF3E= 86 F0       .p
                sty $F1                      ; EF40= 84 F1       .q
                ldx #romServiceCallUnrecognisedOSWORD
                cmp #$E0
                bcs osbyteOrUSERV ;taken if OSWORD $E0 or higher -
                                  ;these go via USERV
                cmp #$10
                bcs LEF0C       ;taken if unknown OSWORD

; adjust request number so it's a suitable index into the
; OSBYTE/OSWORD routine table.
                
                adc #(oswordRoutineTable-osbyteAndOSWORDRoutineTable)/2
                asl a
                bra callOSBYTEOrOSWORDFromTable

osword05:                       ;ef51
                jsr LEF63                    ; EF51= 20 63 EF     co
                lda ($FA)                    ; EF54= B2 FA       2z
                sta ($F0),y                  ; EF56= 91 F0       .p
                rts                          ; EF58= 60          `

osword06:                       ;ef59
                jsr LEF63                    ; EF59= 20 63 EF     co
                lda ($F0),y                  ; EF5C= B1 F0       1p
                sta ($FA)                    ; EF5E= 92 FA       .z
LEF60:
                lda #$00                     ; EF60= A9 00       ).
                rts                          ; EF62= 60          `

LEF63:
                sta $FA                      ; EF63= 85 FA       .z
                iny                          ; EF65= C8          H
                lda ($F0),y                  ; EF66= B1 F0       1p
                sta $FB                      ; EF68= 85 FB       .{
                ldy #$04                     ; EF6A= A0 04        .
ldx03ThenRTS:
                ldx #$03                     ; EF6C= A2 03       ".
                rts                          ; EF6E= 60          `
                
;-------------------------------------------------------------------------
; 
; OSBYTE 0 (&00) Display MOS version
;
; OSBYTE 0 has the effect of performing a BRK instruction and
; displaying the MOS version number.
;
; Entry parameters :
;
; X=0 executes a BRK and displays the OS version
;
; X=1 executes an RTS and returns the Operating system version
;
; On exit : X=<OS version>
;
; D.2-18
;
osbyte00:                       ;ef6f
                bne ldx03ThenRTS ;branch taken if X<>0 - return with
                                 ;X=3

; do a BRK and print MOS version number.
                
                brk                          
                .text $f7,"OS 3.20",0

osword07:
                iny                          ; EF7B= C8          H
                lda ($F0),y                  ; EF7C= B1 F0       1p
                cmp #$20                     ; EF7E= C9 20       I
                bcs LEF08                    ; EF80= B0 86       0.
                dey                          ; EF82= 88          .
                jsr LEFF6                    ; EF83= 20 F6 EF     vo
                ora #$04                     ; EF86= 09 04       ..
                tax                          ; EF88= AA          *
                bcc LEF90                    ; EF89= 90 05       ..
                jsr LE95A                    ; EF8B= 20 5A E9     Zi
                ldy #$01                     ; EF8E= A0 01        .
LEF90:
                jsr LEFF6                    ; EF90= 20 F6 EF     vo
                sta $FA                      ; EF93= 85 FA       .z
                php                          ; EF95= 08          .
                ldy #$06                     ; EF96= A0 06        .
                lda ($F0),y                  ; EF98= B1 F0       1p
                pha                          ; EF9A= 48          H
                ldy #$04                     ; EF9B= A0 04        .
                lda ($F0),y                  ; EF9D= B1 F0       1p
                pha                          ; EF9F= 48          H
                ldy #$02                     ; EFA0= A0 02        .
                lda ($F0),y                  ; EFA2= B1 F0       1p
                rol a                        ; EFA4= 2A          *
                dec a                        ; EFA5= 3A          :
                dec a                        ; EFA6= 3A          :
                asl a                        ; EFA7= 0A          .
                asl a                        ; EFA8= 0A          .
                ora $FA                      ; EFA9= 05 FA       .z
                jsr LE9A3                    ; EFAB= 20 A3 E9     #i
                bcc LEFCE                    ; EFAE= 90 1E       ..
                pla                          ; EFB0= 68          h
                pla                          ; EFB1= 68          h
                plp                          ; EFB2= 28          (
osbyte75:
                ldx STATE                      ; EFB3= A6 D0       &P
                rts                          ; EFB5= 60          `

vdu7EntryPoint:
                php                          ; EFB6= 08          .
                sei                          ; EFB7= 78          x
                lda $0263                    ; EFB8= AD 63 02    -c.
                and #$07                     ; EFBB= 29 07       ).
                ora #$04                     ; EFBD= 09 04       ..
                tax                          ; EFBF= AA          *
                lda $0264                    ; EFC0= AD 64 02    -d.
                jsr LEA40                    ; EFC3= 20 40 EA     @j
                lda $0266                    ; EFC6= AD 66 02    -f.
                pha                          ; EFC9= 48          H
                lda $0265                    ; EFCA= AD 65 02    -e.
                pha                          ; EFCD= 48          H
LEFCE:
                sec                          ; EFCE= 38          8
                ror $0800,x                  ; EFCF= 7E 00 08    ~..
                pla                          ; EFD2= 68          h
                jsr LEA40                    ; EFD3= 20 40 EA     @j
                pla                          ; EFD6= 68          h
                jsr LEA40                    ; EFD7= 20 40 EA     @j
                plp                          ; EFDA= 28          (
                rts                          ; EFDB= 60          `

osword08:                       ;efdc
                dec a                        ; EFDC= 3A          :
                asl a                        ; EFDD= 0A          .
                asl a                        ; EFDE= 0A          .
                asl a                        ; EFDF= 0A          .
                asl a                        ; EFE0= 0A          .
                ora #$0F                     ; EFE1= 09 0F       ..
                tax                          ; EFE3= AA          *
                lda #$00                     ; EFE4= A9 00       ).
                ldy #$10                     ; EFE6= A0 10        .
LEFE8:
                cpy #$0E                     ; EFE8= C0 0E       @.
                bcs LEFEE                    ; EFEA= B0 02       0.
                lda ($F0),y                  ; EFEC= B1 F0       1p
LEFEE:
                sta $08C0,x                  ; EFEE= 9D C0 08    .@.
                dex                          ; EFF1= CA          J
                dey                          ; EFF2= 88          .
                bne LEFE8                    ; EFF3= D0 F3       Ps
                rts                          ; EFF5= 60          `

LEFF6:
                lda ($F0),y                  ; EFF6= B1 F0       1p
                cmp #$10                     ; EFF8= C9 10       I.
                and #$03                     ; EFFA= 29 03       ).
                iny                          ; EFFC= C8          H
                rts                          ; EFFD= 60          `

osword03:                       ;effe
                ldx #$0F                     ; EFFE= A2 0F       ".
                bra LF005                    ; F000= 80 03       ..

osword01:                       ;f002
                ldx $0283                    ; F002= AE 83 02    ...
LF005:
                ldy #$04                     ; F005= A0 04        .
LF007:
                lda $028D,x                  ; F007= BD 8D 02    =..
                sta ($F0),y                  ; F00A= 91 F0       .p
                inx                          ; F00C= E8          h
                dey                          ; F00D= 88          .
                bpl LF007                    ; F00E= 10 F7       .w
LF010:
                rts                          ; F010= 60          `

osword04:                       ;f011
                lda #$0F                     ; F011= A9 0F       ).
                bra LF01B                    ; F013= 80 06       ..

osword02:                       ;f015
                lda $0283                    ; F015= AD 83 02    -..
                eor #$0F                     ; F018= 49 0F       I.
                clc                          ; F01A= 18          .
LF01B:
                pha                          ; F01B= 48          H
                tax                          ; F01C= AA          *
                ldy #$04                     ; F01D= A0 04        .
LF01F:
                lda ($F0),y                  ; F01F= B1 F0       1p
                sta $028D,x                  ; F021= 9D 8D 02    ...
                inx                          ; F024= E8          h
                dey                          ; F025= 88          .
                bpl LF01F                    ; F026= 10 F7       .w
                pla                          ; F028= 68          h
                bcs LF010                    ; F029= B0 E5       0e
                sta $0283                    ; F02B= 8D 83 02    ...
                rts                          ; F02E= 60          `

; OSWORD &00 - Read Line
; ======================
osword00: ;LF02F:
                ldy #$04                     ; F02F= A0 04        .
LF031:
                lda ($F0),y                  ; F031= B1 F0       1p
                sta $02B1,y                  ; F033= 99 B1 02    .1.
                dey                          ; F036= 88          .
                cpy #$02                     ; F037= C0 02       @.
                bcs LF031                    ; F039= B0 F6       0v
                lda ($F0),y                  ; F03B= B1 F0       1p
                sta $E9                      ; F03D= 85 E9       .i
                dey                          ; F03F= 88          .
                stz $0269                    ; F040= 9C 69 02    .i.
                lda ($F0)                    ; F043= B2 F0       2p
                sta $E8                      ; F045= 85 E8       .h
                cli                          ; F047= 58          X
                bra LF051                    ; F048= 80 07       ..

LF04A:
                lda #$07                     ; F04A= A9 07       ).
LF04C:
                dey                          ; F04C= 88          .
LF04D:
                iny                          ; F04D= C8          H
LF04E:
                jsr OSWRCH                   ; F04E= 20 EE FF     n.
LF051:
                jsr OSRDCH                   ; F051= 20 E0 FF     `.
                bcs LF09F                    ; F054= B0 49       0I
                tax                          ; F056= AA          *
                lda $027C                    ; F057= AD 7C 02    -|.
                ror a                        ; F05A= 6A          j
                ror a                        ; F05B= 6A          j
                txa                          ; F05C= 8A          .
                bcs LF064                    ; F05D= B0 05       0.
                ldx $026A                    ; F05F= AE 6A 02    .j.
                bne LF04E                    ; F062= D0 EA       Pj
LF064:
                cmp #$7F                     ; F064= C9 7F       I.
                bne LF06F                    ; F066= D0 07       P.
                cpy #$00                     ; F068= C0 00       @.
                beq LF051                    ; F06A= F0 E5       pe
                dey                          ; F06C= 88          .
                bra LF04E                    ; F06D= 80 DF       ._

LF06F:
                cmp #$15                     ; F06F= C9 15       I.
                bne LF080                    ; F071= D0 0D       P.
                tya                          ; F073= 98          .
                beq LF051                    ; F074= F0 DB       p[
                lda #$7F                     ; F076= A9 7F       ).
LF078:
                jsr OSWRCH                   ; F078= 20 EE FF     n.
                dey                          ; F07B= 88          .
                bne LF078                    ; F07C= D0 FA       Pz
                bra LF051                    ; F07E= 80 D1       .Q

LF080:
                sta ($E8),y                  ; F080= 91 E8       .h
                cmp #$0D                     ; F082= C9 0D       I.
                beq LF099                    ; F084= F0 13       p.
                cpy $02B3                    ; F086= CC B3 02    L3.
                bcs LF04A                    ; F089= B0 BF       0?
                cmp $02B4                    ; F08B= CD B4 02    M4.
                bcc LF04C                    ; F08E= 90 BC       .<
                cmp $02B5                    ; F090= CD B5 02    M5.
                beq LF04D                    ; F093= F0 B8       p8
                bcc LF04D                    ; F095= 90 B6       .6
                bra LF04C                    ; F097= 80 B3       .3

LF099:
                jsr OSNEWL                   ; F099= 20 E7 FF     g.
                jsr LEB04                    ; F09C= 20 04 EB     .k
LF09F:
                lda $FF                      ; F09F= A5 FF       %.
                rol a                        ; F0A1= 2A          *
                rts                          ; F0A2= 60          `

osbyte03:
                phx                          ; F0A3= DA          Z
                ldx $027C                    ; F0A4= AE 7C 02    .|.
                lda #$0A                     ; F0A7= A9 0A       ).
                jsr LE93C                    ; F0A9= 20 3C E9     <i
                plx                          ; F0AC= FA          z
                lda #$03                     ; F0AD= A9 03       ).
                ldy #$00                     ; F0AF= A0 00        .
                bra osbyte04                 ; F0B1= 80 23       .#

osbyte06:                       ;f0b3
                lsr $0246                    ; F0B3= 4E 46 02    NF.
                bra osbyte01                    ; F0B6= 80 16       ..

osbyte72:                       ;f0b8
                lda #$1F                     ; F0B8= A9 1F       ).
                bra LF0CC                    ; F0BA= 80 10       ..

osbyte05:                       ;f0bc
                cli                          ; F0BC= 58          X
                sei                          ; F0BD= 78          x
                bit $FF                      ; F0BE= 24 FF       $.
                bmi LF0EB                    ; F0C0= 30 29       0)
                bit $02D1                    ; F0C2= 2C D1 02    ,Q.
                bpl osbyte05
                jsr LE93C                    ; F0C7= 20 3C E9     <i
                ldy #$00                     ; F0CA= A0 00        .
LF0CC:
                stz $F1                      ; F0CC= 64 F1       dq

;-------------------------------------------------------------------------
;
; OSBYTE 1 (&01) Write user flag
;
; This call provides a means of writing data to the user flag
; (location &281). The flag is zero by default
;
; Entry parameters:
;
; X=<new value>
; Y=0
;
; On exit : X=<old value>
;
; Note: This call uses OSBYTE 241/&F1 and is left free for user
; applications.
;
; D.2-18
                
osbyte01:                       ;f0ce
                eor #$F0        ;set A=$F1
                bra LF0D9       ;jump to standard MOS variable
                                ;handling

osbyte0C:
                beq LF107                    ; F0D2= F0 33       p3
osbyte0B:                                    ;f0d4
                adc #$CF                     ; F0D4= 69 CF       iO
osbyte04:                                    ;f0d6
                clc                          ; F0D6= 18          .
                adc #$E9                     ; F0D7= 69 E9       ii
LF0D9:
                stx $F0                      ; F0D9= 86 F0       .p
osbyteA6:
                tay             ;
                lda $0190,y     ;get MOS variable value
                tax             ;save old value
                and $F1         ;AND old value with Y
                eor $F0         ;EOR old value with X
                sta $0190,y     ;set new variable value
                lda $0191,y
                tay             ;Y=contents of next location
LF0EB:
                rts                          ; F0EB= 60          `

;-------------------------------------------------------------------------
;
; This table is used to set the serial baud rate.
;
;   - bit 7 is not used (always clear)
;   - bit 6 is not used (always set)
;   - bits 3,4,5 indicate the serial receive baud rate
;   - bits 0,1,2 indicate the serial transmit baud rate
;
;       111 =    75 baud
;       011 =   150 baud
;       101 =   300 baud
;       001 =  1200 baud
;       110 =  2400 baud
;       010 =  4800 baud
;       100 =  9600 baud
;       000 = 19200 baud
;
; ***************************************************************************************
                
serialBaudRatesTable:
                .byte %01100100;$64
                .byte %01111111;$7f
                .byte %01011011;$5b
                .byte %01101101;$6d
                .byte %01001001;$49
                .byte %01110110;$76
                .byte %01010010;$52
                .byte %01100100;$64
                .byte %01000000;$40

osbyte13:                       ;f0f5
                lda $0240                    ; F0F5= AD 40 02    -@.
LF0F8:
                cli                          ; F0F8= 58          X
                sei                          ; F0F9= 78          x
                cmp $0240                    ; F0FA= CD 40 02    M@.
                beq LF0F8                    ; F0FD= F0 F9       py
osbyteA0:
                ldy $0301,x                  ; F0FF= BC 01 03    <..
                lda $0300,x                  ; F102= BD 00 03    =..
                tax                          ; F105= AA          *
                rts                          ; F106= 60          `

LF107:
                jsr withTerminalROM          ; F107= 20 84 F3     .s
                jsr terminal.L8B3A           ; F10A= 20 3A 8B     :.
                sty $0254                    ; F10D= 8C 54 02    .T.
                jsr terminal.L8B3F           ; F110= 20 3F 8B     ?.
                ldx $0255                    ; F113= AE 55 02    .U.
                sty $0255                    ; F116= 8C 55 02    .U.
                rts                          ; F119= 60          `

osbyte12:                                    ;f11a
                sec                          ; F11A= 38          8
                ror $0284                    ; F11B= 6E 84 02    n..
                lda $F4                      ; F11E= A5 F4       %t
                pha                          ; F120= 48          H
                jsr selectTerminalROMAndANDY                    ; F121= 20 7F E5     .e
                ldx #$10                     ; F124= A2 10       ".
LF126:
                lda #$22                     ; F126= A9 22       )"
                sta L8000,x                  ; F128= 9D 00 80    ...
                lda #$80                     ; F12B= A9 80       ).
                sta L8011,x                  ; F12D= 9D 11 80    ...
                dex                          ; F130= CA          J
                bpl LF126                    ; F131= 10 F3       .s
                pla                          ; F133= 68          h
                jsr selectROMA                    ; F134= 20 92 E5     .e
                stz $0268                    ; F137= 9C 68 02    .h.
                stz $0284                    ; F13A= 9C 84 02    ...
                inx                          ; F13D= E8          h
                rts                          ; F13E= 60          `

osword0B:                       ;f13f
                and $0360                    ; F13F= 2D 60 03    -`.
                tax                          ; F142= AA          *
                lda $036F,x                  ; F143= BD 6F 03    =o.
LF146:
                iny                          ; F146= C8          H
LF147:
                sta ($F0),y                  ; F147= 91 F0       .p
                lda #$00                     ; F149= A9 00       ).
                cpy #$04                     ; F14B= C0 04       @.
                bne LF146                    ; F14D= D0 F7       Pw
                rts                          ; F14F= 60          `

osword09:                                    ;f150
                jsr withMOSROM               ; sF150= 20 AB F3     +s
                ldy #$03                     ; F153= A0 03        .
LF155:
                lda ($F0),y                  ; F155= B1 F0       1p
                sta $0328,y                  ; F157= 99 28 03    .(.
                lda $0310,y                  ; F15A= B9 10 03    9..
                pha                          ; F15D= 48          H
                dey                          ; F15E= 88          .
                bpl LF155                    ; F15F= 10 F4       .t
                lda #$28                     ; F161= A9 28       )(
                jsr LDDB7                    ; F163= 20 B7 DD     7]
                tax                          ; F166= AA          *
                ldy #$00                     ; F167= A0 00        .
LF169:
                pla                          ; F169= 68          h
                sta $0310,y                  ; F16A= 99 10 03    ...
                iny                          ; F16D= C8          H
                cpy #$04                     ; F16E= C0 04       @.
                bne LF169                    ; F170= D0 F7       Pw
                txa                          ; F172= 8A          .
                bra LF147                    ; F173= 80 D2       .R

osword0A:                                    ;f175
                jsr getSoftCharacterDefinitionAddress                    ; F175= 20 2C E2     ,b
                ldy #$00                     ; F178= A0 00        .
                lda $F4                      ; F17A= A5 F4       %t
                pha                          ; F17C= 48          H
                jsr selectTerminalROMAndANDY                    ; F17D= 20 7F E5     .e
LF180:
                lda ($DE),y                  ; F180= B1 DE       1^
                iny                          ; F182= C8          H
                sta ($F0),y                  ; F183= 91 F0       .p
                cpy #$08                     ; F185= C0 08       @.
                bne LF180                    ; F187= D0 F7       Pw
                plx                          ; F189= FA          z
                jmp selectROMX                    ; F18A= 4C 81 E5    L.e

osword0C:                                    ;f18d
                jsr withMOSROM               ; F18D= 20 AB F3     +s
                php                          ; F190= 08          .
                and $0360                    ; F191= 2D 60 03    -`.
                tax                          ; F194= AA          *
                iny                          ; F195= C8          H
                lda ($F0),y                  ; F196= B1 F0       1p
                jmp LC639                    ; F198= 4C 39 C6    L9F

osword0D:                                    ;f19b
                jsr withMOSROM               ; F19B= 20 AB F3     +s
                lda #$03                     ; F19E= A9 03       ).
                jsr LF1A5                    ; F1A0= 20 A5 F1     %q
                lda #$07                     ; F1A3= A9 07       ).
LF1A5:
                pha                          ; F1A5= 48          H
                jsr LE2B6                    ; F1A6= 20 B6 E2     6b
                jsr LC4DF                    ; F1A9= 20 DF C4     _D
                ldx #$03                     ; F1AC= A2 03       ".
                pla                          ; F1AE= 68          h
                tay                          ; F1AF= A8          (
LF1B0:
                lda $0310,x                  ; F1B0= BD 10 03    =..
                sta ($F0),y                  ; F1B3= 91 F0       .p
                dey                          ; F1B5= 88          .
                dex                          ; F1B6= CA          J
                bpl LF1B0                    ; F1B7= 10 F7       .w
                rts                          ; F1B9= 60          `

; Read address of bottom of screen/top of user memory
; ===================================================
osbyte84:                     ;f1ba
                lda STATE     ; Get VDU status
                bit #STATE.isShadowMode ; If shadow screen, jump to return &8000
                bne LF1D8
LF1C0:
                lda $0355                    ; Get current screen MODE

; Return start of screen for non-shadow MODE in X
; -----------------------------------------------
LF1C3:
                and #$07
                tay
                ldx LE168,y                  ; Get screen map for supplied MODE
                lda LE17E,x                  ; Get address top byte for this screen map
LF1CC:
                ldx #$00                     ; Address=&xx00
                tay
                rts

; Read address bottom of screen for MODE in X
; ===========================================
osbyte85: ;F1D0:
                txa                          ; If MODE &80+n, return &8000
                bmi LF1D8
                ldx $027F                    ; If *SHADOW<>0, jump to return non-shadow address
                bne LF1C3
LF1D8:
                lda #$80                     ; Return &8000
                bra LF1CC

osbyte87: ;F1DC:
                jsr withMOSROM               ; F1DC= 20 AB F3     +s
                jmp LDDF8                    ; F1DF= 4C F8 DD    Lx]

osbyte8B: ;LF1E2:
                asl a                        ; F1E2= 0A          .
osbyte7F:                                    ;f1e3
                and #$01                     ; F1E3= 29 01       ).
callFSCV:                                    ;f1e5
                jmp (FSCV)                  ; F1E5= 6C 1E 02    l..

; OSWORD &0F - Write to RTC
; =========================
osword0F:                       ;f1e8
                jsr withTerminalROM       ; Page in ROM 15
                jmp terminal.L9656        ; Jump to OSWORD &0F routine


; Set TAPE/ROM extended vectors
; =============================
LF1EE:
                ldx #$15
LF1F0:
                lda LF1FA-1,x
                sta extendedVectorSpace+filevIndex*3-1,x
                dex
                bne LF1F0
LF1F9:
                rts

; TAPE/ROM extended vector values
; -------------------------------
LF1FA:
                .word terminal.LA08C         ; FILEV
                .byte 15
                .word terminal.L9F29         ; ARGSV
                .byte 15
                .word terminal.LA2EA         ; BPUTV
                .byte 15
                .word terminal.LA34B         ; BGETV
                .byte 15
                .word terminal.LA36D         ; GBPBV
                .byte 15
                .word terminal.LA1F9         ; FINDV
                .byte 15
                .word terminal.L9F8C         ; FSCV
                .byte 15

;-------------------------------------------------------------------------
;
; OSBYTE 109 (&6D) Make temporary Filing System permanent
;
; MasRef D.2-30
; 
osbyte6D:;f20f
                ldx hazel.activeFS; Copy active FS to current FS
                stx hazel.currentFS
                lda extendedVectorSpace+filevIndex*3+2 ; Copy XFILEV ROM to current FS ROM number
                sta hazel.currentFSROM
                rts

;-------------------------------------------------------------------------
;
; OSBYTE 20 (&14) Restore default font definitions
;
; MasRef D.2-24
; 
osbyte14:                       ;f21c
                jsr withTerminalROM          ; F21C= 20 84 F3     .s
                jmp terminal.restoreFont32To126

;-------------------------------------------------------------------------
;
; OSBYTE 25 (&19) Restore a group of font definitions
;
; MasRef D.2-28
; 
osbyte19:                       ;f222
                jsr withTerminalROM          ; F222= 20 84 F3     .s
                jmp terminal.osbyte19           ; F225= 4C A8 92    L(.

; OSBYTE &16 - Increment ROM polling semaphore
; ========================================
osbyte16:                       ;f228
                inc $0243                    ; F228= EE 43 02    nC.
                rts                          ; F22B= 60          `

; OSBYTE &17 - Decrement ROM polling semaphore
osbyte17:                       ;f22c
; ========================================
                dec $0243                    ; F22C= CE 43 02    NC.
                rts                          ; F22F= 60          `

; OSBYTE &76 - Set LEDs to keyboard state
; =======================================
osbyte76:
                php                          ; Disable IRQs
                sei
                lda #$40                     ; Turn on LEDs
                jsr LF241
                bmi LF23E                    ; Exit if Escape pending
                clc                          ; Call KEYV to read SHIFT and CTRL
                clv
                jsr callKEYV
; Returns A.b7=CTRL, A.b6=SHIFT, MI=CTRL, VS=SHIFT
LF23E:
                plp                          ; Restore IRQs
                rol a                        ; Set Carry from A bit 7 and return
                rts
; Returns A.b7=SHIFT, CS=CTRL

; Set keyboard LEDs
; -----------------
LF241:
                bcc LF24C                    ; Skip if not called from OSBYTE
                ldy #$07                     ; Turn ShiftLock LED on
                sty systemVIA.orb
                dey                          ; Turn CapsLock LED on
                sty systemVIA.orb
LF24C:
                bit $FF                      ; Test Escape and return
                rts

osbyte9A:
                txa                          ; F24F= 8A          .
LF250:
                php                          ; F250= 08          .
                sei                          ; F251= 78          x
                sta $0248                    ; F252= 8D 48 02    .H.
                sta VCONTROL                 ; F255= 8D 20 FE    . ~
                lda $0253                    ; F258= AD 53 02    -S.
                sta $0251                    ; F25B= 8D 51 02    .Q.
                plp                          ; F25E= 28          (
                rts                          ; F25F= 60          `

osbyte9B:
                txa                          ; F260= 8A          .
LF261:
                eor #$07                     ; F261= 49 07       I.
                php                          ; F263= 08          .
                sei                          ; F264= 78          x
                sta $0249                    ; F265= 8D 49 02    .I.
                sta VPALETTE                 ; F268= 8D 21 FE    .!~
                plp                          ; F26B= 28          (
                rts                          ; F26C= 60          `

;-------------------------------------------------------------------------

gsinitForFilenameParsing:
                clc


;-------------------------------------------------------------------------
;
; GSINIT
;
; MasRef D.10-1
; 
gsinitEntryPoint:
                ror stringInputOptions    ;put C into bit 7
                jsr skipSpacesAndCheckForCRInStringInput
                iny
                cmp #'"'
                beq +                       ; C=1 if double quotes
                dey
                clc                         ; clear double quotes flag
+
                ror stringInputOptions ; set doubleQuotes; move bit 7 into spaceNotATerminator
                cmp #$0D                     ; set Z if initial CR
                rts

;-------------------------------------------------------------------------
;
; GSREAD
;
; MasRef D.10-2
; MasRef C.5-8 has the | syntax
; 
gsreadEntryPoint:
                lda #stringInputOptions.goodString
                tsb stringInputOptions
                jsr LF29C                    ; F283= 20 9C F2     .r
                php                          ; save flags
                lsr stringInputOptions       ; move goodString into C
                bcc badStringError           ; branch taken if bad string
                rol stringInputOptions       ; reinstate goodString
                plp                          ; restore flags
                rts                          ;

badStringError:
                brk                          ; 
                .text $fd,"Bad string",0
LF29C:
                clc                          ; last char not !
LF29D:
                ; C=1 at this point if |! was the last sequence seen.
                stz stringInputPlingFlag
                ror stringInputPlingFlag     ; set ! flag as required
                lda (stringInputBufferAddress),y
                cmp #13                      ;EOL?
                bne notRETURN                ;taken if not EOL
                bit stringInputOptions
                bpl finishedString           ;taken if !doubleQuotes
badString:
                lda #stringInputOptions.goodString
                trb stringInputOptions
                rts

notRETURN:
                cmp #' '
                bcc badString ;taken if unprintable control char
                bne notSPACE
                bit stringInputOptions ;N=doubleQuotes, V=spaceNotATerminator
                bmi finishUpReadClearV ;taken if quoted
                bvc finishedString ;taken if space is a terminator
notSPACE:
                cmp #'"'
                bne notDOUBLEQUOTE         ;taken if not quotes
                bit stringInputOptions ;N=doubleQuotes, V=spaceNotATerminator
                bpl finishUpReadClearV ;taken if not double quotes
                iny
                lda (stringInputBufferAddress),y
                cmp #'"'
                beq finishUpReadClearV       ;taken if quotes
finishedString:
                jsr skipSpacesAndCheckForCRInStringInput
                sec
                rts

notDOUBLEQUOTE:
                cmp #'|'
                bne finishUpReadClearV       ;taken if not |
                iny                          ;skip |
                lda (stringInputBufferAddress),y
                cmp #'|'
                beq finishUpReadClearV ;branch taken if "||" - literal |
                cmp #'"'
                beq finishUpReadClearV ;branch taken if "|\"" - literal "
                cmp #'!'
                bne LF2E6                    ;taken if not "|!"

                ; Handle |! - ASCII 128-255
                iny                          ;skip !
                bra LF29D

LF2E6:
                cmp #' '
                bcc badString ;taken if | followed by a non-printable char
                cmp #'?'                     
                beq ascii127                 ;taken if "|?" - CHR$127
                jsr implementCTRLCodes       ; F2EE= 20 36 F3     6s
                bit LE34E                    ; F2F1= 2C 4E E3    ,Nc
                bra LF2F9                    ; F2F4= 80 03       ..

ascii127:
                lda #$7F
finishUpReadClearV:
                clv                          ; F2F8= B8          8
LF2F9:
                iny                          
                ora stringInputPlingFlag ;if it was a |! char, set bit 7
                clc
                rts

incAndSkipSpaces:
                iny                          ; F2FE= C8          H
skipSpacesAndCheckForCRInStringInput:
                lda (stringInputBufferAddress),y                  ; F2FF= B1 F2       1r
                cmp #' '                     ; F301= C9 20       I
                beq incAndSkipSpaces                    ; F303= F0 F9       py
LF305:
                cmp #13                     ; F305= C9 0D       I.
                rts                          ; F307= 60          `

LF308:
                bcc skipSpacesAndCheckForCRInStringInput                    ; F308= 90 F5       .u
LF30A:
                jsr skipSpacesAndCheckForCRInStringInput                    ; F30A= 20 FF F2     .r
                cmp #$2C                     ; F30D= C9 2C       I,
                bne LF305                    ; F30F= D0 F4       Pt
                iny                          ; F311= C8          H
                rts                          ; F312= 60          `

;-------------------------------------------------------------------------
;
; Modify character in A as if the SHIFT key is being pressed.
;
implementShift:
                cmp #'0'
                beq gotShiftedChar           ;taken if SHIFT+0 - no change
                cmp #$40
                beq gotShiftedChar           ;taken if SHIFT+@ - no change
                bcc shiftMaybeNumber ;taken if probably a "number" (ASCII 33-63)
                cmp #$7F
                beq gotShiftedChar  ;taken if SHIFT+DELETE - no change
                bcs shiftNumber     ;taken if SHIFT+CHR$>=127 - ???
flipBitsForShift:
                eor #$30                     ;
                cmp #$6F                     ;
                beq +                        ;taken if originally _
                cmp #$50                     ;
                bne shiftMaybeNumber         ;taken if not originally GBP
+
                eor #$1F                     ;extra step for GBP/_ toggle
shiftMaybeNumber:
                cmp #' '+1
                bcc gotShiftedChar         ;taken if non-printing char
shiftNumber:
                eor #$10                     ;
gotShiftedChar:
                rts                          ; F335= 60          `

;-------------------------------------------------------------------------
;
; See MasRef C.5-8
;
; 
implementCTRLCodes:
                cmp #$7F                     ; F336= C9 7F       I.
                beq gotCtrlChar
                bcs flipBitsForShift         ;taken if CHR$>=128
                cmp #$60
                bne +                        ;taken if not GBP
                lda #'_'                     ;GBP and _ are equivalent
+
                cmp #$40                     ;
                bcc gotCtrlChar              ;taken if CHR$<64
                and #$1F                     ;|@=0, |A=1, |a=1, etc.
gotCtrlChar:
                rts                          ; F348= 60          `

;-------------------------------------------------------------------------

osbyte247EntryPoint:
                lda $0287                    ; F349= AD 87 02    -..
                eor #$4C                     ; F34C= 49 4C       IL
                bne LF363                    ; F34E= D0 13       P.
                jmp $0287                    ; F350= 4C 87 02    L..

;-------------------------------------------------------------------------
;
; OSBYTE 144 (&90)
; Set vertical screen shift and interlace
;
; MasRef D.2-44
; 
osbyte90:
                lda $0290                    ; F353= AD 90 02    -..
                stx $0290                    ; F356= 8E 90 02    ...
                tax                          ; F359= AA          *
                tya                          ; F35A= 98          .
                and #$01                     ; F35B= 29 01       ).
                ldy $0291                    ; F35D= AC 91 02    ,..
                sta $0291                    ; F360= 8D 91 02    ...
LF363:
                rts                          ; F363= 60          `

;-------------------------------------------------------------------------
;
; OSBYTE 149 (&95) – write to JIM
;
; MasRef D.2-45
; 
osbyte95:
                tya
                sta $FD00,x
                rts

;-------------------------------------------------------------------------
;
; OSBYTE 151 (&97) – write to SHEILA
;
; MasRef D.2-45
; 
osbyte97:
                tya
                sta $FE00,x
                rts

;-------------------------------------------------------------------------
;
; OSBYTE 147 (&93) – write to FRED
;
; MasRef D.2-45
; 
osbyte93:
                tya
                sta $FC00,x
                rts

;-------------------------------------------------------------------------

LF373:
                ldx #romServiceCallCloseAllOpenFiles 
                jmp makeROMServiceCall

;-------------------------------------------------------------------------
;
; Return thunk used by withTerminalROM.
;
; On entry here, the old value of $f4 is at the top of the stack.
; 
withTerminalROMReturnThunk:
                php                          ; S=[p; old ROMSEL]
                pha                          ; S=[a; p; old ROMSEL]
                phx                          ; S=[x; a; p; old ROMSEL]
                tsx
                lda $0104,x                  ; get old ROMSEL
                jsr selectROMA               ; re-select old ROM
                bra returnThunkSuffix

;-------------------------------------------------------------------------
;
; Select the Terminal ROM. Rearrange the stack so that the original
; ROM is re-selected when withTerminalROM's caller itself returns.
;
withTerminalROM:
                pha                          ; S=[A]
                pha                          ; S=[A; A]
                pha                          ; S=[A; A; A]
                php                          ; S=[P; A; A; A]
                pha                          ; S=[A; P; A; A; A]
                phx                          ; S=[X; A; P; A; A; A]
                tsx                          ; S=[X; A; P; A; A; A; RL; RH]
                lda $0107,x                  ; get RL
                sta $0104,x                  ; overwrite placeholder A
                lda $0108,x                  ; get RH
                sta $0105,x                  ; overwrite placeholder A
                lda $F4                      ; get ROMSEL
                sta $0108,x                  ; overwrite RH

                ; put return thunk in the right spot
                lda #>withTerminalROMReturnThunk-1                
                sta $0107,x                  
                lda #<withTerminalROMReturnThunk-1                
                sta $0106,x
                
                jsr selectTerminalROM      ; F3A6= 20 90 E5     .e
                bra popXAPThenRTS

;-------------------------------------------------------------------------
;
; Select the MOS ROM (i.e., no HAZEL). Rearrange the stack so that the
; original HAZEL state is restored when withMOSROM's caller itself
; returns.
; 
withMOSROM:
                pha                          ; S=[A]
                pha                          ; S=[A; A]
                pha                          ; S=[A; A; A]
                php                          ; S=[P; A; A; A]
                pha                          ; S=[A; P; A; A; A]
                phx                          ; S=[X; A; P; A; A; A]
                tsx                          ; S=[X; A; P; A; A; A; RL; RH]
                lda $0108,x                  ; get RH
                sta $0105,x                  ; overwrite placeholder A
                lda $0107,x                  ; get RL
                sta $0104,x                  ; overwrite placeholder A

                ; put return thunk in the right spot
                lda #>withMOSROMReturnThunk-1 ; F3BE= A9 F3       )s
                sta $0107,x                  ; F3C0= 9D 07 01    ...
                lda #<withMOSROMReturnThunk-1 ; F3C3= A9 D6       )V
                sta $0106,x                  ; F3C5= 9D 06 01    ...

                lda ACCCON                   ; get ACCCON
                sta $0108,x                  ; overwrite RH
                lda #ACCCON.Y
                trb ACCCON                   ; HAZEL off
popXAPThenRTS:
                ; S=[X; A; P; RL; RH; thunkRL; thunkRH; old ACCCON/ROMSEL]
                plx                          ; F3D3= FA          z
                pla                          ; F3D4= 68          h
                plp                          ; F3D5= 28          (
                rts                          ; F3D6= 60          `

withMOSROMReturnThunk:
                php                          ; S=[P]
                pha                          ; S=[A; P]
                phx                          ; S=[X; A; P]
                tsx                          ; S=[X; A; P; old ACCCON]
                lda $0104,x                  ; get old ACCCON
                jsr selectMOSOrHAZEL         ; re-select old HAZEL state
returnThunkSuffix:
                ; double up P, as that's the easiest way of ending up
                ; discarding the TOS without affecting the flags.
                lda $0103,x
                sta $0104,x
                plx
                pla
                plp
                plp
                rts

vduChrEntryPoint:
                jsr withMOSROM               ; F3EC= 20 AB F3     +s
                ldx $F4                      ; F3EF= A6 F4       &t
                phx                          ; F3F1= DA          Z
                jsr selectTerminalROMAndANDY                    ; F3F2= 20 7F E5     .e
                jsr outputToVDU
                plx                          ; F3F8= FA          z
                jmp selectROMX                    ; F3F9= 4C 81 E5    L.e

osrdscEntryPoint:
                jsr withMOSROM               ; F3FC= 20 AB F3     +s
                jmp LC018                    ; F3FF= 4C 18 C0    L.@

oswrscEntryPoint:
                jsr withMOSROM               ; F402= 20 AB F3     +s
                jmp LDB5F                    ; F405= 4C 5F DB    L_[

starRunBOOT:
                .text "/!BOOT",13

; Table to convert channel number to the bits required by the chip
soundParameterTable:
                .byte $e0,$c0,$a0,$80
                
LF413:
                jmp LF520                    ; F413= 4C 20 F5    L u

LF416:
                ldx #$00                     ; F416= A2 00       ".
                lda $0838                    ; F418= AD 38 08    -8.
                bne LF421                    ; F41B= D0 04       P.
                inx                          ; F41D= E8          h
                dec $0838                    ; F41E= CE 38 08    N8.
LF421:
                stx $083B                    ; F421= 8E 3B 08    .;.
                ldx #$08                     ; F424= A2 08       ".
LF426:
                dex                          ; F426= CA          J
                lda $0800,x                  ; F427= BD 00 08    =..
                beq LF413                    ; F42A= F0 E7       pg
                lda $02CE,x                  ; F42C= BD CE 02    =N.
                bmi LF436                    ; F42F= 30 05       0.
                lda $0818,x                  ; F431= BD 18 08    =..
                bne LF43E                    ; F434= D0 08       P.
LF436:
                jsr LF528                    ; F436= 20 28 F5     (u
                lda $0818,x                  ; F439= BD 18 08    =..
                beq LF450                    ; F43C= F0 12       p.
LF43E:
                inc a                        ; F43E= 1A          .
                beq LF453                    ; F43F= F0 12       p.
                dec $081C,x                  ; F441= DE 1C 08    ^..
                bne LF453                    ; F444= D0 0D       P.
                lda #$05                     ; F446= A9 05       ).
                sta $081C,x                  ; F448= 9D 1C 08    ...
                dec $0818,x                  ; F44B= DE 18 08    ^..
                bne LF453                    ; F44E= D0 03       P.
LF450:
                jsr LF528                    ; F450= 20 28 F5     (u
LF453:
                lda $0824,x                  ; F453= BD 24 08    =$.
                beq LF45D                    ; F456= F0 05       p.
                dec $0824,x                  ; F458= DE 24 08    ^$.
                bne LF413                    ; F45B= D0 B6       P6
LF45D:
                ldy $0820,x                  ; F45D= BC 20 08    < .
                cpy #$FF                     ; F460= C0 FF       @.
                beq LF413                    ; F462= F0 AF       p/
                lda $08C0,y                  ; F464= B9 C0 08    9@.
                and #$7F                     ; F467= 29 7F       ).
                sta $0824,x                  ; F469= 9D 24 08    .$.
                lda $0808,x                  ; F46C= BD 08 08    =..
                cmp #$04                     ; F46F= C9 04       I.
                beq LF4D0                    ; F471= F0 5D       p]
                clc                          ; F473= 18          .
                adc $0820,x                  ; F474= 7D 20 08    } .
                tay                          ; F477= A8          (
                lda $08CB,y                  ; F478= B9 CB 08    9K.
                sec                          ; F47B= 38          8
                sbc #$3F                     ; F47C= E9 3F       i?
                sta $083A                    ; F47E= 8D 3A 08    .:.
                lda $08C7,y                  ; F481= B9 C7 08    9G.
                sta $0839                    ; F484= 8D 39 08    .9.
                lda $0804,x                  ; F487= BD 04 08    =..
LF48A:
                pha                          ; F48A= 48          H
                clc                          ; F48B= 18          .
                adc $0839                    ; F48C= 6D 39 08    m9.
                bvc LF498                    ; F48F= 50 07       P.
                rol a                        ; F491= 2A          *
                lda #$3F                     ; F492= A9 3F       )?
                bcs LF498                    ; F494= B0 02       0.
                eor #$FF                     ; F496= 49 FF       I.
LF498:
                sta $0804,x                  ; F498= 9D 04 08    ...
                rol a                        ; F49B= 2A          *
                eor $0804,x                  ; F49C= 5D 04 08    ]..
                bpl LF4AA                    ; F49F= 10 09       ..
                lda #$3F                     ; F4A1= A9 3F       )?
                bcc LF4A7                    ; F4A3= 90 02       ..
                eor #$FF                     ; F4A5= 49 FF       I.
LF4A7:
                sta $0804,x                  ; F4A7= 9D 04 08    ...
LF4AA:
                dec $0839                    ; F4AA= CE 39 08    N9.
                lda $0804,x                  ; F4AD= BD 04 08    =..
                sec                          ; F4B0= 38          8
                sbc $083A                    ; F4B1= ED 3A 08    m:.
                eor $0839                    ; F4B4= 4D 39 08    M9.
                bmi LF4C2                    ; F4B7= 30 09       0.
                lda $083A                    ; F4B9= AD 3A 08    -:.
                sta $0804,x                  ; F4BC= 9D 04 08    ...
                inc $0808,x                  ; F4BF= FE 08 08    ~..
LF4C2:
                pla                          ; F4C2= 68          h
                eor $0804,x                  ; F4C3= 5D 04 08    ]..
                and #$F8                     ; F4C6= 29 F8       )x
                beq LF4D0                    ; F4C8= F0 06       p.
                lda $0804,x                  ; F4CA= BD 04 08    =..
                jsr LF599                    ; F4CD= 20 99 F5     .u
LF4D0:
                lda $0810,x                  ; F4D0= BD 10 08    =..
                cmp #$03                     ; F4D3= C9 03       I.
                beq LF520                    ; F4D5= F0 49       pI
                lda $0814,x                  ; F4D7= BD 14 08    =..
                bne LF504                    ; F4DA= D0 28       P(
                inc $0810,x                  ; F4DC= FE 10 08    ~..
                lda $0810,x                  ; F4DF= BD 10 08    =..
                cmp #$03                     ; F4E2= C9 03       I.
                bne LF4F4                    ; F4E4= D0 0E       P.
                ldy $0820,x                  ; F4E6= BC 20 08    < .
                lda $08C0,y                  ; F4E9= B9 C0 08    9@.
                bmi LF520                    ; F4EC= 30 32       02
                stz $0830,x                  ; F4EE= 9E 30 08    .0.
                stz $0810,x                  ; F4F1= 9E 10 08    ...
LF4F4:
                lda $0810,x                  ; F4F4= BD 10 08    =..
                clc                          ; F4F7= 18          .
                adc $0820,x                  ; F4F8= 7D 20 08    } .
                tay                          ; F4FB= A8          (
                lda $08C4,y                  ; F4FC= B9 C4 08    9D.
                sta $0814,x                  ; F4FF= 9D 14 08    ...
                beq LF520                    ; F502= F0 1C       p.
LF504:
                dec $0814,x                  ; F504= DE 14 08    ^..
                lda $0820,x                  ; F507= BD 20 08    = .
                clc                          ; F50A= 18          .
                adc $0810,x                  ; F50B= 7D 10 08    }..
                tay                          ; F50E= A8          (
                lda $08C1,y                  ; F50F= B9 C1 08    9A.
                clc                          ; F512= 18          .
                adc $0830,x                  ; F513= 7D 30 08    }0.
                sta $0830,x                  ; F516= 9D 30 08    .0.
                clc                          ; F519= 18          .
                adc $080C,x                  ; F51A= 7D 0C 08    }..
                jsr LF5D5                    ; F51D= 20 D5 F5     Uu
LF520:
                cpx #$04                     ; F520= E0 04       `.
                beq LF527                    ; F522= F0 03       p.
                jmp LF426                    ; F524= 4C 26 F4    L&t

LF527:
                rts                          ; F527= 60          `

LF528:
                lda $0808,x                  ; F528= BD 08 08    =..
                cmp #$04                     ; F52B= C9 04       I.
                beq LF534                    ; F52D= F0 05       p.
                lda #$03                     ; F52F= A9 03       ).
                sta $0808,x                  ; F531= 9D 08 08    ...
LF534:
                lda $02CE,x                  ; F534= BD CE 02    =N.
                beq LF54D                    ; F537= F0 14       p.
                lda #$00                     ; F539= A9 00       ).
                stz $02CE,x                  ; F53B= 9E CE 02    .N.
                ldy #$04                     ; F53E= A0 04        .
LF540:
                sta $082B,y                  ; F540= 99 2B 08    .+.
                dey                          ; F543= 88          .
                bne LF540                    ; F544= D0 FA       Pz
                stz $0818,x                  ; F546= 9E 18 08    ...
                dey                          ; F549= 88          .
                sty $0838                    ; F54A= 8C 38 08    .8.
LF54D:
                lda $0828,x                  ; F54D= BD 28 08    =(.
                beq LF5B2                    ; F550= F0 60       p`
                lda $083B                    ; F552= AD 3B 08    -;.
                beq LF58B                    ; F555= F0 34       p4
                stz $0828,x                  ; F557= 9E 28 08    .(.
LF55A:
                jmp LF685                    ; F55A= 4C 85 F6    L.v

LF55D:
                jsr LF592                    ; F55D= 20 92 F5     .u
                tya                          ; F560= 98          .
                stz $0818,x                  ; F561= 9E 18 08    ...
                stz $02CE,x                  ; F564= 9E CE 02    .N.
                stz $0800,x                  ; F567= 9E 00 08    ...
                ldy #$03                     ; F56A= A0 03        .
LF56C:
                sta $082C,y                  ; F56C= 99 2C 08    .,.
                dey                          ; F56F= 88          .
                bpl LF56C                    ; F570= 10 FA       .z
                sty $0838                    ; F572= 8C 38 08    .8.
                bra LF5DA                    ; F575= 80 63       .c

LF577:
                php                          ; F577= 08          .
                sei                          ; F578= 78          x
                lda $0808,x                  ; F579= BD 08 08    =..
                cmp #$04                     ; F57C= C9 04       I.
                bne LF58A                    ; F57E= D0 0A       P.
                jsr osbyte98                    ; F580= 20 EF E9     oi
                bcc LF58A                    ; F583= 90 05       ..
                lda #$00                     ; F585= A9 00       ).
                stz $0800,x                  ; F587= 9E 00 08    ...
LF58A:
                plp                          ; F58A= 28          (
LF58B:
                ldy $0820,x                  ; F58B= BC 20 08    < .
                cpy #$FF                     ; F58E= C0 FF       @.
                bne LF604                    ; F590= D0 72       Pr
LF592:
                lda #$04                     ; F592= A9 04       ).
                sta $0808,x                  ; F594= 9D 08 08    ...
                lda #$C0                     ; F597= A9 C0       )@
LF599:
                sta $0804,x                  ; F599= 9D 04 08    ...
                ldy $0262                    ; F59C= AC 62 02    ,b.
                beq LF5A3                    ; F59F= F0 02       p.
                lda #$C0                     ; F5A1= A9 C0       )@
LF5A3:
                sec                          ; F5A3= 38          8
                sbc #$40                     ; F5A4= E9 40       i@
                lsr a                        ; F5A6= 4A          J
                lsr a                        ; F5A7= 4A          J
                lsr a                        ; F5A8= 4A          J
                eor #$0F                     ; F5A9= 49 0F       I.
                ora soundParameterTable-bufferNumberSound0,x                  ; F5AB= 1D 0B F4    ..t
                ora #$10                     ; F5AE= 09 10       ..
                bra LF5E6                    ; F5B0= 80 34       .4

LF5B2:
                jsr osbyte98                    ; F5B2= 20 EF E9     oi
                bcs LF577                    ; F5B5= B0 C0       0@
                and #$03                     ; F5B7= 29 03       ).
                beq LF55A                    ; F5B9= F0 9F       p.
                lda $0838                    ; F5BB= AD 38 08    -8.
                beq LF58B                    ; F5BE= F0 CB       pK
                inc $0828,x                  ; F5C0= FE 28 08    ~(.
                tay                          ; F5C3= A8          (
                bpl LF5D0                    ; F5C4= 10 0A       ..
                jsr osbyte98                    ; F5C6= 20 EF E9     oi
                and #$03                     ; F5C9= 29 03       ).
                sta $0838                    ; F5CB= 8D 38 08    .8.
                bra LF58B                    ; F5CE= 80 BB       .;

LF5D0:
                dec $0838                    ; F5D0= CE 38 08    N8.
                bra LF58B                    ; F5D3= 80 B6       .6

LF5D5:
                cmp $082C,x                  ; F5D5= DD 2C 08    ],.
                beq LF604                    ; F5D8= F0 2A       p*
LF5DA:
                sta $082C,x                  ; F5DA= 9D 2C 08    .,.
                cpx #$04                     ; F5DD= E0 04       `.
                bne LF605                    ; F5DF= D0 24       P$
                and #$0F                     ; F5E1= 29 0F       ).
                ora soundParameterTable-bufferNumberSound0,x                  ; F5E3= 1D 0B F4    ..t
LF5E6:
                php                          ; F5E6= 08          .
LF5E7:
                sei                          ; F5E7= 78          x
                ldy #$FF                     ; F5E8= A0 FF        .
                sty systemVIA.ddra            ; F5EA= 8C 43 FE    .C~
                sta systemVIA.oraNoHandshake            ; F5ED= 8D 4F FE    .O~
                iny                          ; F5F0= C8          H
                sty systemVIA.orb            ; F5F1= 8C 40 FE    .@~
                ldy #$02                     ; F5F4= A0 02        .
LF5F6:
                dey                          ; F5F6= 88          .
                bne LF5F6                    ; F5F7= D0 FD       P}
                ldy #$08                     ; F5F9= A0 08        .
                sty systemVIA.orb            ; F5FB= 8C 40 FE    .@~
                ldy #$04                     ; F5FE= A0 04        .
LF600:
                dey                          ; F600= 88          .
                bne LF600                    ; F601= D0 FD       P}
                plp                          ; F603= 28          (
LF604:
                rts                          ; F604= 60          `

LF605:
                pha                          ; F605= 48          H
                and #$03                     ; F606= 29 03       ).
                sta $083C                    ; F608= 8D 3C 08    .<.
                stz $083D                    ; F60B= 9C 3D 08    .=.
                pla                          ; F60E= 68          h
                lsr a                        ; F60F= 4A          J
                lsr a                        ; F610= 4A          J
LF611:
                cmp #$0C                     ; F611= C9 0C       I.
                bcc LF61C                    ; F613= 90 07       ..
                inc $083D                    ; F615= EE 3D 08    n=.
                sbc #$0C                     ; F618= E9 0C       i.
                bne LF611                    ; F61A= D0 F5       Pu
LF61C:
                tay                          ; F61C= A8          (
                lda $083D                    ; F61D= AD 3D 08    -=.
                pha                          ; F620= 48          H
                lda LF6E4,y                  ; F621= B9 E4 F6    9dv
                sta $083D                    ; F624= 8D 3D 08    .=.
                lda LF6F0,y                  ; F627= B9 F0 F6    9pv
                pha                          ; F62A= 48          H
                and #$03                     ; F62B= 29 03       ).
                sta $083E                    ; F62D= 8D 3E 08    .>.
                pla                          ; F630= 68          h
                lsr a                        ; F631= 4A          J
                lsr a                        ; F632= 4A          J
                lsr a                        ; F633= 4A          J
                lsr a                        ; F634= 4A          J
                sta $083F                    ; F635= 8D 3F 08    .?.
                lda $083D                    ; F638= AD 3D 08    -=.
                ldy $083C                    ; F63B= AC 3C 08    ,<.
                beq LF64C                    ; F63E= F0 0C       p.
LF640:
                sec                          ; F640= 38          8
                sbc $083F                    ; F641= ED 3F 08    m?.
                bcs LF649                    ; F644= B0 03       0.
                dec $083E                    ; F646= CE 3E 08    N>.
LF649:
                dey                          ; F649= 88          .
                bne LF640                    ; F64A= D0 F4       Pt
LF64C:
                sta $083D                    ; F64C= 8D 3D 08    .=.
                pla                          ; F64F= 68          h
                tay                          ; F650= A8          (
                beq LF65C                    ; F651= F0 09       p.
LF653:
                lsr $083E                    ; F653= 4E 3E 08    N>.
                ror $083D                    ; F656= 6E 3D 08    n=.
                dey                          ; F659= 88          .
                bne LF653                    ; F65A= D0 F7       Pw
LF65C:
                lda $083D                    ; F65C= AD 3D 08    -=.
                clc                          ; F65F= 18          .
                adc LE165,x                  ; F660= 7D 65 E1    }ea
                sta $083D                    ; F663= 8D 3D 08    .=.
                bcc LF66B                    ; F666= 90 03       ..
                inc $083E                    ; F668= EE 3E 08    n>.
LF66B:
                and #$0F                     ; F66B= 29 0F       ).
                ora soundParameterTable-bufferNumberSound0,x                  ; F66D= 1D 0B F4    ..t
                php                          ; F670= 08          .
                sei                          ; F671= 78          x
                jsr LF5E6                    ; F672= 20 E6 F5     fu
                lda $083D                    ; F675= AD 3D 08    -=.
                lsr $083E                    ; F678= 4E 3E 08    N>.
                ror a                        ; F67B= 6A          j
                lsr $083E                    ; F67C= 4E 3E 08    N>.
                ror a                        ; F67F= 6A          j
                lsr a                        ; F680= 4A          J
                lsr a                        ; F681= 4A          J
                jmp LF5E7                    ; F682= 4C E7 F5    Lgu

LF685:
                php                          ; F685= 08          .
                sei                          ; F686= 78          x
                jsr osbyte91                    ; F687= 20 F4 E9     ti
                pha                          ; F68A= 48          H
                and #$04                     ; F68B= 29 04       ).
                beq LF6A2                    ; F68D= F0 13       p.
                pla                          ; F68F= 68          h
                ldy $0820,x                  ; F690= BC 20 08    < .
                iny                          ; F693= C8          H
                bne LF699                    ; F694= D0 03       P.
                jsr LF592                    ; F696= 20 92 F5     .u
LF699:
                jsr osbyte91                    ; F699= 20 F4 E9     ti
                jsr osbyte91                    ; F69C= 20 F4 E9     ti
                plp                          ; F69F= 28          (
                bra LF6E0                    ; F6A0= 80 3E       .>

LF6A2:
                pla                          ; F6A2= 68          h
                and #$F8                     ; F6A3= 29 F8       )x
                asl a                        ; F6A5= 0A          .
                bcc LF6B3                    ; F6A6= 90 0B       ..
                eor #$FF                     ; F6A8= 49 FF       I.
                lsr a                        ; F6AA= 4A          J
                sec                          ; F6AB= 38          8
                sbc #$40                     ; F6AC= E9 40       i@
                jsr LF599                    ; F6AE= 20 99 F5     .u
                lda #$FF                     ; F6B1= A9 FF       ).
LF6B3:
                sta $0820,x                  ; F6B3= 9D 20 08    . .
                lda #$05                     ; F6B6= A9 05       ).
                sta $081C,x                  ; F6B8= 9D 1C 08    ...
                lda #$01                     ; F6BB= A9 01       ).
                sta $0824,x                  ; F6BD= 9D 24 08    .$.
                stz $0814,x                  ; F6C0= 9E 14 08    ...
                stz $0808,x                  ; F6C3= 9E 08 08    ...
                stz $0830,x                  ; F6C6= 9E 30 08    .0.
                lda #$FF                     ; F6C9= A9 FF       ).
                sta $0810,x                  ; F6CB= 9D 10 08    ...
                jsr osbyte91                    ; F6CE= 20 F4 E9     ti
                sta $080C,x                  ; F6D1= 9D 0C 08    ...
                jsr osbyte91                    ; F6D4= 20 F4 E9     ti
                plp                          ; F6D7= 28          (
                pha                          ; F6D8= 48          H
                lda $080C,x                  ; F6D9= BD 0C 08    =..
                jsr LF5D5                    ; F6DC= 20 D5 F5     Uu
                pla                          ; F6DF= 68          h
LF6E0:
                sta $0818,x                  ; F6E0= 9D 18 08    ...
                rts                          ; F6E3= 60          `

LF6E4:
;BEQ LF69D        :\ F6E4= F0 B7       p7
                .byte $F0
                .byte $B7
                .byte $82                    ; F6E6= 82          .
                .byte $4F                    ; F6E7= 4F          O
;JSR LC8F3        :\ F6E8= 20 F3 C8     sH
                .byte $20
                .byte $F3
                .byte $C8
                ldy #$7B                     ; F6EB= A0 7B        {
                .byte $57                    ; F6ED= 57          W
                and $16,x                    ; F6EE= 35 16       5.
LF6F0:
                .byte $E7                    ; F6F0= E7          g
                .byte $D7                    ; F6F1= D7          W
                .byte $CB                    ; F6F2= CB          K
                .byte $C3                    ; F6F3= C3          C
                .byte $B7                    ; F6F4= B7          7
                tax                          ; F6F5= AA          *
                ldx #$9A                     ; F6F6= A2 9A       ".
                sta ($8A)                    ; F6F8= 92 8A       ..
                .byte $82                    ; F6FA= 82          .
                ply                          ; F6FB= 7A          z
LF6FC:
                lda #$FF                     ; F6FC= A9 FF       ).
                sta $F5                      ; F6FE= 85 F5       .u
                rts                          ; F700= 60          `

LF701:
                inc $F5                      ; F701= E6 F5       fu
                ldy $F5                      ; F703= A4 F5       $u
                ldx #romServiceCallROMFilingSystemInitialize
LF707:
                php                          ; F707= 08          .
                jsr makeROMServiceCall                    ; F708= 20 72 EE     rn
                plp                          ; F70B= 28          (
                cmp #$01                     ; F70C= C9 01       I.
                tya                          ; F70E= 98          .
                rts                          ; F70F= 60          `

LF710:
                ldx #$0E                     ; F710= A2 0E       ".
                ldy #$FF                     ; F712= A0 FF        .
                jmp LF707                    ; F714= 4C 07 F7    L.w

LF717:
                lda $03CB                    ; F717= AD CB 03    -K.
                sta $F6                      ; F71A= 85 F6       .v
                lda $03CC                    ; F71C= AD CC 03    -L.
                sta $F7                      ; F71F= 85 F7       .w
                lda $F5                      ; F721= A5 F5       %u
                rts                          ; F723= 60          `

LF724:
                ldx #$FF                     ; F724= A2 FF       ".
                lda $EC                      ; F726= A5 EC       %l
                ora $ED                      ; F728= 05 ED       .m
                bne LF732                    ; F72A= D0 06       P.
                lda #$81                     ; F72C= A9 81       ).
                sta systemVIA.ier            ; F72E= 8D 4E FE    .N~
                inx                          ; F731= E8          h
LF732:
                stx $0242                    ; F732= 8E 42 02    .B.
LF735:
                php                          ; F735= 08          .
                lda $025A                    ; F736= AD 5A 02    -Z.
                lsr a                        ; F739= 4A          J
                and #$18                     ; F73A= 29 18       ).
                ora #$06                     ; F73C= 09 06       ..
                sta systemVIA.orb            ; F73E= 8D 40 FE    .@~
                lsr a                        ; F741= 4A          J
                ora #$07                     ; F742= 09 07       ..
                sta systemVIA.orb            ; F744= 8D 40 FE    .@~
                jsr LF91C                    ; F747= 20 1C F9     .y
                pla                          ; F74A= 68          h
                rts                          ; F74B= 60          `

; KEYV handler
; ============
LF74C:
                bvc LF758                    ; F74C= 50 0A       P.
                lda #$01                     ; F74E= A9 01       ).
                sta systemVIA.ier            ; F750= 8D 4E FE    .N~
                bcs LF75D                    ; F753= B0 08       0.
                jmp LF865                    ; F755= 4C 65 F8    Lex

LF758:
                bcc LF760                    ; F758= 90 06       ..
                jmp LF916                    ; F75A= 4C 16 F9    L.y

LF75D:
                inc $0242                    ; F75D= EE 42 02    nB.

; Test Shift & Ctrl keys
; ----------------------
LF760:
                lda $025A                    ; F760= AD 5A 02    -Z.
                and #$B7                     ; F763= 29 B7       )7
                ldx #$00                     ; F765= A2 00       ".
                jsr interrogateKeyboard                    ; F767= 20 80 F8     .x
                bcc LF76E                    ; F76A= 90 02       ..
                stx $FA                      ; F76C= 86 FA       .z
LF76E:
                clv                          ; F76E= B8          8
                bpl LF776                    ; F76F= 10 05       ..
                bit LE34E                    ; F771= 2C 4E E3    ,Nc
                ora #$08                     ; F774= 09 08       ..
LF776:
                inx                          ; F776= E8          h
                jsr interrogateKeyboard                    ; F777= 20 80 F8     .x
                bcc LF735                    ; F77A= 90 B9       .9
                bpl LF780                    ; F77C= 10 02       ..
                ora #$40                     ; F77E= 09 40       .@
LF780:
                sta $025A                    ; F780= 8D 5A 02    .Z.
                ldx $EC                      ; F783= A6 EC       &l
                beq LF7D4                    ; F785= F0 4D       pM
                jsr interrogateKeyboard                    ; F787= 20 80 F8     .x
                bmi LF799                    ; F78A= 30 0D       0.
                cpx $EC                      ; F78C= E4 EC       dl
LF78E:
                stx $EC                      ; F78E= 86 EC       .l
                bne LF7D4                    ; F790= D0 42       PB
                stz $EC                      ; F792= 64 EC       dl
LF794:
                jsr LF875                    ; F794= 20 75 F8     ux
                bra LF7D4                    ; F797= 80 3B       .;

LF799:
                cpx $EC                      ; F799= E4 EC       dl
                bne LF78E                    ; F79B= D0 F1       Pq
                lda $E7                      ; F79D= A5 E7       %g
                beq LF7D4                    ; F79F= F0 33       p3
                dec $E7                      ; F7A1= C6 E7       Fg
                bne LF7D4                    ; F7A3= D0 2F       P/
                lda $02CA                    ; F7A5= AD CA 02    -J.
                sta $E7                      ; F7A8= 85 E7       .g
                lda $0255                    ; F7AA= AD 55 02    -U.
                sta $02CA                    ; F7AD= 8D CA 02    .J.
                lda $025A                    ; F7B0= AD 5A 02    -Z.
                ldx $EC                      ; F7B3= A6 EC       &l
                cpx #$D0                     ; F7B5= E0 D0       `P
                beq LF7CB                    ; F7B7= F0 12       p.
                cpx #$C0                     ; F7B9= E0 C0       `@
                bne LF7D6                    ; F7BB= D0 19       P.
                ora #$A0                     ; F7BD= 09 A0       .
                bit $FA                      ; F7BF= 24 FA       $z
                bpl LF7C7                    ; F7C1= 10 04       ..
                ora #$10                     ; F7C3= 09 10       ..
                eor #$80                     ; F7C5= 49 80       I.
LF7C7:
                eor #$90                     ; F7C7= 49 90       I.
                bra LF7CF                    ; F7C9= 80 04       ..

LF7CB:
                ora #$90                     ; F7CB= 09 90       ..
                eor #$A0                     ; F7CD= 49 A0       I
LF7CF:
                sta $025A                    ; F7CF= 8D 5A 02    .Z.
                stz $E7                      ; F7D2= 64 E7       dg
LF7D4:
                bra LF845                    ; F7D4= 80 6F       .o

LF7D6:
                lda LF801+1,x                ; F7D6= BD 02 F8    =.x ; ?????????
                beq LF7E3                    ; F7D9= F0 08       p.
                cmp #$9D                     ; F7DB= C9 9D       I.
                bne LF7E6                    ; F7DD= D0 07       P.
                eor #$10                     ; F7DF= 49 10       I.
                bra LF7EA                    ; F7E1= 80 07       ..

LF7E3:
                lda $026B                    ; F7E3= AD 6B 02    -k.
LF7E6:
                cmp #$A0                     ; F7E6= C9 A0       I
                bcc LF7F6                    ; F7E8= 90 0C       ..
LF7EA:
                sbc #$31                     ; F7EA= E9 31       i1
                adc $027E                    ; F7EC= 6D 7E 02    m~.
                eor #$80                     ; F7EF= 49 80       I.
                ldx $028E                    ; F7F1= AE 8E 02    ...
                bne LF839                    ; F7F4= D0 43       PC
LF7F6:
                ldx $025A                    ; F7F6= AE 5A 02    .Z.
                stx $FA                      ; F7F9= 86 FA       .z
                rol $FA                      ; F7FB= 26 FA       &z
                bpl LF806                    ; F7FD= 10 07       ..
                ldx $ED                      ; F7FF= A6 ED       &m
LF801:
                bne LF794                    ; F801= D0 91       P.
                jsr implementCTRLCodes       ; F803= 20 36 F3     6s
LF806:
                rol $FA                      ; F806= 26 FA       &z
                bmi LF811                    ; F808= 30 07       0.
                jsr implementShift           ; F80A= 20 13 F3     .s
                rol $FA                      ; F80D= 26 FA       &z
                bra LF81D                    ; F80F= 80 0C       ..

LF811:
                rol $FA                      ; F811= 26 FA       &z
                bmi LF822                    ; F813= 30 0D       0.
                jsr isLetter                    ; F815= 20 71 EA     qj
                bcs LF822                    ; F818= B0 08       0.
                jsr implementShift           ; F81A= 20 13 F3     .s
LF81D:
                ldx $025A                    ; F81D= AE 5A 02    .Z.
                bpl LF82D                    ; F820= 10 0B       ..
LF822:
                rol $FA                      ; F822= 26 FA       &z
                bpl LF82D                    ; F824= 10 07       ..
                ldx $ED                      ; F826= A6 ED       &m
                bne LF801                    ; F828= D0 D7       PW
                jsr implementShift           ; F82A= 20 13 F3     .s
LF82D:
                cmp $026C                    ; F82D= CD 6C 02    Ml.
                bne LF839                    ; F830= D0 07       P.
                ldx $0275                    ; F832= AE 75 02    .u.
                bne LF839                    ; F835= D0 02       P.
                stz $E7                      ; F837= 64 E7       dg
LF839:
                tay                          ; F839= A8          (
                jsr LF9A6                    ; F83A= 20 A6 F9     &y
                lda $0259                    ; F83D= AD 59 02    -Y.
                bne LF845                    ; F840= D0 03       P.
                jsr LEA7E                    ; F842= 20 7E EA     ~j
LF845:
                ldx $ED                      ; F845= A6 ED       &m
                beq LF852                    ; F847= F0 09       p.
                jsr interrogateKeyboard                    ; F849= 20 80 F8     .x
                stx $ED                      ; F84C= 86 ED       .m
                bmi LF868                    ; F84E= 30 18       0.
                stz $ED                      ; F850= 64 ED       dm
LF852:
                ldy #$EC                     ; F852= A0 EC        l
                jsr LF96C                    ; F854= 20 6C F9     ly
                bmi LF862                    ; F857= 30 09       0.
                lda $EC                      ; F859= A5 EC       %l
                sta $ED                      ; F85B= 85 ED       .m
LF85D:
                stx $EC                      ; F85D= 86 EC       .l
                jsr LF875                    ; F85F= 20 75 F8     ux
LF862:
                jmp LF724                    ; F862= 4C 24 F7    L$w

LF865:
                jsr interrogateKeyboard                    ; F865= 20 80 F8     .x
LF868:
                lda $EC                      ; F868= A5 EC       %l
                bne LF862                    ; F86A= D0 F6       Pv
                ldy #$ED                     ; F86C= A0 ED        m
                jsr LF96C                    ; F86E= 20 6C F9     ly
                bmi LF862                    ; F871= 30 EF       0o
                bra LF85D                    ; F873= 80 E8       .h

LF875:
                ldx #$01                     ; F875= A2 01       ".
                stx $E7                      ; F877= 86 E7       .g
                ldx $0254                    ; F879= AE 54 02    .T.
                stx $02CA                    ; F87C= 8E CA 02    .J.
                rts                          ; F87F= 60          `

;-------------------------------------------------------------------------
;
; Read a single key's state from the keyboard
;
; Entry:
;
; X = key to test
;
; Exit:
;
; X=$80, N=1 if key pressed; X=$00, N=0 if key not pressed
;
; Preserves: A/C
; 
interrogateKeyboard: .proc
                ldy #$03                     ;write to keyboard
                sty systemVIA.orb
                ldy #$7F
                sty systemVIA.ddra           ;bit 7=input, bits 6-0=output
                stx systemVIA.oraNoHandshake ;store key value
                nop
                ldx systemVIA.iraNoHandshake ;read key state
                rts
                .pend

; Default keyboard table
; ======================
LF892:
                .text "q345"
                .byte $84
                .text "8"
                .byte $87
                .text "-^"
                .byte $8C
                .byte $B6
                .byte $B7
;     q345        f4       8        f7       -^      Left       k6       k7
osbyte92:
                ldy $FC00,x
                rts
                .byte $80
                .text "wet7i90_"
                .byte $8E
                .byte $B8
                .byte $B9
;     f0       wet7i90_      Down       k8       k9
osbyte94:
                ldy $FD00,x
                rts
                .text "12dr6uop["
                .byte $8F
                .byte $AB
                .byte $AD
                .byte $9D
;     12dr6uop[        Up       k+       k-     kRet
LF8BF:
                jmp (EVENTV)
                .byte 1
                .text "axfyjk@:"
                .byte $0D
                .byte $AF
                .byte $FF
                .byte $AE
; caps       axfyjk@:       ret       k/     kDel       k.
LF8CF:
                jmp ($FDFE)
                .byte 2
                .text "scghnl;]"
                .byte $7F
                .byte $A3
                .byte $AA
                .byte $AC
; shlk       scghnl;]       del       k#       k*       k,
call00FA:
                jmp ($00FA)
                .byte 0
                .text "z vbm,./"
                .byte $8B
                .byte $B0
                .byte $B1
                .byte $B3
;  tab       z vbm,./      copy       k0       k1       k3
                .byte 0
                .byte 0
                .byte 0
                .byte 27
                .byte $81
                .byte $82
                .byte $83
                .byte $85
                .byte $86
                .byte $88
                .byte $89
                .byte $5C
                .byte $8D
                .byte $B4
                .byte $B5
                .byte $B2
;   esc       f1       f2       f3       f5       f6       f8       f9        \    right       k4       k5       k2
LF8FF:
                bit LE34E                    ; Set V
callKEYV:                                    ;f902
                jmp (KEYV)                  ; Jump to KEYV

;-------------------------------------------------------------------------
;
; OSBYTE 131 (&83) - Read Operating System High Water Mark (OSHWM)
;
; MasRef D.2-40
; 
osbyte83:
                ldy $0244                    ; F905= AC 44 02    ,D.
                ldx #$00                     ; F908= A2 00       ".
                rts                          ; F90A= 60          `

;-------------------------------------------------------------------------
;
; OSBYTE 120 ($78) - Write keys pressed information
;
; MasRef D.2-33
;
osbyte78:                          ;f90b
                sty $EC                      ; F90B= 84 EC       .l
                stx $ED                      ; F90D= 86 ED       .m
                rts                          ; F90F= 60          `

osbyte7A:
                ldx #$10                     ; F910= A2 10       ".
                clv                          ; F912= B8          8
                sec                          ; F913= 38          8
                bra callKEYV                    ; F914= 80 EC       .l

LF916:
                txa                          ; F916= 8A          .
                bpl LF923                    ; F917= 10 0A       ..
                jsr interrogateKeyboard                    ; F919= 20 80 F8     .x
LF91C:
                lda #$0B                     ; F91C= A9 0B       ).
                sta systemVIA.orb            ; F91E= 8D 40 FE    .@~
                txa                          ; F921= 8A          .
                rts                          ; F922= 60          `

LF923:
                stx $02CB                    ; F923= 8E CB 02    .K.
                lda #$FF                     ; F926= A9 FF       ).
                sta $02CC                    ; F928= 8D CC 02    .L.
                ldx #$0C                     ; F92B= A2 0C       ".
                lda #$7F                     ; F92D= A9 7F       ).
                sta systemVIA.ddra            ; F92F= 8D 43 FE    .C~
                lda #$03                     ; F932= A9 03       ).
                sta systemVIA.orb            ; F934= 8D 40 FE    .@~
LF937:
                lda #$0F                     ; F937= A9 0F       ).
                sta systemVIA.oraNoHandshake            ; F939= 8D 4F FE    .O~
                lda #$01                     ; F93C= A9 01       ).
                sta systemVIA.ifr            ; F93E= 8D 4D FE    .M~
                stx systemVIA.oraNoHandshake            ; F941= 8E 4F FE    .O~
                bit systemVIA.ifr            ; F944= 2C 4D FE    ,M~
                beq LF964                    ; F947= F0 1B       p.
                txa                          ; F949= 8A          .
LF94A:
                clc                          ; F94A= 18          .
                adc #$10                     ; F94B= 69 10       i.
                bmi LF964                    ; F94D= 30 15       0.
                sta systemVIA.oraNoHandshake            ; F94F= 8D 4F FE    .O~
                bit systemVIA.iraNoHandshake            ; F952= 2C 4F FE    ,O~
                bpl LF94A                    ; F955= 10 F3       .s
                cmp $02CB                    ; F957= CD CB 02    MK.
                bcc LF94A                    ; F95A= 90 EE       .n
                cmp $02CC                    ; F95C= CD CC 02    ML.
                bcs LF94A                    ; F95F= B0 E9       0i
                sta $02CC                    ; F961= 8D CC 02    .L.
LF964:
                dex                          ; F964= CA          J
                bpl LF937                    ; F965= 10 D0       .P
                ldx $02CC                    ; F967= AE CC 02    .L.
                bra LF91C                    ; F96A= 80 B0       .0

LF96C:
                ldx #$0C                     ; F96C= A2 0C       ".
LF96E:
                jsr LF9A6                    ; F96E= 20 A6 F9     &y
                lda #$7F                     ; F971= A9 7F       ).
                sta systemVIA.ddra            ; F973= 8D 43 FE    .C~
                lda #$03                     ; F976= A9 03       ).
                sta systemVIA.orb            ; F978= 8D 40 FE    .@~
                lda #$0F                     ; F97B= A9 0F       ).
                sta systemVIA.oraNoHandshake            ; F97D= 8D 4F FE    .O~
                lda #$01                     ; F980= A9 01       ).
                sta systemVIA.ifr            ; F982= 8D 4D FE    .M~
                stx systemVIA.oraNoHandshake            ; F985= 8E 4F FE    .O~
                bit systemVIA.ifr            ; F988= 2C 4D FE    ,M~
                beq LF9AD                    ; F98B= F0 20       p
                txa                          ; F98D= 8A          .
LF98E:
                clc                          ; F98E= 18          .
                adc #$10                     ; F98F= 69 10       i.
                bmi LF9AD                    ; F991= 30 1A       0.
                sta systemVIA.oraNoHandshake            ; F993= 8D 4F FE    .O~
                bit systemVIA.iraNoHandshake            ; F996= 2C 4F FE    ,O~
                bpl LF98E                    ; F999= 10 F3       .s
                pha                          ; F99B= 48          H
LF99C:
                eor $0000,y                  ; F99C= 59 00 00    Y..
                asl a                        ; F99F= 0A          .
                cmp #$01                     ; F9A0= C9 01       I.
                pla                          ; F9A2= 68          h
                bcc LF98E                    ; F9A3= 90 E9       .i
                tax                          ; F9A5= AA          *
LF9A6:
                jsr LF91C                    ; F9A6= 20 1C F9     .y
                cli                          ; F9A9= 58          X
                sei                          ; F9AA= 78          x
                txa                          ; F9AB= 8A          .
                rts                          ; F9AC= 60          `

LF9AD:
                dex                          ; F9AD= CA          J
                bpl LF96E                    ; F9AE= 10 BE       .>
                bra LF9A6                    ; F9B0= 80 F4       .t

osbputEntryPoint:
                jsr LFA97                    ; F9B2= 20 97 FA     .z
                jmp (BPUTV)                  ; F9B5= 6C 18 02    l..

osbgetEntryPoint:
                jsr LFA97                    ; F9B8= 20 97 FA     .z
                jmp (BGETV)                  ; F9BB= 6C 16 02    l..

osgbpbEntryPoint:
                cmp #$05                     ; F9BE= C9 05       I.
                bcs LF9D7                    ; F9C0= B0 15       0.
                cmp #$00                     ; F9C2= C9 00       I.
                beq LF9D7                    ; F9C4= F0 11       p.
                phy                          ; F9C6= 5A          Z
                pha                          ; F9C7= 48          H
                stx $B0                      ; F9C8= 86 B0       .0
                sty $B1                      ; F9CA= 84 B1       .1
                lda ($B0)                    ; F9CC= B2 B0       20
                tay                          ; F9CE= A8          (
                pla                          ; F9CF= 68          h
                jsr LFA97                    ; F9D0= 20 97 FA     .z
LF9D3:
                ply                          ; F9D3= 7A          z
                jmp (GBPBV)                  ; F9D4= 6C 1A 02    l..

LF9D7:
                phy                          ; F9D7= 5A          Z
                phx                          ; F9D8= DA          Z
                pha                          ; F9D9= 48          H
                jsr selectHAZEL                    ; F9DA= 20 BA ED     :m
                lda hazel.currentFS
                jsr selectFS                    ; F9E0= 20 4D FB     M{
                pla                          ; F9E3= 68          h
                plx                          ; F9E4= FA          z
                bra LF9D3                    ; F9E5= 80 EC       .l

; FILESWITCH OSARGS HANDLER
; =========================
osargsEntryPoint:
                cpy #$00                     ; F9E7= C0 00       @.
                bne LFA15                    ; F9E9= D0 2A       P*
                cmp #$04                     ; F9EB= C9 04       I.
                bcs LFA15                    ; F9ED= B0 26       0&
                pha                          ; F9EF= 48          H
                jsr selectHAZEL                    ; Page in Hazel
                pla                          ; F9F3= 68          h
                bne LF9FA                    ; Jump with A<>0
                lda hazel.currentFS      ; OSARGS 0,0 - Read filing system number
                rts

LF9FA:
                dec a                        ; F9FA= 3A          :
                bne LFA0D                    ; F9FB= D0 10       P.
                dec a                        ; OSARGS 1,0 - Read command line address
                sta $02,x                    ; F9FE= 95 02       ..
                sta $03,x                    ; FA00= 95 03       ..
                lda hazel.commandLinePointer+0
                sta $00,x                    ; FA05= 95 00       ..
                lda hazel.commandLinePointer+1
                sta $01,x                    ; FA0A= 95 01       ..
                rts                          ; FA0C= 60          `

LFA0D:
                cmp #$01                     ; FA0D= C9 01       I.
                beq LFA14                    ; OSARGS 2,0 - Read OldNFS flag
                lda hazel.libFS      ; OSARGS 3,0 - Read libfs filing system number
LFA14:
                rts                          ; FA14= 60          `

LFA15:
                jsr LFA97                    ; FA15= 20 97 FA     .z

;-------------------------------------------------------------------------
;
; Call current FS's OSARGS routine, bypassing the FileSwitch stuff.
;
callARGSV:                      ;fa18
                jmp (ARGSV)

;-------------------------------------------------------------------------
;
; Entry point for OSFIND
;
; 
osfindEntryPoint: .proc
                ora #$00        ;A=$00 if a file is to be closed
                beq close       ;branch taken if closing a file
                jsr LFA6E       ;handle something other than a file close
                bra callFINDV

close:
                jsr LFA97                    ; FA24= 20 97 FA     .z
callFINDV:
                jmp (FINDV)                  ; FA27= 6C 1C 02    l..
                .pend
                
;-------------------------------------------------------------------------

osfileEntryPoint:               ;fa2a
                phx                          ; FA2A= DA          Z
                phy                          ; FA2B= 5A          Z
                pha                          ; FA2C= 48          H
                stx stringInputBufferAddress+0
                sty stringInputBufferAddress+1
                ldy #$11                     ; FA31= A0 11        .
LFA33:
                lda ($F2),y                  ; FA33= B1 F2       1r
                sta $02ED,y                  ; FA35= 99 ED 02    .m.
                dey                          ; FA38= 88          .
                bpl LFA33                    ; FA39= 10 F8       .x
                ldx $02ED                    ; FA3B= AE ED 02    .m.
                ldy $02EE                    ; FA3E= AC EE 02    ,n.
                jsr LFA6E                    ; FA41= 20 6E FA     nz
                stx $02ED                    ; FA44= 8E ED 02    .m.
                sty $02EE                    ; FA47= 8C EE 02    .n.
                pla                          ; FA4A= 68          h
                ldx #$ED                     ; FA4B= A2 ED       "m
                ldy #$02                     ; FA4D= A0 02        .
                jsr LFA6B                    ; FA4F= 20 6B FA     kz
                ply                          ; FA52= 7A          z
                sty $F3                      ; FA53= 84 F3       .s
                plx                          ; FA55= FA          z
                stx $F2                      ; FA56= 86 F2       .r
                pha                          ; FA58= 48          H
                ldy #$11                     ; FA59= A0 11        .
LFA5B:
                lda $02ED,y                  ; FA5B= B9 ED 02    9m.
                sta ($F2),y                  ; FA5E= 91 F2       .r
                dey                          ; FA60= 88          .
                cpy #$02                     ; FA61= C0 02       @.
                bcs LFA5B                    ; FA63= B0 F6       0v
                pla                          ; FA65= 68          h
                ldx $F2                      ; FA66= A6 F2       &r
                ldy $F3                      ; FA68= A4 F3       $s
                rts                          ; FA6A= 60          `

LFA6B:
                jmp (FILEV)                  ; FA6B= 6C 12 02    l..

; ??? parse file name, taking into account -FS- syntax?
LFA6E:
                pha                          
                lda stringInputBufferAddress+0
                pha                          
                lda stringInputBufferAddress+1 
                pha                          
                jsr selectHAZEL
                stx stringInputBufferAddress+0
                sty stringInputBufferAddress+1
                ldy #$00                     ; FA7C= A0 00        .
                jsr parseFileNameFS                    ; FA7E= 20 A6 FA     &z
                phy                          ; FA81= 5A          Z
                jsr selectFS                    ; FA82= 20 4D FB     M{
                pla                          ; FA85= 68          h
                clc                          ; FA86= 18          .
                adc $F2                      ; FA87= 65 F2       er
                tax                          ; FA89= AA          *
                ldy $F3                      ; FA8A= A4 F3       $s
                bcc LFA8F                    ; FA8C= 90 01       ..
                iny                          ; FA8E= C8          H
LFA8F:
                pla                          ; FA8F= 68          h
                sta $F3                      ; FA90= 85 F3       .s
                pla                          ; FA92= 68          h
                sta $F2                      ; FA93= 85 F2       .r
                pla                          ; FA95= 68          h
                rts                          ; FA96= 60          `

LFA97:
                phx                          ; FA97= DA          Z
                pha                          ; FA98= 48          H
                jsr selectHAZEL                    ; FA99= 20 BA ED     :m
                jsr LFB23                    ; FA9C= 20 23 FB     #{
                txa                          ; FA9F= 8A          .
                jsr selectFS                    ; FAA0= 20 4D FB     M{
                pla                          ; FAA3= 68          h
                plx                          ; FAA4= FA          z
                rts                          ; FAA5= 60          `

;-------------------------------------------------------------------------
;
; Parse the FS part of a file name, if any, and return the filing
; system to use.
;
; Entry:
;
; (stringInputBufferAddress),y = the string
;
; Exit:
;
; A = FS number to use
;
; (stringInputBufferAddress),y = next char after any tempfs prefix has
; been consumed
parseFileNameFS: .proc
                
                lsr hazel.tempFSFlag
                jsr skipSpacesAndCheckForCRInStringInput
                lda (stringInputBufferAddress),y
                cmp #'-'
                beq parseFSNamePrefix ; branch taken if tempfs syntax
                bit hazel.tempFSFlag
                lda hazel.currentFS
                bvc +
                lda hazel.activeFS
+
                rts

parseFSNamePrefix:
                iny                          ; FABE= C8          H
                ldx #$00                     ; FABF= A2 00       ".
LFAC1:
                lda hazel.fsInfoBlocks,x ;get FS name char
                beq badFilingSystemName
                txa                      ;A=offset in info blocks
                clc
                adc #$08
                sta $B0         ;offset of end of name
                phy
compareFSNameLoop:
                lda (stringInputBufferAddress),y

; validate FS name char. Must be letter or digit.
                
                jsr isLetter
                bcc validFSNameChar           ;branch taken if letter
                cmp #'0'
                bcc notValidFSNameChar       ;branch taken if not digit
                cmp #'9'+1
                bcs notValidFSNameChar       ;branch taken if not digit
validFSNameChar:
                cpx $B0                  
                bcs nextFSInfoBlock ;branch taken if end of FS
                                         ;info block name was reached
                eor hazel.fsInfoBlocks,x
                and #$DF                 ;Z=1 if char matches FS name
                bne nextFSInfoBlock      ;branch taken if not a match
                inx                      ;next fs info block byte
                iny                      ;next input string byte
                bra compareFSNameLoop

nextFSInfoBlock:
                ply                          
                ldx $B0         ;offset of end of name
                inx                          
                inx                          
                inx             ;advance to next entry
                bra LFAC1                    

notValidFSNameChar:

; Matching FS name must be terminated with -. Otherwise, it's bad
; syntax, or perhaps an overly long name.
                
                cmp #'-'
                bne badFilingSystemName
                iny                       ;consume input '-'
                cpx $B0                   
                beq foundFSInfoBlock     ;branch taken if a match due
                                         ;to being right at end of the
                                         ;FS info block name
                lda hazel.fsInfoBlocks,x ;
                cmp #$20
                bne nextFSInfoBlock      ;branch taken if not a match
                                         ;as tthe supplied name was a
                                         ;prefix of this FS's name
foundFSInfoBlock:
                pla
                ldx $B0
                lda hazel.fsInfoBlocks+(fsInfoBlock.fsNumber-(fsInfoBlock.name+size(fsInfoBlock.name))),x
                rts

badFilingSystemName:
                brk
                .text $f8,'Bad filing system name',0
                .pend

;-------------------------------------------------------------------------

LFB23:
                pha                          ; FB23= 48          H
                phy                          ; FB24= 5A          Z
                tya                          ; FB25= 98          .
                ldy #$00                     ; FB26= A0 00        .
LFB28:
                ldx hazel.fsInfoBlocks,y
                beq LFB42                    ; FB2B= F0 15       p.
                cmp hazel.fsInfoBlocks.minHandle,y
                bcc LFB39                    ; FB30= 90 07       ..
                cmp hazel.fsInfoBlocks.maxHandle,y
                bcc LFB47                    ; FB35= 90 10       ..
                beq LFB47                    ; FB37= F0 0E       p.
LFB39:
                pha                          ; FB39= 48          H
                tya                          ; FB3A= 98          .
                clc                          ; FB3B= 18          .
                adc #$0B                     ; FB3C= 69 0B       i.
                tay                          ; FB3E= A8          (
                pla                          ; FB3F= 68          h
                bra LFB28                    ; FB40= 80 E6       .f

LFB42:
                ldx hazel.currentFS
                bra LFB4A                    ; FB45= 80 03       ..

LFB47:
                ldx hazel.fsInfoBlocks.fsNumber,y
LFB4A:
                ply                          ; FB4A= 7A          z
                pla                          ; FB4B= 68          h
                rts                          ; FB4C= 60          `

;-------------------------------------------------------------------------
;
; Select filing system in A.
;
; Entry:
;
; A = FS number
;
selectFS:                               ;fb4d
                cmp hazel.activeFS      ; Check active fs
                beq LFB68               ; Already active fs, return
                phy
                phx
                tay
                dec a
                bne LFB5F       ;taken if not FS 1 (tape)

; ??? - only if trying to select tape FS
                
                lda #$04                     ; FB58= A9 04       ).
                bit $E2                      ; FB5A= 24 E2       $b
                bne LFB5F                    ; FB5C= D0 01       P.
                iny                          ; FB5E= C8          H
LFB5F:
                phy                          ; FB5F= 5A          Z
                ldx #romServiceCallInitialiseFilingSystem
                jsr makeROMServiceCall
                pla                          ; FB65= 68          h
                plx                          ; FB66= FA          z
                ply                          ; FB67= 7A          z
LFB68:
                rts                          ; FB68= 60          `

; FileSwitch FSC
; ==============
fscEntryPoint:
                pha                          ; FB69= 48          H
                jsr selectHAZEL                    ; FB6A= 20 BA ED     :m
                lsr hazel.tempFSFlag
                pla                          ; FB70= 68          h
                pha                          ; FB71= 48          H
                phx                          ; FB72= DA          Z
                asl a                        ; FB73= 0A          .
                tax                          ; FB74= AA          *
                cmp #$17                     ; FB75= C9 17       I.
                bcs LFB7C                    ; FB77= B0 03       0.
                jmp (LFB81,x)                ; FB79= 7C 81 FB    |.{

; Pass to filing system's FSC
; ---------------------------
LFB7C:
                plx                          ; FB7C= FA          z
LFB7D:
                pla                          ; FB7D= 68          h
                jmp (hazel.activeFSCV)    ; FB7E= 6C DA DF    lZ_

; FileSwitch FSC table
; --------------------
LFB81:
                .word LFBA6     ; &00 &FBA6 - *OPT
                .word LFB9F     ; &01 &FB9F - =EOF
                .word LFBB3     ; &02 &FBB3 - */filename
                .word LFB99     ; &03 &FB99 - *command
                .word LFBB3     ; &04 &FBB3 - *RUN
                .word LFBB8     ; &05 &FBB8 - *CAT
                .word LFB7C     ; &06 &FB7C - New fs taking over - pass to fs FSC
                .word LFB7C     ; &07 &FB7C - Handle request     - pass to fs FSC
                .word LFB7C     ; &08 &FB7C - Enable flag        - pass to fs FSC
                .word LFBB8     ; &09 &FBB8 - *EX
                .word LFBB8     ; &0A &FBB8 - *INFO
                .word LFBE8     ; &0B &FBE8 - *RUN from libfs

; FSC 3 - *command
; ================
LFB99:
                plx                          ; FB99= FA          z
                jsr getCommandLinePointer                    ; FB9A= 20 C1 FB     A{
                bra LFB7D                    ; FB9D= 80 DE       .^

; FSC 1 - =EOF
; ============
LFB9F:
                ply                          ; FB9F= 7A          z
                phy                          ; FBA0= 5A          Z
                jsr LFA97                    ; FBA1= 20 97 FA     .z
                bra LFB7C                    ; FBA4= 80 D6       .V

; FSC 0 - *OPT
; ============
LFBA6:
                bit hazel.tempFSFlag      ; Check temporary fs flag
                bvs LFB7C                    ; Pass to current filing system
                lda hazel.currentFS      ; Get current filing system number
LFBAE:
                jsr selectFS                    ; Select filing system
                bra LFB7C                    ; Pass to filing system

; FSC 2, 4 - *filename, *RUN filename
; ===================================
LFBB3:
                plx
                jsr getCommandLinePointer                    ; Skip '*'s and spaces, set command line address
                phx                          ; Continue on to pass to filing system

; FSC 5, 9, 10 - *CAT, *EX, *INFO
; ===============================
LFBB8:
                plx
                asl hazel.tempFSFlag      ;
                jsr LFA6E                    ; ? Check for temporary fs ?
                bra LFB7D                    ; Pass to filing system's FSC

;-------------------------------------------------------------------------
;
; Get command line pointer.
;
; Entry:
;
; X/Y - pointer to CR-terminated command line string
;
; Exit:
;
; X/Y, (hazel.commandLinePointer) - pointer to first non-space char in
; command line string
getCommandLinePointer: .proc ;fbc1
                stx stringInputBufferAddress+0
                sty stringInputBufferAddress+1

; skip spaces. Stop if terminating CR encountered.
                
                ldy #$FF                     ; FBC5= A0 FF        .
-
                iny
                lda (stringInputBufferAddress),y
                cmp #$0D
                beq +
                cmp #' '
                bne -
                
+

; Hmm. Didn't we just do this bit already?
                
                jsr skipSpacesAndCheckForCRInStringInput

; Store address of first non-space char in the HAZEL command line
; pointer.
                
                tya
                clc
                adc stringInputBufferAddress+0
                sta hazel.commandLinePointer+0
                lda stringInputBufferAddress+1
                adc #$00                     
                sta hazel.commandLinePointer+1
                ldy stringInputBufferAddress+1
                ldx stringInputBufferAddress+0
                rts                          
                .pend

; FSC 11 - RUN from libfs
; =======================
LFBE8:
                lda hazel.libFS      ; Is a libfs set?
                bpl LFBAE                    ; Yes, jump to run from libfs
LFBED:
                brk
                .byte 254
                .text "Bad command"
                brk

                .byte $FF                    ; FBFB= FF          .
                .byte $FF                    ; FBFC= FF          .
                .byte $FF                    ; FBFD= FF          .
                .byte $FF                    ; FBFE= FF          .
                .byte $FF                    ; FBFF= FF          .

                .text "(C) 1984 Acorn Computers Ltd."
                .text "Thanks are due to the following contributors to the BBC Computer (among others too numerous to mention):- "
                .text "David Allen,"
                .text "Clive Angel,"
                .text "David Bell,"
                .text "Paul Bond,"
                .text "Allen Boothroyd,"
                .text "Julian Brown,"
                .text "Tudor Brown,"
                .text "Brian Cockburn,"
                .text "Pete Cockerell,"
                .text "Mark Colton,"
                .text "Chris Curry,"
                .text "Joe Dunn,"
                .text "Paul Freakley,"
                .text "Steve Furber,"
                .text "Martyn Gilbert,"
                .text "John Harrison,"
                .text "Hermann Hauser,"
                .text "Mike Hill,"
                .text "John Horton,"
                .text "Neil Johnson,"
                .text "Richard King,"
                .text "David Kitson,"
                .text "Julian Lomberg,"
                .text "Rob Macmillan,"
                .text "Richard Manby,"
                .text "Peter McKenna,"
                .text "Andrew McKernan,"
                .text "Mick Neil,"
                .text "Ian Niblock,"
                .text "Glen Nicholls,"
                .text "Robert Nokes,"
                .text "Richard Page,"
                .text "Steve Parsons,"
                .text "Ed Phipps,"
                .text "John Radcliffe,"
                .text "Rick Rand,"
                .text "Brian Robertson,"
                .text "Richard Russell,"
                .text "Gordon Sage,"
                .text "Terry Scotcher,"
                .text "David Seal,"
                .text "Paul Swindell,"
                .text "Jon Thackray,"
                .text "Hugo Tyson,"
                .text "Adrian Warner,"
                .text "Jess Wills,"
                .text "Roger Wilson,"
                .text "Graham Winterflood."
                .text "   "

                .endblock
                
E_USERV: ; ff00
                jsr extendedVectorEntryPoint
E_BRKV: ; ff03
                jsr extendedVectorEntryPoint
E_IRQ1V: ; ff06
                jsr extendedVectorEntryPoint
E_IRQ2V: ; ff09
                jsr extendedVectorEntryPoint
E_CLIV: ; ff0c
                jsr extendedVectorEntryPoint
E_BYTEV: ; ff0f
                jsr extendedVectorEntryPoint
E_WORDV: ; ff12
                jsr extendedVectorEntryPoint
E_WRCHV: ; ff15
                jsr extendedVectorEntryPoint
E_RDCHV: ; ff18
                jsr extendedVectorEntryPoint
E_FILEV: ; ff1b
                jsr extendedVectorEntryPoint
E_ARGSV: ; ff1e
                jsr extendedVectorEntryPoint
E_BGETV: ; ff21
                jsr extendedVectorEntryPoint
E_BPUTV: ; ff24
                jsr extendedVectorEntryPoint
E_GBPBV: ; ff27
                jsr extendedVectorEntryPoint
E_FINDV: ; ff2a
                jsr extendedVectorEntryPoint
E_FSCV: ; ff2d
                jsr extendedVectorEntryPoint
E_EVENTV: ; ff30
                jsr extendedVectorEntryPoint
E_UPTV: ; ff33
                jsr extendedVectorEntryPoint
E_NETV: ; ff36
                jsr extendedVectorEntryPoint
E_VDUV: ; ff39
                jsr extendedVectorEntryPoint
E_KEYV: ; ff3c
                jsr extendedVectorEntryPoint
E_INSV: ; ff3f
                jsr extendedVectorEntryPoint
E_REMV: ; ff42
                jsr extendedVectorEntryPoint
E_CNPV: ; ff45
                jsr extendedVectorEntryPoint
E_IND1V: ; ff48
                jsr extendedVectorEntryPoint
E_IND2V: ; ff4b
                jsr extendedVectorEntryPoint
E_IND3V: ; ff4e
                jsr extendedVectorEntryPoint
                
extendedVectorEntryPoint:
                pha                          ; FF51= 48          H
                pha                          ; FF52= 48          H
                pha                          ; FF53= 48          H
                pha                          ; FF54= 48          H
                pha                          ; FF55= 48          H
                pha                          ; FF56= 48          H
                php                          ; FF57= 08          .
                pha                          ; FF58= 48          H
                phx                          ; FF59= DA          Z
                phy                          ; FF5A= 5A          Z
                tsx                          ; FF5B= BA          :
                lda #$FF                     ; FF5C= A9 FF       ).
                sta $0108,x                  ; FF5E= 9D 08 01    ...
                lda #$8C                     ; FF61= A9 8C       ).
                sta $0107,x                  ; FF63= 9D 07 01    ...
                ldy $010B,x                  ; FF66= BC 0B 01    <..
                lda extendedVectorSpace-2,y                  ; FF69= B9 9D 0D    9..
                sta $0105,x                  ; FF6C= 9D 05 01    ...
                lda extendedVectorSpace-1,y                  ; FF6F= B9 9E 0D    9..
                sta $0106,x                  ; FF72= 9D 06 01    ...
                lda $F4                      ; FF75= A5 F4       %t
                sta $010A,x                  ; FF77= 9D 0A 01    ...
                lda ACCCON                    ; FF7A= AD 34 FE    -4~
                sta $0109,x                  ; FF7D= 9D 09 01    ...
                jsr mos.selectHAZEL          ; FF80= 20 BA ED     :m
                lda extendedVectorSpace,y                  ; FF83= B9 9F 0D    9..
                jsr mos.selectROMA           ; FF86= 20 92 E5     .e
                ply                          ; FF89= 7A          z
                plx                          ; FF8A= FA          z
                pla                          ; FF8B= 68          h
                rti                          ; FF8C= 40          @

                php                          ; FF8D= 08          .
                pha                          ; FF8E= 48          H
                phx                          ; FF8F= DA          Z
                tsx                          ; FF90= BA          :
                lda $0102,x                  ; FF91= BD 02 01    =..
                sta $0106,x                  ; FF94= 9D 06 01    ...
                lda $0103,x                  ; FF97= BD 03 01    =..
                sta $0107,x                  ; FF9A= 9D 07 01    ...
                plx                          ; FF9D= FA          z
                pla                          ; FF9E= 68          h
                pla                          ; FF9F= 68          h
                pla                          ; FFA0= 68          h
                jsr mos.selectMOSOrHAZEL     ; FFA1= 20 B0 ED     0m
                pla                          ; FFA4= 68          h
                jsr mos.selectROMA           ; FFA5= 20 92 E5     .e
                pla                          ; FFA8= 68          h
                plp                          ; FFA9= 28          (
rtsFFAA:
                rts                          ; FFAA= 60          `

osbyte96:
                ldy $fe00,x
                rts

osbyte9D:
                txa
                bra OSBPUT

                brk

OSWRSC:
                jmp mos.oswrscEntryPoint ; FFB3
                .byte mos.defaultVectorTable.end-mos.defaultVectorTable ;
                .word mos.defaultVectorTable ;
OSRDSC:
                jmp mos.osrdscEntryPoint ; FFB9
VDUCHR:
                jmp mos.vduChrEntryPoint ; FFBC
OSEVEN:
                jmp mos.eventEntryPoint ; FFBF
GSINIT:
                jmp mos.gsinitEntryPoint ; FFC2
GSREAD:
                jmp mos.gsreadEntryPoint ; FFC5
NVRDCH:
                jmp mos.osrdchEntryPoint                    ; FFC8
NVWRCH:
                jmp mos.oswrchEntryPoint                    ; FFCB
OSFIND:
                jmp mos.osfindEntryPoint                    ; FFCE
OSGBPB:
                jmp mos.osgbpbEntryPoint                    ; FFD1
OSBPUT:
                jmp mos.osbputEntryPoint                    ; FFD4
OSBGET:
                jmp mos.osbgetEntryPoint                    ; FFD7
OSARGS:
                jmp mos.osargsEntryPoint ; FFDA
OSFILE:         
                jmp mos.osfileEntryPoint ; FFDD
OSRDCH:
                jmp (RDCHV)                  ; FFE0
OSASCI:
                cmp #$0D                     ; FFE3
                bne OSWRCH                   ; FFE5
OSNEWL:
                lda #$0A                     ; FFE7
                jsr OSWRCH                   ; FFE9
                lda #$0D                     ; FFEC
OSWRCH:
                jmp (WRCHV)                  ; FFEE
OSWORD:
                jmp (WORDV)                  ; FFF1
OSBYTE:
                jmp (BYTEV)                  ; FFF4
OSCLI:
                jmp (CLIV)                  ; FFF7

LFFFA:                                       ; FFFA NMIV
                .word nmiEntryPoint
LFFFC:                                       ; FFFB RESETV
                .word mos.resetEntryPoint
LFFFE:                                       ; FFFE IRQV
                .word mos.irqEntryPoint

                .send mos
                