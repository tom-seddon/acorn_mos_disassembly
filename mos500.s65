                .include "hardware.s65"
                .include "mos_workspace.s65"
                .include "terminal_workspace.s65"

version=500
                
*=$8000
                .dsection utils
                .cwarn *>$c000,'utils ROM is too large'
                
*=$c000
                .dsection mos
                ; there's no need for a size check here - 64tass gives
                ; you an error if the code would go past the 64 K
                ; barrier.

;-------------------------------------------------------------------------

ext_B3A6=$b3a6
ext_AECC=$aecc
ext_AF4F=$af4f
;utils_873F=$873f                  ;;read ROM unplugged status
utils_8A64=$8a64                  ;
utils_8674=$8674 ;command line UI?
osbyteAndOSWORDRoutineTable=$8fa8 ;*sigh*
utils_9878=$9878                ;osword $0e entry point
utils_9DCA=$9dca

                ; temp
oswordRoutineTable=$8fa8
utils_9F56=$9f56
utils_A09D=$a09d
utils_8D0F=$8d0f
utils_8EDC=$8edc
utils_8F8C=$8f8c
utils_8BF2=$8bf2
utils_8E2E=$8e2e
utils_9E58=$9e58
utils_ADD7=$add7
utils_AD9B=$ad9b
readUsePrinterIgnoreChar=$8ba1
utils_836D=$836d
utils_9DE1=$9de1
utils_9DF8=$9df8
utils_9ECA=$9eca
utils_9E99=$9e99
starSRDATA=$8cad
starSRLOAD=$8dca
starSRREAD=$8d7f
starSRROM=$8cad
starSRSAVE=$8dca
starSRWRITE=$8d7f
utils_8A8F=$8a8f ;match input against command table
fetchCommandTableByte=$8ace

setProportional=1000
printProportional=1000
setSwitched=1000
printSwitched=1000
setStick=1000
printStick=1000
soundParameterTable=1000

;-------------------------------------------------------------------------

                .section utils
                .include "terminal.s65"
                .endsection

                .section mos
                .include "mos.s65"
                .endsection
