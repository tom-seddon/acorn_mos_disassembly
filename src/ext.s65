; -*- comment-column:45; -*-

plotEllipseOutline:
                ; https://tobylobster.github.io/GXR-pages/gxr/S-s23.html#SP1
                jsr     ellipseInitialisation
                .if version<500
                bra     startEllipseOutline
                .elsif version>=500
                jmp startEllipseOutline
                .endif

ellipseOutlineLoop:
                jsr     updateEllipseIncrementally

startEllipseOutline:
                ldx     #VDUVariables.ew.pointC
                ldy     #VDUVariables.ew.pointA
                jsr     sortVDUVariableWords
                .if version!=350
                ldx     #VDUVariables.ew.leftPoint
                .endif
                .if version<500&&version!=350
                lda     vduv+1,x
                .else
                lda vduv.ew.leftPoint+1
                .endif
                sta     vduv.ew.currentOffsetX+1
                .if version<500&&version!=350
                lda     vduv+0,x
                tax
                .else
                ldx vduv.ew.leftPoint+0
                .endif

ellipseOutlineContinueRowLoop:
                stx     vduv.ew.currentOffsetX+0
                jsr     outlineEllipsePlotOnePointAndReflection
                inx
                bne     +
                inc     vduv.ew.currentOffsetX+1
+
                txa
                cmp     vduv+0,y
                lda     vduv.ew.currentOffsetX+1
                sbc     vduv+1,y
                bmi     ellipseOutlineContinueRowLoop
                
                .if version<500&&version!=350
                ldx     #VDUVariables.ew.pointD
                ldy     #VDUVariables.ew.pointB
                jsr     sortVDUVariableWords
                ldy     #VDUVariables.ew.rightPoint
                lda     vduv+1,y
                sta     vduv.ew.currentOffsetX+1
                lda     vduv+0,y
                tay

LBA46:
                sty     vduv.ew.currentOffsetX+0
                jsr     outlineEllipsePlotOnePointAndReflection
                tya
                bne     +
                dec     vduv.ew.currentOffsetX+1
+
                dey
                clc
                tya
                sbc     vduv+0,x
                lda     vduv.ew.currentOffsetX+1
                sbc     vduv+1,x
                bpl     LBA46
                lda     vduv.workspace._2F
                bpl     ellipseOutlineLoop
                bra     LBA7B

                .else

                ldy vduv.ew.currentOffsetX+1
                txa
                bne +
                dey
+
                dex
                stx vduv.ew.pointC+0
                sty vduv.ew.pointC+1
                txa
                cmp vduv.ew.rightPoint+0
                tya
                sbc vduv.ew.rightPoint+1
                bpl LAF47
                ldx #VDUVariables.ew.pointD
                ldy #VDUVariables.ew.pointB
                jsr sortVDUVariableWords
                ldy #VDUVariables.ew.pointC
                jsr sortVDUVariableWords
                lda vduv.ew.rightPoint+1
                sta vduv.ew.currentOffsetX+1
                lda vduv.ew.rightPoint+0
                tax
LAF2D:
                stx vduv.ew.currentOffsetX+0
LAF30:
                jsr outlineEllipsePlotOnePointAndReflection
                txa
                bne +
                dec vduv.ew.currentOffsetX+1
+
                dex
                clc
                txa
                sbc vduv+0,y
                lda vduv.ew.currentOffsetX+1
                sbc vduv+1,y
                bpl LAF2D

LAF47:
                lda vduv.workspace._2F
                bpl ellipseOutlineLoop
                .if version==350
                bra LBA7B
                .else
                jmp LBA7B
                .endif

                .endif

;-------------------------------------------------------------------------

plotEllipseFilled:
                jsr     ellipseInitialisation
                bra     startFilledEllipse


filledEllipseLoop:
                jsr     updateEllipseIncrementally

startFilledEllipse:
                ldx     #VDUVariables.ew.rightPoint
                ldy     #VDUVariables.ew.leftPoint
                jsr     fillEllipseOneRowAndReflection
                lda     vduv.workspace._2F
                bpl     filledEllipseLoop

LBA7B:
                inc     ellipseCountHeight+0
                bne     LBA83
                inc     ellipseCountHeight+1

LBA83:
                ldx     #VDUVariables.ew.pointB
                ldy     #VDUVariables.ew.pointA

fillEllipseOneRowAndReflection:
                phx
                phy
                clc
                lda     vduv.oldGraphicsCursorPixelsX+0
                adc     vduv+0,y
                sta     vduv.workspace._40
                lda     vduv.oldGraphicsCursorPixelsX+1
                adc     vduv+1,y
                sta     vduv.workspace._41
                clc
                lda     vduv.oldGraphicsCursorPixelsX+0
                adc     vduv+0,x
                sta     vduv.workspace._44
                lda     vduv.oldGraphicsCursorPixelsX+1
                adc     vduv+1,x
                sta     vduv.workspace._45
                clc
                lda     vduv.oldGraphicsCursorPixelsY+0
                adc     ellipseCountHeight+0
                tay
                lda     vduv.oldGraphicsCursorPixelsY+1
                adc     ellipseCountHeight+1
                jsr     LBAFE
                ply
                plx
                lda     ellipseCountHeight+0
                ora     ellipseCountHeight+1
                beq     rtsBB11
                sec
                lda     vduv.oldGraphicsCursorPixelsX+0
                sbc     vduv+0,x
                sta     vduv.workspace._40
                lda     vduv.oldGraphicsCursorPixelsX+1
                sbc     vduv+1,x
                sta     vduv.workspace._41
                sec
                lda     vduv.oldGraphicsCursorPixelsX+0
                sbc     vduv+0,y
                sta     vduv.workspace._44
                lda     vduv.oldGraphicsCursorPixelsX+1
                sbc     vduv+1,y
                sta     vduv.workspace._45
                sec
                lda     vduv.oldGraphicsCursorPixelsY+0
                sbc     ellipseCountHeight+0
                tay
                lda     vduv.oldGraphicsCursorPixelsY+1
                sbc     ellipseCountHeight+1
                
LBAFE:
                sty     vduv.workspace._46
                sty     vduv.ew.currentOffsetX+0
                sta     vduv.workspace._47
                sta     vduv.ew.currentOffsetX+1
                ldx     #VDUVariables.ew.pointF
                ldy     #VDUVariables.ew.pointE
                jmp     LDAE8





rtsBB11:
                rts




LBB12:
                pla
                pla
                stz     ellipseCountHeight+0
                stz     ellipseCountHeight+1
                ldx     #VDUVariables.workspace._29
                ldy     #VDUVariables.ew.pointE
                jsr     negateVDUVariableXIntoY
                ldx     #VDUVariables.workspace._29
                ldy     #VDUVariables.ew.pointF
                jsr     copyTwoBytesWithinVDUVariables
                ldx     #VDUVariables.ew.pointF
                ldy     #VDUVariables.ew.pointE
                jmp     fillEllipseOneRowAndReflection

ellipseInitialisation:
                ; https://tobylobster.github.io/GXR-pages/gxr/S-s23.html#SP5
                ldy     #VDUVariables.graphicsCursorPixelsX
                ldx     #VDUVariables.oldGraphicsCursorPixelsX
                lda     #VDUVariables.workspace._29
                jsr     LD678
                stz     vduv.ew.aspectRatio+0
                ldy     #VDUVariables.queueEnd-2
                ldx     #VDUVariables.oldGraphicsCursorPixelsY
                lda     #VDUVariables.ew.halfHeightCounter
                jsr     LD678
                lda     vduv.ew.halfHeightCounter+0
                ora     vduv.ew.halfHeightCounter+1
                beq     LBB12
                rol     a
                sta     L8841
                ldy     #VDUVariables.queueEnd-4
                ldx     #VDUVariables.oldGraphicsCursorPixelsX
                lda     #VDUVariables.ew.shear+1
                jsr     LD678
                stz     vduv.ew.shear+0
                rol     a
                eor     ellipseSignFlag
                and     #1
                sta     ellipseSignFlag
                ldx     #VDUVariables.ew.aspectRatio
                ldy     #VDUVariables.ew.halfHeightCounter
                jsr     LBD83
                ldx     #VDUVariables.ew.shear
                ldy     #VDUVariables.ew.halfHeightCounter
                jsr     LBD83
                lda     L8841
                beq     LBB86
                sec
                ldy     #$fd

LBB7B:
                lda     #0
                sbc     vduv.workspace._2B-$fd,y
                sta     vduv.workspace._2B-$fd,y
                iny
                bne     LBB7B

LBB86:
                lda     vduv.workspace._2E
                sta     L883C
                lda     vduv.workspace._2F
                jsr     LD4CE
                ldy     #3

LBB94:
                lda     $8840,y
                sta     vduv.workspace._30,y
                dey
                bpl     LBB94
                ldx     #$a

LBB9F:
                stz     $8842,x
                dex
                bpl     LBB9F
                inc     L8845
                jsr     updateEllipse
                jsr     updateEllipse
                stz     ellipseCountHeight+0
                stz     ellipseCountHeight+1
                ldx     #VDUVariables.ew.pointA
                ldy     #VDUVariables.ew.pointD
                jsr     negateVDUVariableXIntoY
                ldx     #VDUVariables.ew.pointB
                ldy     #VDUVariables.ew.pointC
                jsr     negateVDUVariableXIntoY
                ldx     #VDUVariables.ew.pointA
                ldy     #VDUVariables.ew.rightPoint
                jsr     compareVDUVariableWords
                bpl     LBBD2
                jsr     copyTwoBytesWithinVDUVariables
                ldx     #VDUVariables.ew.pointD
                bra     LBBE4


LBBD2:
                ldx     #VDUVariables.ew.leftPoint
                ldy     #VDUVariables.ew.pointB
                jsr     compareVDUVariableWords
                bpl     rtsBC17
                ldx     #VDUVariables.ew.pointC
                ldy     #VDUVariables.ew.rightPoint
                jsr     copyTwoBytesWithinVDUVariables
                ldx     #VDUVariables.ew.pointB

LBBE4:
                ldy     #VDUVariables.ew.leftPoint
                jmp     copyTwoBytesWithinVDUVariables

;-------------------------------------------------------------------------
;
; https://tobylobster.github.io/GXR-pages/gxr/S-s23.html#SP6
;

updateEllipseIncrementally:
                jsr     updateEllipse
                ldy     #VDUVariables.ew.rightPoint
                ldx     #VDUVariables.ew.pointA
                jsr     compareVDUVariableWords
                bpl     LBC02
                lda     vduv.ew.pointA+0
                sta     vduv.ew.rightPoint+0
                lda     vduv.ew.pointA+1
                sta     vduv.ew.rightPoint+1
                rts

LBC02:
                ldx     #VDUVariables.ew.leftPoint
                ldy     #VDUVariables.ew.pointB
                jsr     compareVDUVariableWords
                bpl     rtsBC17
                lda     vduv.ew.pointB+0
                sta     vduv.ew.leftPoint+0
                lda     vduv.ew.pointB+1
                sta     vduv.ew.leftPoint+1

rtsBC17:
                rts

;-------------------------------------------------------------------------
;
; https://tobylobster.github.io/GXR-pages/gxr/S-s23.html#SP7
;

updateEllipse:
                ldx     #VDUVariables.ew.leftPoint
                ldy     #VDUVariables.ew.pointC
                jsr     copyFourBytesWithinVDUVariables
                ldx     #VDUVariables.ew.pointA
                ldy     #VDUVariables.ew.leftPoint
                jsr     copyFourBytesWithinVDUVariables
                
                sec
                lda     vduv.ew.halfHeightSquared+0
                sbc     ellipseCountSquares+0
                sta     sqrtNumber+2
                lda     vduv.ew.halfHeightSquared+1
                sbc     ellipseCountSquares+1
                sta     sqrtNumber+3
                lda     vduv.ew.halfHeightSquared+2
                sbc     ellipseCountSquares+2
                sta     sqrtNumber+4
                lda     vduv.ew.halfHeightSquared+3
                sbc     ellipseCountSquares+3
                sta     sqrtNumber+5
                stz     sqrtNumber+1
                stz     sqrtNumber+0
                jsr     LBE4B
                
                lda     vduv.ew.aspectRatio+0
                sta     multiplier+0
                lda     vduv.ew.aspectRatio+1
                sta     multiplier+1
                lda     vduv.ew.aspectRatio+2
                sta     multiplier+2
                jsr     multiply24x24
                
                clc
                lda     ellipseAccumulatedShear+0
                adc     product+1
                php
                lda     ellipseAccumulatedShear+1
                adc     product+2
                sta     vduv.ew.pointB+0
                lda     ellipseAccumulatedShear+2
                adc     product+3
                sta     vduv.ew.pointB+1
                plp
                bpl     +
                inc     vduv.ew.pointB+0
                bne     +
                inc     vduv.ew.pointB+1
+
                sec
                lda     ellipseAccumulatedShear+0
                sbc     product+1
                php
                lda     ellipseAccumulatedShear+1
                sbc     product+2
                sta     vduv.ew.pointA+0
                lda     ellipseAccumulatedShear+2
                sbc     product+3
                sta     vduv.ew.pointA+1
                plp
                bpl     +
                inc     vduv.ew.pointA+0
                bne     +
                inc     vduv.ew.pointA+1
+
                
                clc
                lda     ellipseCountOddNumbers+0
                adc     ellipseCountSquares+0
                sta     ellipseCountSquares+0
                lda     ellipseCountOddNumbers+1
                adc     ellipseCountSquares+1
                sta     ellipseCountSquares+1
                lda     ellipseCountOddNumbers+2
                adc     ellipseCountSquares+2
                sta     ellipseCountSquares+2
                lda     ellipseCountOddNumbers+3
                adc     ellipseCountSquares+3
                sta     ellipseCountSquares+3
                clc
                lda     #2
                adc     ellipseCountOddNumbers+0
                sta     ellipseCountOddNumbers+0
                bcc     +
                inc     ellipseCountOddNumbers+1
                bne     +
                inc     ellipseCountOddNumbers+2
                bne     +
                inc     ellipseCountOddNumbers+3
+
                clc
                lda     ellipseAccumulatedShear+0
                adc     vduv.ew.shear+0
                sta     ellipseAccumulatedShear+0
                lda     ellipseAccumulatedShear+1
                adc     vduv.ew.shear+1
                sta     ellipseAccumulatedShear+1
                lda     ellipseAccumulatedShear+2
                adc     vduv.ew.shear+2
                sta     ellipseAccumulatedShear+2
                inc     ellipseCountHeight+0
                bne     +
                inc     ellipseCountHeight+1
+
                lda     vduv.workspace._2E
                bne     +
                dec     vduv.workspace._2F
+
                dec     vduv.workspace._2E
                rts

;-------------------------------------------------------------------------
; 
; https://tobylobster.github.io/GXR-pages/gxr/S-s23.html#SP8
; 
outlineEllipsePlotOnePointAndReflection: .block
                phx
                phy

                clc
                lda     vduv.oldGraphicsCursorPixelsX+0
                adc     vduv.ew.currentOffsetX+0
                sta     vduv.ew.plotPointX+0
                lda     vduv.oldGraphicsCursorPixelsX+1
                adc     vduv.ew.currentOffsetX+1
                sta     vduv.ew.plotPointX+1
                
                clc
                lda     vduv.oldGraphicsCursorPixelsY+0
                adc     ellipseCountHeight+0
                sta     vduv.ew.plotPointY+0
                lda     vduv.oldGraphicsCursorPixelsY+1
                adc     ellipseCountHeight+1
                sta     vduv.ew.plotPointY+1
                
                ldx     #VDUVariables.ew.plotPointX
                jsr     plotPointInternal
                
                lda     ellipseCountHeight+0
                ora     ellipseCountHeight+1
                beq     done
                
                sec
                lda     vduv.oldGraphicsCursorPixelsX+0
                sbc     vduv.ew.currentOffsetX+0
                sta     vduv.ew.plotPointX+0
                lda     vduv.oldGraphicsCursorPixelsX+1
                sbc     vduv.ew.currentOffsetX+1
                sta     vduv.ew.plotPointX+1
                
                sec
                lda     vduv.oldGraphicsCursorPixelsY+0
                sbc     ellipseCountHeight+0
                sta     vduv.ew.plotPointY+0
                lda     vduv.oldGraphicsCursorPixelsY+1
                sbc     ellipseCountHeight+1
                sta     vduv.ew.plotPointY+1
                
                ldx     #VDUVariables.ew.plotPointX
                jsr     plotPointInternal
done:
                ply
                plx
                rts
                .endblock

;-------------------------------------------------------------------------

LBD83:
                phx
                lda     vduv+0,y
                sta     L883F
                lda     vduv+1,y
                sta     L8840
                ldy     #$18 ;not VDUVariables.textCursorXPosition?
                lda     vduv+0,x
                sta     L883A
                lda     vduv+1,x
                sta     L883B
                lda     vduv+2,x
                bmi     LBDAF

LBDA3:
                dey
                beq     LBDF8
                asl     L883A
                rol     L883B
                rol     a
                bpl     LBDA3

LBDAF:
                sta     L883C
                stz     L883D
                stz     L883E
                clc

LBDB9:
                rol     L883A
                rol     L883B
                rol     L883C
                rol     L883D
                rol     L883E
                sec
                lda     L883D
                sbc     L883F
                tax
                lda     L883E
                sbc     L8840
                bcc     LBDDE
                stx     L883D
                sta     L883E

LBDDE:
                dey
                bne     LBDB9
                plx
                lda     L883A
                rol     a
                sta     vduv+0,x
                lda     L883B
                rol     a
                sta     vduv+1,x
                lda     L883C
                rol     a
                sta     vduv+2,x
                rts


LBDF8:
                plx
                rts




;-------------------------------------------------------------------------
;
; https://tobylobster.github.io/GXR-pages/gxr/S-s24.html#SP3
; 

negateVDUVariableXIntoY:
                sec
                lda     #0
                sbc     vduv+0,x
                sta     vduv+0,y
                lda     #0
                sbc     vduv+1,x
                sta     vduv+1,y
                rts

;-------------------------------------------------------------------------

multiply24x24:
                ldy     #23
                stz     product+5
                stz     product+4
                stz     product+3
                lsr     multiplier+2
                ror     multiplier+1
                ror     multiplier+0

LBE20:
                bcc     LBE3E
                clc
                lda     multiplicand+0
                adc     product+3
                sta     product+3
                lda     multiplicand+1
                adc     product+4
                sta     product+4
                lda     multiplicand+2
                adc     product+5
                sta     product+5

LBE3E:
                clc
                ldx     #5

LBE41:
                ror     product,x
                dex
                bpl     LBE41
                dey
                bpl     LBE20
                rts

;-------------------------------------------------------------------------

LBE4B:
                ldx     #3

LBE4D:
                stz     $8830,x
                stz     ZTEMPB,x
                dex
                bpl     LBE4D
                ldy     #5

LBE57:
                lda     $8834,y
                sta     ZTEMP+0
                phy
                ldy     #3

LBE5F:
                phy
                sec
                rol     L8830
                rol     L8831
                rol     L8832
                rol     L8833
                ldx     #1
                lda     ZTEMPB+0

LBE71:
                asl     ZTEMP+0
                rol     a
                rol     ZTEMPB+1
                rol     ZTEMPC+0
                rol     ZTEMPC+1
                dex
                bpl     LBE71
                sta     ZTEMPB+0
                sec
                sbc     L8830
                pha
                lda     ZTEMPB+1
                sbc     L8831
                tax
                lda     ZTEMPC+0
                sbc     L8832
                tay
                lda     ZTEMPC+1
                sbc     L8833
                bcc     LBEA5
                sta     ZTEMPC+1
                sty     ZTEMPC+0
                stx     ZTEMPB+1
                pla
                sta     ZTEMPB+0
                inc     L8830
                bra     LBEA9


LBEA5:
                pla
                dec     L8830

LBEA9:
                ply
                dey
                bpl     LBE5F
                ply
                dey
                bpl     LBE57
                lsr     L8833
                ror     L8832
                ror     L8831
                ror     L8830
                rts

;-------------------------------------------------------------------------
;
; 184–191 = Move/copy rectangle [MasRef E.3-31]
;
; The normal interpretation of <p> does not apply in this group of
; plot codes and the meanings are as follows:
;
; 184, 185 - %1011100x - Move rectangle, relative
; 186, 187 - %1011101x - Copy rectangle, relative
; 188, 189 - %1011110x - Move rectangle, absolute
; 190, 191 - %1011111x - Copy rectangle, absolute
;
plotMoveOrCopyRectangle:
                and     #2
                sta     vduv.mocr.copy

                jsr     prepareForPlotBackground

                ldx     #VDUVariables.oldGraphicsCursorPixels
                jsr     prepareAABB

                ; mocr.dest.min = PLOT coordinate
                ldy     #VDUVariables.mocr.dest.min
                jsr     copyLastFourVDUQueueBytes
                sty     ZTEMP+0              ;Y=VDUVariables.mocr.dest.max

                ; dest.max = dest.min + (src.max - src.min)
                ldx     #VDUVariables.mocr.dest.min
                ldy     #VDUVariables.mocr.src.max
                lda     #VDUVariables.mocr.src.min
                jsr     addRegionDimensionsToVDUVariableCoordinates

                ;
                ldx     #VDUVariables.mocr.src.min
                ldy     #VDUVariables.mocr.dest
                jsr     sortVDUVariableWords

                phy
                phx
                ldy     #0                   ;get outcode for X axis
                jsr     getOutcodeForAxis
                beq     LBEF3                ;taken if 
                lsr     a
                beq     LBEF1
                pla

LBEEF:
                pla
                rts


LBEF1:
                ldx     #0

LBEF3:
                pla

                ldy     #VDUVariables.mocr.L30
                sty     ZTEMP+0
                ldy     #VDUVariables.mocr.src.min
                jsr     addRegionDimensionToVDUVariableCoordinate

                ldy     #VDUVariables.ew.pointA
                sty     ZTEMP+0

                ldy     #VDUVariables.mocr.dest.min
                jsr     addRegionDimensionToVDUVariableCoordinate
                
                pla
                clc
                adc     #4
                tax
                phx
                ldy     #0
                jsr     getOutcodeForAxis
                beq     LBF18
                lsr     a
                beq     LBEEF
                ldx     #4

LBF18:
                pla
                ldy     #VDUVariables.mocr.L40
                sty     ZTEMP+0
                ldy     #VDUVariables.mocr.dest.max.x
                jsr     addRegionDimensionToVDUVariableCoordinate
                lda     vduv.mocr.L40
                cmp     vduv.mocr.L3C
                lda     vduv.mocr.L40+1
                sbc     vduv.mocr.L3C+1
                bpl     LBF40
                lda     vduv.mocr.copy
                bne     LBF38
                jsr     LC420

LBF38:
                ldx     #VDUVariables.mocr.dest
                jsr     copyEightBytesToWorkspace28
                jmp     LC420


LBF40:
                stz     vduv.mocr.L47
                lda     vduv.mocr.L30
                and     vduv.pixelsPerByteMinusOne
                sta     ZTEMP+0
                lda     vduv.mocr.L3C
                and     vduv.pixelsPerByteMinusOne
                sec
                sbc     ZTEMP+0
                bpl     LBF5C
                dec     vduv.mocr.L47
                and     vduv.pixelsPerByteMinusOne

LBF5C:
                sta     vduv.ew.currentOffsetX+1
                pha
                eor     #$ff
                inc     a
                and     vduv.pixelsPerByteMinusOne
                sta     vduv.mocr.shiftToNextByte
                pla
                clc
                adc     vduv.pixelsPerByteMinusOne
                tax
                lda     LE120,x
                sta     ZTEMPD+1
                ldx     #VDUVariables.mocr.L3C
                ldy     #VDUVariables.mocr.L40
                jsr     LDA9C
                sta     vduv.mocr.L44
                lda     ZMASK
                sta     vduv.mocr.L46
                lda     ZTEMPB+0
                sta     ZTEMPD+0
                ldx     #0
                jsr     LBFE6
                beq     LBFCE
                lda     vduv.mocr.src.min.y+0
                cmp     vduv.mocr.dest.min.y+0
                lda     vduv.mocr.src.min.y+1
                sbc     vduv.mocr.dest.min.y+1
                bvc     LBF9E
                eor     #$80

LBF9E:
                bmi     LBFB1

LBFA0:
                jsr     LDB62
                ldx     #0
                jsr     LBFD1
                ldx     #$c
                jsr     LBFD1
                bne     LBFA0
                bra     LBFCE


LBFB1:
                ldx     #VDUVariables.mocr.src.min.y
                ldy     #VDUVariables.mocr.src.max.y
                jsr     exchangeTwoVDUBytes
                ldx     #VDUVariables.mocr.dest.min.y
                ldy     #VDUVariables.mocr.dest.max.y
                jsr     exchangeTwoVDUBytes

LBFBF:
                jsr     LDB62
                ldx     #0
                jsr     LBFDB
                ldx     #$c
                jsr     LBFDB
                bne     LBFBF

LBFCE:
                jmp     LDB62

LBFD1:
                inc     vduv.mocr.src.min.y+0,x
                bne     LBFE6
                inc     vduv.mocr.src.min.y+1,x
                bra     LBFE6

LBFDB:
                lda     vduv.mocr.src.min.y+0,x
                bne     LBFE3
                dec     vduv.mocr.src.min.y+1,x

LBFE3:
                dec     vduv.mocr.src.min.y+0,x
LBFE6:
                lda     vduv.mocr.src.min.y+0,x
                cmp     vduv.mocr.src.max.y+0,x
                bne     rtsBFF4
                lda     vduv.mocr.src.min.y+1,x
                cmp     vduv.mocr.src.max.y+1,x

rtsBFF4:
                rts

                .if version!=400&&version!=350
; Hmm. What even is this???
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .byte $ff
                .endif
